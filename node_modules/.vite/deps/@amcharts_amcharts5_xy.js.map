{
  "version": 3,
  "sources": ["../../../../node_modules/src/.internal/charts/xy/XYChartDefaultTheme.ts", "../../../../node_modules/src/.internal/charts/xy/XYChart.ts", "../../../../node_modules/src/.internal/charts/xy/XYChartScrollbar.ts", "../../../../node_modules/src/.internal/charts/xy/axes/Grid.ts", "../../../../node_modules/src/.internal/charts/xy/XYCursor.ts", "../../../../node_modules/src/.internal/charts/xy/series/XYSeries.ts", "../../../../node_modules/src/.internal/charts/xy/series/BaseColumnSeries.ts", "../../../../node_modules/src/.internal/charts/xy/axes/Axis.ts", "../../../../node_modules/src/.internal/charts/xy/axes/CategoryAxis.ts", "../../../../node_modules/src/.internal/charts/xy/axes/CategoryDateAxis.ts", "../../../../node_modules/src/.internal/charts/xy/axes/ValueAxis.ts", "../../../../node_modules/src/.internal/charts/xy/axes/DateAxis.ts", "../../../../node_modules/src/.internal/charts/xy/axes/GaplessDateAxis.ts", "../../../../node_modules/src/.internal/charts/xy/axes/DurationAxis.ts", "../../../../node_modules/src/.internal/charts/xy/axes/AxisBullet.ts", "../../../../node_modules/src/.internal/charts/xy/axes/AxisLabel.ts", "../../../../node_modules/src/.internal/charts/xy/axes/AxisLabelRadial.ts", "../../../../node_modules/src/.internal/charts/xy/axes/AxisTick.ts", "../../../../node_modules/src/.internal/charts/xy/axes/AxisRenderer.ts", "../../../../node_modules/src/.internal/charts/xy/axes/AxisRendererX.ts", "../../../../node_modules/src/.internal/charts/xy/axes/AxisRendererY.ts", "../../../../node_modules/src/.internal/charts/xy/series/Candlestick.ts", "../../../../node_modules/src/.internal/charts/xy/series/ColumnSeries.ts", "../../../../node_modules/src/.internal/charts/xy/series/CandlestickSeries.ts", "../../../../node_modules/src/.internal/charts/xy/series/OHLC.ts", "../../../../node_modules/src/.internal/charts/xy/series/OHLCSeries.ts", "../../../../node_modules/src/.internal/charts/xy/series/LineSeries.ts", "../../../../node_modules/src/.internal/core/render/MonotoneYTension.ts", "../../../../node_modules/src/.internal/charts/xy/series/SmoothedYLineSeries.ts", "../../../../node_modules/src/.internal/core/render/MonotoneXTension.ts", "../../../../node_modules/src/.internal/charts/xy/series/SmoothedXLineSeries.ts", "../../../../node_modules/src/.internal/charts/xy/series/SmoothedXYLineSeries.ts", "../../../../node_modules/src/.internal/charts/xy/series/StepLineSeries.ts"],
  "sourcesContent": ["import type { ITimeInterval } from \"../../core/util/Time\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IValueAxisDataItem, ValueAxis } from \"./axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\r\nimport type { DateAxis } from \"./axes/DateAxis\";\r\nimport type { ICategoryAxisDataItem } from \"./axes/CategoryAxis\";\r\nimport type { IGaplessDateAxisDataItem } from \"./axes/GaplessDateAxis\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst language = this._root.language;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/xy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 16,\r\n\t\t\tpaddingBottom: 16,\r\n\t\t\tpanX: false,\r\n\t\t\tpanY: false,\r\n\t\t\twheelStep: 0.25,\r\n\t\t\tarrangeTooltips: true,\r\n\t\t\tpinchZoomX: false,\r\n\t\t\tpinchZoomY: false\r\n\t\t});\r\n\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tlegendLabelText: \"{name}\"\r\n\t\t})\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: XYChartScrollbar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n\t\t\tpaddingBottom: 0,\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingRight: 0,\r\n\t\t\tcolors: ColorSet.new(this._root, {\r\n\t\t\t\tsaturation: 0\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tfocusable: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n\t\t\tcornerRadiusBL: 40,\r\n\t\t\tcornerRadiusBR: 40,\r\n\t\t\tcornerRadiusTL: 40,\r\n\t\t\tcornerRadiusTR: 40\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true,\r\n\t\t\tminGridDistance: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5,\r\n\t\t\tcenterY: p100,\r\n\t\t\tminPosition: 0.01,\r\n\t\t\tmaxPosition: 0.99,\r\n\t\t\tfontSize: \"0.8em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"category\"]).setAll({\r\n\t\t\ttext: \"{category}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"minor\"]).setAll({\r\n\t\t\tfontSize: \"0.6em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Cursor\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYCursor\").setAll({\r\n\t\t\tbehavior: \"none\",\r\n\t\t\tlayer: 30,\r\n\t\t\texportable: false,\r\n\t\t\tsnapToSeriesBy: \"xy\",\r\n\t\t\tmoveThreshold: 1\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tforceInactive: true,\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\tariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tforceInactive: true,\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\tariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Axes\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Axis\").setAll({\r\n\t\t\tstart: 0,\r\n\t\t\tend: 1,\r\n\t\t\tminZoomCount: 1,\r\n\t\t\tmaxZoomCount: Infinity,\r\n\t\t\tmaxZoomFactor: 1000,\r\n\t\t\tmaxDeviation: 0.1,\r\n\t\t\tsnapTooltip: true,\r\n\t\t\ttooltipLocation: 0.5,\r\n\t\t\tpanX: true,\r\n\t\t\tpanY: true,\r\n\t\t\tzoomX: true,\r\n\t\t\tzoomY: true,\r\n\t\t\tfixAxisSize: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\").setAll({\r\n\t\t\tlocation: 0.5,\r\n\t\t\tmultiLocation: 0,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingTop: 3,\r\n\t\t\tpaddingBottom: 3,\r\n\t\t\tpaddingLeft: 5,\r\n\t\t\tpaddingRight: 5\r\n\t\t});\r\n\r\n\t\t// The following is deprecated following text measuring updates in 5.0.5\r\n\t\t// r(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t// \ttextAlign: \"right\"\r\n\t\t// });\r\n\r\n\t\t// r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t// \ttextAlign: \"left\"\r\n\t\t// });\r\n\r\n\t\tr(\"Container\", [\"axis\", \"header\"]).setAll({\r\n\t\t\tlayer: 30\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"header\", \"background\"]).setAll({\r\n\t\t\tcrisp: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisRenderer\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcrisp: true,\r\n\t\t\t\tstrokeOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"AxisRendererX\").setAll({\r\n\t\t\tminGridDistance: 120,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\twidth: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\").setAll({\r\n\t\t\tminGridDistance: 40,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\theight: p100\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\r\n\t\t\trule.states.create(\"hover\", { fillOpacity: 0.1 })\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\"\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ns-resize\"\r\n\t\t});\r\n\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t\tcrisp: true\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"minor\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.07,\r\n\t\t\t\tcrisp: true\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\r\n\t\tr(\"Grid\", [\"base\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.3\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tfillOpacity: 0.05,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\t// hides all elements of series axis range\r\n\t\tr(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\tr(\"Grid\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisTick\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0.5,\r\n\t\t\t\tmultiLocation: 0,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tvisible: false\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"CategoryAxis\").setAll({\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tfillRule: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst gridIntervals: Array<ITimeInterval> = [\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t];\r\n\r\n\t\tconst dateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst periodChangeDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_day\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst tooltipDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n\t\t\t\"second\": language.translate(\"_date_second_full\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute_full\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour_full\"),\r\n\t\t\t\"day\": language.translate(\"_date_day_full\"),\r\n\t\t\t\"week\": language.translate(\"_date_week_full\"),\r\n\t\t\t\"month\": language.translate(\"_date_month_full\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tr(\"CategoryDateAxis\").setAll({\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n\t\t});\r\n\r\n\t\tr(\"DateAxis\").setAll({\r\n\t\t\tmaxZoomFactor: null,\r\n\t\t\tstrictMinMax: true,\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgroupData: false,\r\n\t\t\tgroupCount: 500,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n\t\t\ttooltipDateFormats: tooltipDateFormats,\r\n\r\n\t\t\tgroupIntervals: [\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t\t],\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <DateAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst endValue = dataItem.get(\"endValue\");\r\n\t\t\t\t\tconst intervalDuration = axis.intervalDuration();\r\n\t\t\t\t\tconst baseInterval = axis.getPrivate(\"baseInterval\");\r\n\t\t\t\t\tconst gridInterval = axis.getPrivate(\"gridInterval\", baseInterval);\r\n\r\n\r\n\t\t\t\t\tlet min = axis.getPrivate(\"min\", 0);\r\n\t\t\t\t\tmin = $time.round(new Date(min), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\t\tif (value != null && endValue != null) {\r\n\t\t\t\t\t\tconst val = Math.round(Math.round((value - min) / intervalDuration)) / 2;\r\n\r\n\t\t\t\t\t\tif (val == Math.round(val)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"GaplessDateAxis\").setAll({\r\n\t\t\tfillRule: (dataItem: DataItem<IGaplessDateAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\r\n\t\t\t\t\tconst index = dataItem.get(\"index\")\r\n\t\t\t\t\tlet visible = false;\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\tvisible = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\taxisFill.setPrivate(\"visible\", visible);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ValueAxis\").setAll({\r\n\r\n\t\t\tbaseValue: 0,\r\n\t\t\tlogarithmic: false,\r\n\t\t\tstrictMinMax: false,\r\n\t\t\tautoZoom: true,\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <ValueAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"DurationAxis\").setAll({\r\n\t\t\tbaseUnit: \"second\"\r\n\t\t})\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tmaskBullets: true,\r\n\t\t\tstackToNegative: true,\r\n\r\n\t\t\tlocationX: 0.5,\r\n\t\t\tlocationY: 0.5,\r\n\r\n\t\t\tsnapTooltip: false,\r\n\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\",\r\n\r\n\t\t\tseriesTooltipTarget: \"series\"\r\n\t\t});\r\n\r\n\t\tr(\"BaseColumnSeries\").setAll({\r\n\t\t\tadjustBulletPosition: true\r\n\t\t});\r\n\r\n\t\tr(\"ColumnSeries\").setAll({\r\n\t\t\tclustered: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(70),\r\n\t\t\theight: percent(70),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"LineSeries\").setAll({\r\n\t\t\tconnect: true,\r\n\t\t\tautoGapCount: 1.1,\r\n\t\t\tstackToNegative: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 0,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, h / 2);\r\n\t\t\t\t\tdisplay.lineTo(w, h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, h);\r\n\t\t\t\t\tdisplay.lineTo(0, h);\r\n\t\t\t\t\tdisplay.lineTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"SmoothedXYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedXLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"Candlestick\").setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(50),\r\n\t\t\theight: percent(50),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"OHLC\").setAll({\r\n\t\t\twidth: percent(80),\r\n\t\t\theight: percent(80)\r\n\t\t});\r\n\r\n\t\tr(\"CandlestickSeries\").setAll({\r\n\t\t\tlowValueXGrouped: \"low\",\r\n\t\t\tlowValueYGrouped: \"low\",\r\n\t\t\thighValueXGrouped: \"high\",\r\n\t\t\thighValueYGrouped: \"high\",\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\"\r\n\t\t})\r\n\r\n\t\t// These rules can be used for regular columns, too\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t\t// Hollow\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromOpen\", { fillOpacity: 0 });\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromOpen\", { fillOpacity: 1 });\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\r\n\t\t// AXIS RANGE GRIP\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"rangegrip\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0,\r\n\t\t\t\tfillOpacity: 0,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\twidth: 12,\r\n\t\t\t\theight: 12\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"rangegrip\", \"button\", \"icon\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tinteractive: false,\r\n\t\t\t\tcrisp: true,\r\n\t\t\t\tstrokeOpacity: 0.5,\r\n\t\t\t\tdraw: (display: any) => {\r\n\t\t\t\t\tdisplay.moveTo(0, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(0, 12.5);\r\n\r\n\t\t\t\t\tdisplay.moveTo(2, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(2, 12.5);\r\n\r\n\t\t\t\t\tdisplay.moveTo(4, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(4, 12.5);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"secondaryButtonText\");\r\n\t\t}\r\n\r\n\t\tr(\"Button\", [\"rangegrip\"]).setAll({\r\n\t\t\tdraggable: true,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingBottom: 0\r\n\t\t})\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\"]).setAll({\r\n\t\t\trotation: 90,\r\n\t\t\tcursorOverStyle: \"ns-resize\",\r\n\t\t\tcenterX: p50\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\",\r\n\t\t\tcenterX: p50\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\", \"left\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\", \"right\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\", \"top\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\", \"bottom\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t}\r\n}\r\n", "import type { Axis } from \"./axes/Axis\";\nimport type { XYCursor } from \"./XYCursor\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";;\nimport type { Scrollbar } from \"../../core/render/Scrollbar\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\n\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Color } from \"../../core/util/Color\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $utils from \"../../core/util/Utils\";\nimport type { Animation } from \"../../core/util/Entity\";\nimport type { CategoryAxis } from \"./axes/CategoryAxis\";\nimport type { DateAxis } from \"./axes/DateAxis\";\n\nexport interface IXYChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * horizontal scrollbar.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n\t */\n\tscrollbarX?: Scrollbar;\n\n\t/**\n\t * Vertical scrollbar.\n\t *\n\t */\n\tscrollbarY?: Scrollbar;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart horizontally\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart vertically\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned horizontally while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelX?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned vertically while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelY?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates the relative \"speed\" of the mouse wheel.\n\t *\n\t * @default 0.25\n\t */\n\twheelStep?: number;\n\n\t/**\n\t * Chart's cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n\t */\n\tcursor?: XYCursor;\n\n\t/**\n\t * If not set (default), cursor will show tooltips for all data items in the\n\t * same category/date.\n\t *\n\t * If set, cursor will select closest data item to pointer (mouse or touch) and\n\t * show tooltip for it.\n\t *\n\t * It will also show tooltips for all data items that are within X pixels\n\t * range (as set in `maxTooltipDistance`).\n\t *\n\t * Tooltips for data items farther then X pixels, will not be shown.\n\t *\n\t * NOTE: set it to `-1` to ensure only one tooltip is displayed, even if there\n\t * are multiple data items in the same place.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#tooltips} for more info\n\t */\n\tmaxTooltipDistance?: number;\n\n\t/**\n\t * Indicates how the distance should be measured when assessing distance\n\t * between tooltips as set in `maxTooltipDistance`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#tooltips} for more info\n\t * @since 5.2.6\n\t */\n\tmaxTooltipDistanceBy?: \"xy\" | \"x\" | \"y\";\n\n\t/**\n\t * If set to `false` the chart will not check for overlapping of multiple\n\t * tooltips, and will not arrange them to not overlap.\n\t *\n\t * Will work only if chart has an `XYCursor` enabled.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#ooltips} for more info\n\t * @default true\n\t */\n\tarrangeTooltips?: boolean\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart horizontally.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomX?: boolean;\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart vertically.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomY?: boolean;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * horizontal zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionX?: number;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * vertical zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionY?: number;\n\n}\n\nexport interface IXYChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * A list of [[Series]] that currently have their tooltip being displayed.\n\t */\n\ttooltipSeries?: Array<XYSeries>\n\n\t/**\n\t * Array of other [[XYChart]] objects that cursors should be synced with.\n\t *\n\t * Note: cursors will be synced across the vertically stacked charts only.\n\t */\n\totherCharts?: Array<XYChart>\n\n}\n\n\nexport interface IXYChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when panning starts.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanstarted: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when panning ends.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanended: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked if pointer is pressed down on a chart and released without moving.\n\t *\n\t * `panended` event will still kick in after that.\n\t *\n\t * @since 5.2.19\n\t */\n\tpancancelled: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when wheel caused zoom ends.\n\t *\n\t * @since 5.0.4\n\t */\n\twheelended: {};\n\n}\n\n/**\n * Creates an XY chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\n * @important\n */\nexport class XYChart extends SerialChart {\n\n\tpublic static className: string = \"XYChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([XYChart.className]);\n\n\tdeclare public _settings: IXYChartSettings;\n\tdeclare public _privateSettings: IXYChartPrivate;\n\tdeclare public _seriesType: XYSeries;\n\tdeclare public _events: IXYChartEvents;\n\n\t/**\n\t * A list of horizontal axes.\n\t */\n\tpublic readonly xAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A list of vertical axes.\n\t */\n\tpublic readonly yAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A [[Container]] located on top of the chart, used to store top horizontal\n\t * axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle the chart, used to store vertical axes\n\t * and plot area container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly yAxesAndPlotContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located on bottom of the chart, used to store bottom\n\t * horizontal axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly bottomAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located on left of the chart, used to store left-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly leftAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotsContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store actual\n\t * plots (series).\n\t *\n\t * NOTE: `plotContainer` will automatically have its `background` preset. If\n\t * you need to modify background or outline for chart's plot area, you can\n\t * use `plotContainer.get(\"background\")` for that.*\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] used for any elements that need to be displayed over\n\t * regular `plotContainer`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topPlotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] axis grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }));\n\n\t/**\n\t * A [[Container]] axis background grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A [[Container]] located on right of the chart, used to store right-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly rightAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] axis headers are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly axisHeadersContainer: Container = this.plotContainer.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A button that is shown when chart is not fully zoomed out.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\n\t * @default Button.new()\n\t */\n\tpublic readonly zoomOutButton: Button = this.topPlotContainer.children.push(Button.new(this._root, {\n\t\tthemeTags: [\"zoom\"],\n\t\ticon: Graphics.new(this._root, {\n\t\t\tthemeTags: [\"button\", \"icon\"]\n\t\t})\n\t}));\n\n\tpublic _movePoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tpublic _otherCharts?: Array<XYChart>;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\n\tprotected _downStartX?: number;\n\tprotected _downEndX?: number;\n\n\tprotected _downStartY?: number;\n\tprotected _downEndY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.xAxes);\n\t\tthis._disposers.push(this.yAxes);\n\n\t\tconst root = this._root;\n\n\t\tlet verticalLayout = this._root.verticalLayout;\n\n\t\tconst zoomOutButton = this.zoomOutButton;\n\t\tzoomOutButton.events.on(\"click\", () => {\n\t\t\tthis.zoomOut();\n\t\t})\n\t\tzoomOutButton.hide(0);\n\t\tzoomOutButton.states.lookup(\"default\")!.set(\"opacity\", 1);\n\n\t\tthis.chartContainer.set(\"layout\", verticalLayout);\n\n\t\tconst plotContainer = this.plotContainer;\n\t\tplotContainer.children.push(this.seriesContainer);\n\n\t\tthis._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\t\tthis._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n\n\t\tplotContainer.children.push(this.topGridContainer);\n\t\tplotContainer.children.push(this.bulletsContainer);\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tplotContainer.set(\"interactive\", true);\n\t\tplotContainer.set(\"interactiveChildren\", false);\n\t\tplotContainer.set(\"background\", Rectangle.new(root, {\n\t\t\tthemeTags: [\"xy\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handlePlotDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handlePlotUp(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handlePlotMove(event);\n\t\t}));\n\n\t\tthis._maskGrid();\n\t\tthis._setUpTouch();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"pinchZoomX\") || this.isDirty(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tif (!this.plotContainer._display.cancelTouch) {\n\t\t\tthis.plotContainer._display.cancelTouch = (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\n\t\t}\n\t}\n\n\tprotected _maskGrid() {\n\t\tthis.gridContainer.set(\"maskContent\", true);\n\t\tthis.topGridContainer.set(\"maskContent\", true);\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tseries._unstack();\n\n\t\tif (series._posXDp) {\n\t\t\tseries._posXDp.dispose();\n\t\t}\n\n\t\tif (series._posYDp) {\n\t\t\tseries._posYDp.dispose();\n\t\t}\n\n\t\tseries.set(\"baseAxis\", undefined);\n\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\t$array.remove(xAxis.series, series);\n\t\t\txAxis.markDirtyExtremes();\n\t\t}\n\t\tconst yAxis = series.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\t$array.remove(yAxis.series, series);\n\t\t\tyAxis.markDirtyExtremes();\n\t\t}\n\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries) {\n\t\t\t\t$array.remove(snapToSeries, series);\n\t\t\t}\n\t\t}\n\n\t\tsuper._removeSeries(series);\n\t}\n\n\t/**\n\t * This method is invoked when mouse wheel is used over chart's plot\n\t * container, and handles zooming/pan.\n\t *\n\t * You can invoke this method manually, if you need to mimic chart's wheel\n\t * behavior over other elements of the chart.\n\t */\n\tpublic handleWheel(event: { originalEvent: WheelEvent, point: IPoint, target: Container }) {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst wheelEvent = event.originalEvent;\n\n\t\t// Ignore wheel event if it is happening on a non-chart element, e.g. if\n\t\t// some page element is over the chart.\n\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\n\t\t\twheelEvent.preventDefault();\n\t\t}\n\t\telse {\n\t\t\treturn;\n\t\t}\n\n\t\tconst plotPoint = plotContainer.toLocal(event.point);\n\t\tconst wheelStep = this.get(\"wheelStep\", 0.2);\n\n\t\tconst shiftY = wheelEvent.deltaY / 100;\n\t\tconst shiftX = wheelEvent.deltaX / 100;\n\n\t\tconst wheelZoomPositionX = this.get(\"wheelZoomPositionX\");\n\t\tconst wheelZoomPositionY = this.get(\"wheelZoomPositionY\");\n\n\t\tif ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start - delta;\n\t\t\t\t\tlet newEnd = end - delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _handleSetWheel() {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (wheelX !== \"none\" || wheelY !== \"none\") {\n\t\t\tthis._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tconst wheelEvent = event.originalEvent;\n\t\t\t\tif ((wheelX !== \"none\" && Math.abs(wheelEvent.deltaX) != 0) || (wheelY !== \"none\" && Math.abs(wheelEvent.deltaY) != 0)) {\n\t\t\t\t\tthis.handleWheel(event);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getWheelSign(axis: Axis<AxisRenderer>) {\n\t\tlet sign = 1;\n\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\tsign = -1;\n\t\t}\n\n\t\treturn sign\n\t}\n\n\tprotected _fixWheel(start: number, end: number): [number, number] {\n\t\tconst diff = end - start;\n\t\tif (start < 0) {\n\t\t\tstart = 0;\n\t\t\tend = start + diff;\n\t\t}\n\t\tif (end > 1) {\n\t\t\tend = 1;\n\t\t\tstart = end - diff;\n\t\t}\n\n\t\treturn [start, end];\n\t}\n\n\tprotected _handlePlotDown(event: ISpritePointerEvent) {\n\t\tconst originalEvent = event.originalEvent as any;\n\n\t\tif (originalEvent.button == 2) {\n\t\t\treturn;\n\t\t}\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet local = plotContainer.toLocal(event.point);\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst pointerId = originalEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 0) {\n\t\t\t\t\tconst xAxis = this.xAxes.getIndex(0);\n\t\t\t\t\tconst yAxis = this.yAxes.getIndex(0);\n\n\n\t\t\t\t\tif (xAxis) {\n\t\t\t\t\t\tthis._downStartX = xAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndX = xAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (yAxis) {\n\t\t\t\t\t\tthis._downStartY = yAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndY = yAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\tif (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n\t\t\t\t//this._downPoint = local;\n\t\t\t\tthis._downPoint = { x: originalEvent.clientX, y: originalEvent.clientY };\n\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\t\tif (panX) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (panY) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panstarted\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelAnimation(animation?: Animation<any>) {\n\t\tif (animation) {\n\t\t\tanimation.events.on(\"stopped\", () => {\n\t\t\t\tthis._dispatchWheelAnimation();\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis._dispatchWheelAnimation();\n\t\t}\n\t}\n\n\tprotected _dispatchWheelAnimation() {\n\t\tconst eventType = \"wheelended\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t}\n\t}\n\n\tprotected _handlePlotUp(event: ISpritePointerEvent) {\n\t\tconst downPoint = this._downPoint;\n\t\tif (downPoint) {\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\t\tif (event.originalEvent.clientX == downPoint.x && event.originalEvent.clientY == downPoint.y) {\n\t\t\t\t\tconst eventType = \"pancancelled\";\n\t\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panended\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO: handle multitouch\n\t\tthis._downPoint = undefined;\n\t\tthis.xAxes.each((xAxis) => {\n\t\t\txAxis._isPanning = false;\n\t\t})\n\t\tthis.yAxes.each((yAxis) => {\n\t\t\tyAxis._isPanning = false;\n\t\t})\n\t}\n\n\tprotected _handlePlotMove(event: ISpritePointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst touchEvent = event.originalEvent as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = event.point;\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet downPoint = this._downPoint!;\n\n\t\tif (downPoint) {\n\n\t\t\tdownPoint = plotContainer.toLocal(this._root.documentPointToRoot(downPoint));\n\t\t\tlet local = plotContainer.toLocal(event.point);\n\n\t\t\tconst panX = this.get(\"panX\");\n\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\tif (panX) {\n\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\n\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaX *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart + deltaX;\n\t\t\t\t\t\tlet end = panEnd + deltaX;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (panY) {\n\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaY *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart - deltaY;\n\t\t\t\t\t\tlet end = panEnd - deltaY;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(plotContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = movePoint;\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst w = plotContainer.width();\n\t\t\tconst h = plotContainer.height();\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tmovePoint0 = plotContainer.toLocal(movePoint0)\n\t\t\t\tmovePoint1 = plotContainer.toLocal(movePoint1)\n\n\t\t\t\tdownPoint0 = plotContainer.toLocal(downPoint0)\n\t\t\t\tdownPoint1 = plotContainer.toLocal(downPoint1)\n\n\t\t\t\tif (this.get(\"pinchZoomX\")) {\n\t\t\t\t\tconst downStartX = this._downStartX;\n\t\t\t\t\tconst downEndX = this._downEndX;\n\n\t\t\t\t\tif (downStartX != null && downEndX != null) {\n\n\t\t\t\t\t\tif (downPoint0.x > downPoint1.x) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartX * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndX * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.xAxes.each((xAxis) => {\n\t\t\t\t\t\t\tlet sa = xAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = xAxis.fixPosition(e);\n\n\t\t\t\t\t\t\txAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.get(\"pinchZoomY\")) {\n\t\t\t\t\tconst downStartY = this._downStartY;\n\t\t\t\t\tconst downEndY = this._downEndY;\n\n\t\t\t\t\tif (downStartY != null && downEndY != null) {\n\n\t\t\t\t\t\tif (downPoint0.y < downPoint1.y) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartY * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndY * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.yAxes.each((yAxis) => {\n\n\t\t\t\t\t\t\tlet sa = yAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = yAxis.fixPosition(e);\n\n\t\t\t\t\t\t\tyAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition() {\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst cursorPoint = cursor.getPrivate(\"point\");\n\n\t\t\tlet snapToSeries = cursor.get(\"snapToSeries\");\n\n\t\t\tif (cursor._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tif (snapToSeries && cursorPoint) {\n\t\t\t\tconst snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\n\t\t\t\tconst dataItems: Array<DataItem<IXYSeriesDataItem>> = [];\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tif (!series.isHidden() && !series.isHiding()) {\n\t\t\t\t\t\tif (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\n\t\t\t\t\t\t\tconst startIndex = series.startIndex();\n\t\t\t\t\t\t\tconst endIndex = series.endIndex();\n\t\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\tif (dataItem && !dataItem.isHidden()) {\n\t\t\t\t\t\t\t\t\tdataItems.push(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst tooltipDataItem = series.get(\"tooltipDataItem\");\n\t\t\t\t\t\t\tif (tooltipDataItem) {\n\t\t\t\t\t\t\t\tdataItems.push(tooltipDataItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet minDistance = Infinity;\n\t\t\t\tlet closestItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tconst point = dataItem.get(\"point\");\n\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = 0;\n\t\t\t\t\t\tif (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdistance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosestItem = dataItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (closestItem) {\n\t\t\t\t\tlet series = closestItem.component as XYSeries;\n\t\t\t\t\tseries.showDataItemTooltip(closestItem);\n\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", closestItem);\n\n\t\t\t\t\tconst point = closestItem.get(\"point\");\n\t\t\t\t\tif (point) {\n\n\t\t\t\t\t\t// removing x and y to solve #72225\n\t\t\t\t\t\tcursor.handleMove(series.toGlobal({ x: point.x - series.x(), y: point.y - series.y() }), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateCursor() {\n\t\tlet cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.updateCursor();\n\t\t}\n\t}\n\n\tprotected _addCursor(cursor: XYCursor) {\n\t\tthis.plotContainer.children.push(cursor);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.series.each((series) => {\n\t\t\tthis._colorize(series);\n\t\t})\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\n\t\tif (this.isDirty(\"cursor\")) {\n\t\t\tconst previous = this._prevSettings.cursor;\n\t\t\tconst cursor = this.get(\"cursor\")!;\n\t\t\tif (cursor !== previous) {\n\t\t\t\tthis._disposeProperty(\"cursor\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor._setChart(this);\n\t\t\t\t\tthis._addCursor(cursor);\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\n\t\t\t\t\t\tthis._handleCursorSelectEnd();\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t\t//this.setRaw(\"cursor\", cursor) // to reset previous value\n\t\t\t\tthis._prevSettings.cursor = cursor;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarX\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarX;\n\t\t\tconst scrollbarX = this.get(\"scrollbarX\")!;\n\t\t\tif (scrollbarX !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarX\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tif (!scrollbarX.parent) {\n\t\t\t\t\t\tthis.topAxesContainer.children.push(scrollbarX);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"released\", () => {\n\t\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\t\tthis._handleAxisSelection(axis);\n\t\t\t\t\t\t})\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarX.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.xAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position, false) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.scrollbarX = scrollbarX;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarY\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarY;\n\t\t\tconst scrollbarY = this.get(\"scrollbarY\")!;\n\t\t\tif (scrollbarY !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarY\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tif (!scrollbarY.parent) {\n\t\t\t\t\t\tthis.rightAxesContainer.children.push(scrollbarY);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"released\", () => {\n\t\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\t\tthis._handleAxisSelection(axis);\n\t\t\t\t\t\t})\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarY.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.yAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position, false) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tthis._prevSettings.scrollbarY = scrollbarY;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tsuper._processSeries(series);\n\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tconst yAxis = series.get(\"yAxis\");\n\n\t\t$array.move(xAxis.series, series);\n\t\t$array.move(yAxis.series, series);\n\n\t\tseries._posXDp = series.addDisposer(xAxis.events.on(\"positionchanged\", () => {\n\t\t\tseries._fixPosition();\n\t\t}))\n\n\t\tseries._posXDp = series.addDisposer(yAxis.events.on(\"positionchanged\", () => {\n\t\t\tseries._fixPosition();\n\t\t}))\n\n\t\tif (!series.get(\"baseAxis\")) {\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tseries.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tseries.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tif (series.get(\"stacked\")) {\n\t\t\tseries._markDirtyKey(\"stacked\");\n\t\t\t$array.each(series.dataItems, (dataItem) => {\n\t\t\t\tdataItem.set(\"stackToItemY\", undefined);\n\t\t\t\tdataItem.set(\"stackToItemX\", undefined);\n\t\t\t})\n\t\t}\n\t\tseries._markDirtyAxes();\n\t\tyAxis.markDirtyExtremes();\n\t\txAxis.markDirtyExtremes();\n\t\txAxis._seriesAdded = true;\n\t\tyAxis._seriesAdded = true;\n\n\t\tthis._colorize(series);\n\t}\n\n\tprotected _colorize(series: this[\"_seriesType\"]) {\n\t\tconst colorSet = this.get(\"colors\")!;\n\t\tif (colorSet) {\n\t\t\tif (series.get(\"fill\") == null) {\n\t\t\t\tconst color = colorSet.next();\n\n\t\t\t\tseries._setSoft(\"stroke\", color);\n\t\t\t\tseries._setSoft(\"fill\", color);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleCursorSelectEnd() {\n\t\tconst cursor = this.get(\"cursor\")!;\n\t\tconst behavior = cursor.get(\"behavior\");\n\n\t\tconst downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n\t\tconst downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n\n\t\tconst positionX = Math.min(1, Math.max(0, cursor.getPrivate(\"positionX\", 0.5)));\n\t\tconst positionY = Math.min(1, Math.max(0, cursor.getPrivate(\"positionY\", 0.5)));\n\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionX);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionX);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionY);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionY);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\t}\n\n\tprotected _handleScrollbar(axes: ListAutoDispose<Axis<any>>, start: number, end: number, priority?: \"start\" | \"end\") {\n\n\t\taxes.each((axis) => {\n\n\t\t\tlet axisStart = axis.fixPosition(start);\n\t\t\tlet axisEnd = axis.fixPosition(end);\n\n\t\t\tlet zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\n\n\t\t\tconst updateScrollbar = \"updateScrollbar\";\n\t\t\taxis.setPrivateRaw(updateScrollbar, false);\n\n\t\t\tif (zoomAnimation) {\n\t\t\t\tzoomAnimation.events.on(\"stopped\", () => {\n\t\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _processAxis<R extends AxisRenderer>(axes: ListAutoDispose<Axis<R>>, container: Container): IDisposer {\n\t\treturn axes.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axis) => {\n\t\t\t\t\tthis._removeAxis(axis);\n\t\t\t\t})\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tcontainer.children.push(change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tcontainer.children.setIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tcontainer.children.insertIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxis(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tcontainer.children.moveValue(change.value, change.newIndex);\n\t\t\t\tchange.value.processChart(this);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _removeAxis(axis: Axis<AxisRenderer>) {\n\t\tif (!axis.isDisposed()) {\n\t\t\tconst axisParent = axis.parent\n\t\t\tif (axisParent) {\n\t\t\t\taxisParent.children.removeValue(axis);\n\t\t\t}\n\n\t\t\tconst gridContainer = axis.gridContainer;\n\t\t\tconst gridParent = gridContainer.parent;\n\t\t\tif (gridParent) {\n\t\t\t\tgridParent.children.removeValue(gridContainer);\n\t\t\t}\n\n\t\t\tconst topGridContainer = axis.topGridContainer;\n\t\t\tconst topGridParent = topGridContainer.parent;\n\t\t\tif (topGridParent) {\n\t\t\t\ttopGridParent.children.removeValue(topGridContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChartLayout() {\n\t\tconst left = this.leftAxesContainer.width();\n\t\tconst right = this.rightAxesContainer.width();\n\n\t\tconst bottomAxesContainer = this.bottomAxesContainer;\n\t\tbottomAxesContainer.set(\"paddingLeft\", left);\n\t\tbottomAxesContainer.set(\"paddingRight\", right);\n\n\t\tconst topAxesContainer = this.topAxesContainer;\n\t\ttopAxesContainer.set(\"paddingLeft\", left);\n\t\ttopAxesContainer.set(\"paddingRight\", right);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis(axis: Axis<AxisRenderer>) {\n\t\tvar cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tthis.addDisposer(axis.on(\"start\", () => {\n\t\t\t\tthis._updateCursor();\n\t\t\t}))\n\n\t\t\tthis.addDisposer(axis.on(\"end\", () => {\n\t\t\t\tthis._updateCursor();\n\t\t\t}))\n\t\t}\n\t}\n\n\n\tpublic _handleAxisSelection(axis: Axis<any>, force?: boolean) {\n\n\t\tlet start = axis.fixPosition(axis.get(\"start\", 0));\n\t\tlet end = axis.fixPosition(axis.get(\"end\", 1));\n\n\t\tif (start > end) {\n\t\t\t[start, end] = [end, start];\n\t\t}\n\n\t\tif (this.xAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\n\t\t\t\tif (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarX.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarX.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarX.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.yAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\n\t\t\t\tif (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarY.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarY.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarY.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _handleZoomOut() {\n\t\tlet zoomOutButton = this.zoomOutButton;\n\t\tif (zoomOutButton && zoomOutButton.parent) {\n\t\t\tlet visible = false;\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (visible) {\n\t\t\t\tif (zoomOutButton.isHidden()) {\n\t\t\t\t\tzoomOutButton.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tzoomOutButton.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if point is within plot area.\n\t *\n\t * @param   point  Reference point\n\t * @return         Is within plot area?\n\t */\n\tpublic inPlot(point: IPoint): boolean {\n\t\tconst plotContainer = this.plotContainer;\n\t\tconst otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\n\t\tconst global = plotContainer.toGlobal(point);\n\n\t\tif (point.x >= -0.5 && point.y >= -0.5 && point.x <= plotContainer.width() + 0.5 && point.y <= plotContainer.height() + 0.5) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherCharts) {\n\n\t\t\tfor (let i = otherCharts.length - 1; i >= 0; i--) {\n\t\t\t\tconst chart = otherCharts[i];\n\n\t\t\t\tif (chart != this) {\n\t\t\t\t\tconst chartPlotContainer = chart.plotContainer;\n\t\t\t\t\tconst documentPoint = this._root.rootPointToDocument(global);\n\t\t\t\t\tconst chartRoot = chart._root.documentPointToRoot(documentPoint);\n\t\t\t\t\tconst local = chartPlotContainer.toLocal(chartRoot);\n\t\t\t\t\tif (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic arrangeTooltips() {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst w = plotContainer.width();\n\t\tconst h = plotContainer.height();\n\n\t\tconst hh = this.height();\n\n\t\tlet plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tlet plotB = plotContainer._display.toGlobal({ x: w, y: h });\n\n\t\tconst tooltips: Array<Tooltip> = [];\n\t\tlet sum = 0;\n\n\t\tlet minDistance = Infinity;\n\t\tlet movePoint = this._movePoint;\n\t\tlet maxTooltipDistance = this.get(\"maxTooltipDistance\");\n\t\tlet maxTooltipDistanceBy = this.get(\"maxTooltipDistanceBy\", \"xy\");\n\t\tlet closest: XYSeries;\n\t\tlet closestPoint: IPoint;\n\n\t\tif ($type.isNumber(maxTooltipDistance)) {\n\t\t\tthis.series.each((series) => {\n\t\t\t\tif (!series.isHidden()) {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tlet distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\tdistance = Math.abs(movePoint.x - point.x);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\tdistance = Math.abs(movePoint.y - point.y);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\t\tclosest = series;\n\t\t\t\t\t\t\t\tclosestPoint = point;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst tooltipSeries: Array<XYSeries> = [];\n\n\t\tthis.series.each((series) => {\n\t\t\tconst tooltip = series.get(\"tooltip\")!;\n\n\t\t\tif (tooltip && !tooltip.get(\"forceHidden\")) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\tif (point) {\n\t\t\t\t\tif (maxTooltipDistance >= 0) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point && closestPoint) {\n\t\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\t\tlet distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\n\t\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.x - point.x);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.y - point.y);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (distance > maxTooltipDistance) {\n\t\t\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (maxTooltipDistance == -1) {\n\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!hidden) {\n\t\t\t\t\t\t\tsum += point.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hidden || series.isHidden() || series.isHiding()) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show();\n\t\t\t\t\t\ttooltips.push(tooltip);\n\n\t\t\t\t\t\ttooltipSeries.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.setPrivate(\"tooltipSeries\", tooltipSeries);\n\n\t\tif (this.get(\"arrangeTooltips\")) {\n\n\t\t\tconst tooltipContainer = this._root.tooltipContainer;\n\n\t\t\tconst count = tooltips.length;\n\t\t\tconst average = sum / count;\n\n\t\t\tif (average > h / 2 + plotT.y) {\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\")!.y, a.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = plotB.y;\n\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\ttooltip.setPrivate(\"customData\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\tprevY = Math.min(prevY - height, tooltip._fy - height);\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (prevY < 0) {\n\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = prevY;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - prevY;\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - prevY;\n\t\t\t\t\t\t\tif (top < prevBottom) {\n\t\t\t\t\t\t\t\ttop = prevBottom;\n\t\t\t\t\t\t\t\tbottom = top + tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bounds.bottom - prevY + tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltips.reverse();\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\")!.y, b.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = 0;\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + hh, prevY + height) })\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t\tprevY = Math.max(prevY + height, tooltip._fy + height);\n\t\t\t\t})\n\n\t\t\t\tif (prevY > hh) {\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = hh;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - (hh - prevY);\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - (hh - prevY);\n\t\t\t\t\t\t\tif (bottom > prevBottom) {\n\t\t\t\t\t\t\t\tbottom = prevBottom\n\t\t\t\t\t\t\t\ttop = bottom - tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bottom - tooltip.height() - tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _tooltipToLocal(point: IPoint): IPoint {\n\t\treturn this.plotContainer.toLocal(point);\n\t}\n\n\t/**\n\t * Fully zooms out the chart.\n\t */\n\tpublic zoomOut() {\n\t\tthis.xAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\t}\n\n}\n", "import { Scrollbar, IScrollbarPrivate, IScrollbarSettings } from \"../../core/render/Scrollbar\";\nimport { XYChart } from \"./XYChart\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IXYChartScrollbarSettings extends IScrollbarSettings {\n\n}\n\nexport interface IXYChartScrollbarPrivate extends IScrollbarPrivate {\n}\n\n/**\n * Creates a scrollbar with chart preview in it.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/#Scrollbar_with_chart_preview} for more info\n * @important\n */\nexport class XYChartScrollbar extends Scrollbar {\n\n\tdeclare public _settings: IXYChartScrollbarSettings;\n\tdeclare public _privateSettings: IXYChartScrollbarPrivate;\n\n\tpublic static className: string = \"XYChartScrollbar\";\n\tpublic static classNames: Array<string> = Scrollbar.classNames.concat([XYChartScrollbar.className]);\n\n\t/**\n\t * An instance of an [[XYChart]] that is used to plot chart preview in\n\t * scrollbar.\n\t */\n\tpublic readonly chart: XYChart = this.children.push(XYChart.new(this._root, {\n\t\tthemeTags: [\"chart\"],\n\t\tinteractive: false,\n\t\tinteractiveChildren: false,\n\t\tpanX: false,\n\t\tpanY: false,\n\t\twheelX: \"none\",\n\t\twheelY: \"none\"\n\t}));\n\n\t/**\n\t * A graphics element that is displayed over inactive portion of the\n\t * scrollbarpreview, to dim it down.\n\t */\n\tpublic readonly overlay: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"overlay\"],\n\t\tinteractive: false\n\t}));\n\n\tprotected _afterNew() {\n\t\tthis._addOrientationClass();\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", \"xy\", \"chart\", this._settings.orientation]);\n\n\t\tconst children = this.children;\n\t\tchildren.moveValue(this.thumb);\n\t\tchildren.moveValue(this.startGrip);\n\t\tchildren.moveValue(this.endGrip);\n\n\t\tthis.thumb.set(\"opacity\", 0);\n\t\tthis.thumb.states.create(\"hover\", { opacity: 0.2 });\n\n\t\tconst plotContainer = this.chart.plotContainer;\n\t\tplotContainer.set(\"interactive\", false);\n\t\tplotContainer.remove(\"background\");\n\t\tplotContainer.children.removeValue(this.chart.zoomOutButton);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _updateThumb() {\n\t\tsuper._updateThumb();\n\n\t\tthis.overlay.set(\"draw\", (display) => {\n\t\t\tconst startGrip = this.startGrip;\n\t\t\tconst endGrip = this.endGrip;\n\n\t\t\tlet x0 = startGrip.x();\n\t\t\tlet y0 = startGrip.y();\n\n\t\t\tlet x1 = endGrip.x();\n\t\t\tlet y1 = endGrip.y();\n\n\t\t\tconst h = this.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x0 > x1) {\n\t\t\t\t[x0, x1] = [x1, x0]\n\t\t\t}\n\n\t\t\tif (y0 > y1) {\n\t\t\t\t[y0, y1] = [y1, y0]\n\t\t\t}\n\n\t\t\tif (this.get(\"orientation\") === \"horizontal\") {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(x0, 0);\n\t\t\t\tdisplay.lineTo(x0, h);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(x1, 0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(x1, h);\n\t\t\t\tdisplay.lineTo(x1, 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, y0);\n\t\t\t\tdisplay.lineTo(w, y0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(0, y1);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(w, y1);\n\t\t\t\tdisplay.lineTo(0, y1);\n\t\t\t}\n\t\t})\n\t}\n}\n", "import { Graphics, IGraphicsPrivate, IGraphicsSettings } from \"../../../core/render/Graphics\";\n\nexport interface IGridSettings extends IGraphicsSettings {\n\n\t/**\n\t * Relative location of the grid line within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n}\n\nexport interface IGridPrivate extends IGraphicsPrivate {\n}\n\n/**\n * Creates an axis grid line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\n * @important\n */\nexport class Grid extends Graphics {\n\n\tdeclare public _settings: IGridSettings;\n\tdeclare public _privateSettings: IGridPrivate;\n\n\tpublic static className: string = \"Grid\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Grid.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n}\n", "import type { IPoint } from \"../../core/util/IPoint\";\nimport type { XYChart } from \"./XYChart\"\nimport type { XYSeries } from \"./series/XYSeries\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\nimport type { Axis } from \"./axes/Axis\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\n\nexport interface IXYCursorSettings extends IContainerSettings {\n\n\t/**\n\t * Cursor's X axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\txAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * Cursor's Y axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\tyAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * What should cursor do when dragged across plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Behavior} for more info\n\t * @default \"none\"\n\t */\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"none\";\n\n\t/**\n\t * Cursor's horizontal position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionX` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Cursor's vertical position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionY` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * If set to `true`, cursor will not be hidden when mouse cursor moves out\n\t * of the plot area.\n\t *\n\t * @default false\n\t */\n\talwaysShow?: boolean;\n\n\t/**\n\t * A list of series to snap cursor to.\n\t *\n\t * If set, the cursor will always snap to the closest data item of listed\n\t * series.\n\t */\n\tsnapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * Defines in which direction to look when searching for the nearest data\n\t * item to snap to.\n\t *\n\t * Possible values: `\"xy\"` (default), `\"x\"`, `\"y\"`, `\"x!\"`, `\"y!\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#snapping-to-series} for more info\n\t * @since 5.0.6\n\t * @default \"xy\"\n\t */\n\tsnapToSeriesBy?: \"xy\" | \"x\" | \"y\" | \"x!\" | \"y!\";\n\n\t/**\n\t * An array of other [[XYCursor]] objects to sync this cursor with.\n\t *\n\t * If set will automatically move synced cursors to the same position within\n\t * their respective axes as the this cursor assumin same XY coordinates of\n\t * the pointer.\n\t *\n\t * NOTE: Syncing is performed using actual X/Y coordinates of the point of\n\t * mouse cursor's position or touch. It means that they will not sync by axis\n\t * positions, but rather by screen coordinates. For example vertical lines\n\t * will not sync across horizontally laid out charts, and vice versa.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#syncing-cursors} for more info\n\t * @since 5.1.4\n\t */\n\tsyncWith?: Array<XYCursor>;\n\n\t/**\n\t * Minimum distance in pixels between down and up points.\n\t *\n\t * If a distance is less than the value of `moveThreshold`, the zoom or\n\t * selection won't happen.\n\t *\n\t * @since 5.2.20\n\t * @default 1\n\t */\n\tmoveThreshold?: number\n\n}\n\n\nexport interface IXYCursorPrivate extends IContainerPrivate {\n\n\t/**\n\t * Current X/Y coordinates of the cursor.\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * Current horizontal position relative to the plot area (0-1).\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Current vertical position relative to the plot area (0-1).\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * Horizontal cursor position on the moment when selection started.\n\t */\n\tdownPositionX?: number;\n\n\t/**\n\t * Vertical cursor position on the moment when selection started.\n\t */\n\tdownPositionY?: number;\n\n\t/**\n\t * Last global point to which cursor moved\n\t */\n\tlastPoint?: IPoint;\n}\n\nexport interface IXYCursorEvents extends IContainerEvents {\n\n\t/**\n\t * Kicks in when cursor selection ends.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectended: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Kicks in when cursor selection starts.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectstarted: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Kicks in when cursor's position over plot area changes.\n\t */\n\tcursormoved: {\n\t\tpoint: IPoint,\n\t\ttarget: XYCursor,\n\t\toriginalEvent?: IPointerEvent\n\t};\n\n\t/**\n\t * Kicks in when cursor's is hidden when user rolls-out of the plot area\n\t */\n\tcursorhidden: {\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Invoked if pointer is pressed down on a plot area and released without\n\t * moving (only when behavior is `\"selectX\"`).\n\t *\n\t * @since 5.4.7\n\t */\n\tselectcancelled: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n}\n\n/**\n * Creates a chart cursor for an [[XYChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n * @important\n */\nexport class XYCursor extends Container {\n\tpublic static className: string = \"XYCursor\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([XYCursor.className]);\n\n\tdeclare public _settings: IXYCursorSettings;\n\tdeclare public _privateSettings: IXYCursorPrivate;\n\tdeclare public _events: IXYCursorEvents;\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineX: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"x\"]\n\t}));\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineY: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"y\"]\n\t}));\n\n\t/**\n\t * An element that represents current selection.\n\t *\n\t * @default Graphics.new()\n\t */\n\tpublic readonly selection: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"selection\", \"cursor\"], layer: 30\n\t}));\n\n\tprotected _movePoint: IPoint | undefined;\n\tprotected _lastPoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _tooltipX: boolean = false;\n\tprotected _tooltipY: boolean = false;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _toX?: number;\n\tprotected _toY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\t\tsuper._afterNew();\n\t\tthis.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\n\t\tthis.states.create(\"hidden\", { visible: true, opacity: 0 });\n\t\tthis._drawLines();\n\t\tthis.setPrivateRaw(\"visible\", false);\n\n\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\tthis.setPrivate(\"visible\", true)\n\t\t}, 500));\n\n\t\tthis._disposers.push(this.lineX.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleXLine();\n\t\t}));\n\n\t\tthis._disposers.push(this.lineY.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleYLine();\n\t\t}));\n\n\t\tthis._disposers.push(this.lineX.events.on(\"focus\", () => this._handleLineFocus()));\n\t\tthis._disposers.push(this.lineX.events.on(\"blur\", () => this._handleLineBlur()));\n\n\t\tthis._disposers.push(this.lineY.events.on(\"focus\", () => this._handleLineFocus()));\n\t\tthis._disposers.push(this.lineY.events.on(\"blur\", () => this._handleLineBlur()));\n\n\t\tif ($utils.supports(\"keyboardevents\")) {\n\t\t\tthis._disposers.push($utils.addEventListener(document, \"keydown\", (ev: KeyboardEvent) => {\n\t\t\t\tthis._handleLineMove($utils.getEventKey(ev), ev.ctrlKey);\n\t\t\t}));\n\t\t}\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.plotContainer._display.cancelTouch = this.get(\"behavior\") != \"none\" ? true : false;\n\t\t}\n\t}\n\n\tprotected _handleXLine() {\n\t\tlet x = this.lineX.x();\n\t\tlet visible = true;\n\t\tif (x < 0 || x > this.width()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineX.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleYLine() {\n\t\tlet y = this.lineY.y();\n\t\tlet visible = true;\n\t\tif (y < 0 || y > this.height()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineY.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleLineMove(key: string, ctrlKey?: boolean) {\n\t\tlet dir: any = \"\";\n\n\t\tconst chart = this.chart;\n\n\t\tlet axis: Axis<AxisRenderer> | undefined;\n\t\tif (chart && chart.xAxes.length) {\n\t\t\tif (this._root.focused(this.lineX)) {\n\t\t\t\tdir = \"positionX\";\n\t\t\t\taxis = chart.xAxes.getIndex(0);\n\t\t\t}\n\t\t\telse if (this._root.focused(this.lineY)) {\n\t\t\t\taxis = chart.yAxes.getIndex(0);\n\t\t\t\tdir = \"positionY\";\n\t\t\t}\n\n\t\t\tlet m = 1;\n\t\t\tif (ctrlKey) {\n\t\t\t\tm = 5;\n\t\t\t}\n\n\t\t\tif (axis) {\n\t\t\t\tlet inversed = axis.get(\"renderer\").get(\"inversed\", false);\n\t\t\t\tlet step;\n\t\t\t\tif (key == \"ArrowRight\" || key == \"ArrowDown\") {\n\t\t\t\t\tstep = 1;\n\t\t\t\t}\n\t\t\t\telse if (key == \"ArrowLeft\" || key == \"ArrowUp\") {\n\t\t\t\t\tstep = -1;\n\t\t\t\t}\n\t\t\t\telse if (key == \"Tab\") {\n\t\t\t\t\tstep = 0;\n\t\t\t\t}\n\n\t\t\t\tif (step != null) {\n\t\t\t\t\tif (inversed) {\n\t\t\t\t\t\tstep *= -1;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.set(dir, axis.nextPosition(step * m));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleLineFocus() {\n\t\tthis.setAll({\n\t\t\tpositionX: this.getPrivate(\"positionX\", 0),\n\t\t\tpositionY: this.getPrivate(\"positionY\", 0),\n\t\t\talwaysShow: true\n\t\t});\n\n\t\tthis._handleLineMove(\"Tab\");\n\t}\n\n\tprotected _handleLineBlur() {\n\t\tthis.setAll({\n\t\t\tpositionX: undefined,\n\t\t\tpositionY: undefined,\n\t\t\talwaysShow: false\n\t\t});\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"xAxis\")) {\n\t\t\tthis._tooltipX = false;\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\t\tif (xAxis) {\n\t\t\t\tconst tooltip = xAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipX = true;\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\t\tthis._updateXLine(tooltip);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"yAxis\")) {\n\t\t\tthis._tooltipY = false;\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis) {\n\t\t\t\tconst tooltip = yAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipY = true;\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\t\tthis._updateYLine(tooltip);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleSyncWith() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst syncWith = this.get(\"syncWith\");\n\t\t\tconst otherCharts: Array<XYChart> = [];\n\t\t\tif (syncWith) {\n\t\t\t\t$array.each(syncWith, (cursor) => {\n\t\t\t\t\tconst chart = cursor.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\totherCharts.push(chart)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tchart._otherCharts = otherCharts;\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tthis._handleSyncWith();\n\n\t\tif (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n\t\t\tconst positionX = this.get(\"positionX\");\n\t\t\tconst positionY = this.get(\"positionY\");\n\n\t\t\tif (positionX == null && positionY == null) {\n\t\t\t\tthis.hide(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\tthis.handleMove();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tlet x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 3);\n\t\tif (this._toX != x) {\n\t\t\tthis.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toX = x;\n\t\t}\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tlet y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 3);\n\t\tif (this._toY != y) {\n\t\t\tthis.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toY = y;\n\t\t}\n\t}\n\n\tprotected _drawLines() {\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, this.height());\n\t\t})\n\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(this.width(), 0);\n\t\t})\n\t}\n\n\tpublic updateCursor() {\n\t\tif (this.get(\"alwaysShow\")) {\n\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t}\n\t\tthis.handleMove();\n\t}\n\n\tpublic _setChart(chart: XYChart): void {\n\t\tthis.chart = chart;\n\n\t\tthis._handleSyncWith();\n\n\t\tconst plotContainer = chart.plotContainer;\n\n\t\tthis.events.on(\"boundschanged\", () => {\n\t\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\t\tthis.updateCursor();\n\t\t\t}, 50))\n\t\t})\n\n\t\t//this._display.interactive = true;\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tthis._disposers.push(plotContainer.events.on(\"click\", (event) => {\n\t\t\t\tif ($utils.isTouchEvent(event.originalEvent)) {\n\t\t\t\t\tthis._handleMove(event);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleCursorDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleCursorUp(event);\n\t\t\tif (!event.native && !this.isHidden()) {\n\t\t\t\tthis._handleMove(event);\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tif (!this.get(\"syncWith\")) {\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\n\t\t\t\t\t// Ignore mouse movement if it originates on outside element and\n\t\t\t\t\t// we're not dragging.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._handleMove(event);\n\n\t\t\tthis._handleLineBlur();\n\t\t}));\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this.selection);\n\t\t}\n\t}\n\n\tprotected _inPlot(point: IPoint): boolean {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.inPlot(point);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _handleCursorDown(event: ISpritePointerEvent) {\n\t\tif ((event.originalEvent as any).button == 2) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst rootPoint = event.point;\n\t\tlet local = this._display.toLocal(rootPoint);\n\t\tconst chart = this.chart;\n\n\t\tthis.selection.set(\"draw\", () => { });\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tthis._downPoint = local;\n\n\t\t\tif (this.get(\"behavior\") != \"none\") {\n\t\t\t\tthis.selection.show();\n\n\t\t\t\tconst type = \"selectstarted\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet positionX = this._getPosition(local).x;\n\t\t\tlet positionY = this._getPosition(local).y;\n\n\t\t\tthis.setPrivate(\"downPositionX\", positionX);\n\t\t\tthis.setPrivate(\"downPositionY\", positionY);\n\t\t}\n\t}\n\n\tprotected _handleCursorUp(event: ISpritePointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tif (this._downPoint) {\n\t\t\tconst behavior = this.get(\"behavior\", \"none\");\n\t\t\tif (behavior != \"none\") {\n\t\t\t\tif (behavior.charAt(0) === \"z\") {\n\t\t\t\t\tthis.selection.hide();\n\t\t\t\t}\n\n\t\t\t\tconst rootPoint = event.point;\n\t\t\t\tlet local = this._display.toLocal(rootPoint);\n\n\t\t\t\tconst downPoint = this._downPoint;\n\t\t\t\tconst moveThreshold = this.get(\"moveThreshold\", 1);\n\t\t\t\tif (local && downPoint) {\n\t\t\t\t\tlet dispatch = false;\n\t\t\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.x - downPoint.x) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.y - downPoint.y) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dispatch) {\n\t\t\t\t\t\tconst type = \"selectended\";\n\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconst type = \"selectcancelled\";\n\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handleMove(event: ISpritePointerEvent) {\n\t\tif (this.getPrivate(\"visible\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart && $object.keys(chart.plotContainer._downPoints).length > 1) {\n\t\t\t\tthis.set(\"forceHidden\", true)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"forceHidden\", false)\n\t\t\t}\n\n\t\t\t// TODO: handle multitouch\n\t\t\tconst rootPoint = event.point;\n\t\t\tconst lastPoint = this._lastPoint;\n\n\t\t\tif (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastPoint = rootPoint;\n\t\t\tthis.setPrivate(\"lastPoint\", rootPoint);\n\n\t\t\tthis.handleMove({ x: rootPoint.x, y: rootPoint.y }, false, event.originalEvent);\n\t\t}\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\treturn { x: point.x / this.width(), y: point.y / this.height() };\n\t}\n\n\t/**\n\t * Moves the cursor to X/Y coordinates within chart container (`point`).\n\t *\n\t * If `skipEvent` parameter is set to `true`, the move will not invoke\n\t * the `\"cursormoved\"` event.\n\t *\n\t * @param  point      X/Y to move cursor to\n\t * @param  skipEvent  Do not fire \"cursormoved\" event\n\t */\n\tpublic handleMove(point?: IPoint, skipEvent?: boolean, originalEvent?: IPointerEvent) {\n\t\tif (!point) {\n\t\t\tpoint = this._movePoint;\n\t\t}\n\n\t\tconst alwaysShow = this.get(\"alwaysShow\");\n\n\t\tif (!point) {\n\t\t\tthis.hide(0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._movePoint = point;\n\t\tlet local = this._display.toLocal(point);\n\t\tlet chart = this.chart;\n\n\t\tif (chart && (this._inPlot(local) || this._downPoint)) {\n\t\t\tchart._movePoint = point;\n\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis.show();\n\n\t\t\t\tconst behavior = this.get(\"behavior\", \"\");\n\t\t\t\tif (behavior.charAt(0) == \"z\") {\n\t\t\t\t\tthis.selection.set(\"draw\", () => { });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = local.x;\n\t\t\tlet y = local.y;\n\n\t\t\tlet xyPos = this._getPosition(local);\n\n\t\t\tthis.setPrivate(\"point\", local);\n\n\t\t\tlet snapToSeries = this.get(\"snapToSeries\");\n\n\t\t\tif (this._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\tlet positionX = xyPos.x;\n\n\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\tpositionX = userPositionX;\n\t\t\t}\n\n\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\tlet positionY = xyPos.y;\n\n\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\tpositionY = userPositionY;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"positionX\", positionX);\n\t\t\tthis.setPrivate(\"positionY\", positionY);\n\n\t\t\tconst xy = this._getPoint(positionX, positionY);\n\t\t\tx = xy.x;\n\t\t\ty = xy.y;\n\n\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionX, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionY, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!skipEvent) {\n\t\t\t\tchart._handleCursorPosition();\n\n\t\t\t\tconst type = \"cursormoved\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, point: point, originalEvent: originalEvent });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateLines(x, y);\n\n\t\t\tchart.arrangeTooltips();\n\t\t}\n\t\telse if (!this._downPoint) {\n\t\t\tif (!alwaysShow) {\n\t\t\t\tthis.hide(0);\n\n\t\t\t\tconst type = \"cursorhidden\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._downPoint && this.get(\"behavior\") != \"none\") {\n\t\t\tthis._updateSelection(local)\n\t\t}\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\treturn { x: this.width() * positionX, y: this.height() * positionY };\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis.lineX.set(\"x\", x);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis.lineY.set(\"y\", y);\n\t\t}\n\n\t\tthis._drawLines();\n\t}\n\n\tprotected _updateSelection(point: IPoint) {\n\t\tconst selection = this.selection;\n\t\tconst behavior = this.get(\"behavior\");\n\t\tconst w = this.width();\n\t\tconst h = this.height();\n\n\t\tif (point.x < 0) {\n\t\t\tpoint.x = 0;\n\t\t}\n\n\t\tif (point.x > w) {\n\t\t\tpoint.x = w;\n\t\t}\n\n\t\tif (point.y < 0) {\n\t\t\tpoint.y = 0;\n\t\t}\n\n\t\tif (point.y > h) {\n\t\t\tpoint.y = h;\n\t\t}\n\n\t\tselection.set(\"draw\", (display) => {\n\t\t\tconst downPoint = this._downPoint;\n\t\t\tif (downPoint) {\n\t\t\t\tif (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, downPoint.y);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomX\" || behavior === \"selectX\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, 0);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomY\" || behavior === \"selectY\") {\n\t\t\t\t\tdisplay.moveTo(0, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, point.y);\n\t\t\t\t\tdisplay.lineTo(0, point.y);\n\t\t\t\t\tdisplay.lineTo(0, downPoint.y);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _onHide() {\n\t\tif (this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\tseries.handleCursorHide();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onHide();\n\t}\n\n\tprotected _onShow() {\n\t\tif (!this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onShow();\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis.selection.dispose();\n\t}\n}\n", "import type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\n//import type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../../core/render/Series\";\nimport { List } from \"../../../core/util/List\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\nimport type { IDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\nexport interface IXYSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Kicks in when axis starts using different data set, e.g. data\n\t * of different granularit on [[DateAxis]].\n\t *\n\t * @since 5.1.1\n\t */\n\tdatasetchanged: {\n\t\tid: string\n\t}\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tlowValueX?: number;\n\tlowValueXWorking?: number;\n\tlowValueXChange?: number;\n\tlowValueXChangePercent?: number;\n\tlowValueXChangeSelection?: number;\n\tlowValueXChangeSelectionPercent?: number;\n\tlowValueXChangePrevious?: number;\n\tlowValueXChangePreviousPercent?: number;\n\tlowValueXWorkingOpen?: number;\n\tlowValueXWorkingClose?: number;\n\n\thighValueX?: number;\n\thighValueXWorking?: number;\n\thighValueXChange?: number;\n\thighValueXChangePercent?: number;\n\thighValueXChangeSelection?: number;\n\thighValueXChangeSelectionPercent?: number;\n\thighValueXChangePrevious?: number;\n\thighValueXChangePreviousPercent?: number;\n\thighValueXWorkingOpen?: number;\n\thighValueXWorkingClose?: number;\n\n\tlowValueY?: number;\n\tlowValueYWorking?: number;\n\tlowValueYChange?: number;\n\tlowValueYChangePercent?: number;\n\tlowValueYChangeSelection?: number;\n\tlowValueYChangeSelectionPercent?: number;\n\tlowValueYChangePrevious?: number;\n\tlowValueYChangePreviousPercent?: number;\n\tlowValueYWorkingOpen?: number;\n\tlowValueYWorkingClose?: number;\n\n\thighValueY?: number;\n\thighValueYWorking?: number;\n\thighValueYChange?: number;\n\thighValueYChangePercent?: number;\n\thighValueYChangeSelection?: number;\n\thighValueYChangeSelectionPercent?: number;\n\thighValueYChangePrevious?: number;\n\thighValueYChangePreviousPercent?: number;\n\thighValueYWorkingOpen?: number;\n\thighValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n\n\toriginals?: Array<DataItem<IXYSeriesDataItem>>;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t *\n\t * **IMPORTANT:** `xAxis` needs to be set when creating the series. Updating\n\t * this setting on previously created series object will not work.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t *\n\t * **IMPORTANT:** `yAxis` needs to be set when creating the series. Updating\n\t * this setting on previously created series object will not work.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * NOTE: for series stack properly, all stacked series must have same number\n\t * of data items with the same timestamp/category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\n\n\t/**\n\t * Input data field for X low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueXField?: string;\n\n\t/**\n\t * Input data field for Y low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueYField?: string;\n\n\t/**\n\t * Input data field for X high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueXField?: string;\n\n\t/**\n\t * Input data field for Y high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueYField?: string;\n\n\t/**\n\t * Display data field for X low value.\n\t */\n\tlowValueXShow?: \"lowValueXWorking\" | \"lowValueXChange\" | \"lowValueXChangePercent\" | \"lowValueXChangeSelection\" | \"lowValueXChangeSelectionPercent\" | \"lowValueXChangePrevious\" | \"lowValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\tlowValueYShow?: \"lowValueYWorking\" | \"lowValueYChange\" | \"lowValueYChangePercent\" | \"lowValueYChangeSelection\" | \"lowValueYChangeSelectionPercent\" | \"lowValueYChangePrevious\" | \"lowValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X low values from several data items.\n\t */\n\tlowValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating Y low values from several data items.\n\t */\n\tlowValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for X high value.\n\t */\n\thighValueXShow?: \"highValueXWorking\" | \"highValueXChange\" | \"highValueXChangePercent\" | \"highValueXChangeSelection\" | \"highValueXChangeSelectionPercent\" | \"highValueXChangePrevious\" | \"highValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\thighValueYShow?: \"highValueYWorking\" | \"highValueYChange\" | \"highValueYChangePercent\" | \"highValueYChangeSelection\" | \"highValueYChangeSelectionPercent\" | \"highValueYChangePrevious\" | \"highValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueXGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueYGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Horizontal location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationX?: number;\n\n\t/**\n\t * Vertical location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationY?: number;\n\n\t/**\n\t * Horizontal location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationX?: number;\n\n\t/**\n\t * Vertical location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationY?: number;\n\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t *\n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n\t/**\n\t * Indicates horizontal position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionX?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\t/**\n\t * Indicates vertical position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionY?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\n\t/**\n\t * If set to `true` data items for this series won't be grouped even if\n\t * the `groupData: true` is set on a related [[DateAxis]].\n\t * \n\t * @since 5.0.19\n\t */\n\tgroupDataDisabled?: boolean;\n\n\t/**\n\t * A [[DataItem]] that is being used for current tooltip, e.g. by a chart\n\t * cursor.\n\t *\n\t * @since 5.1.2\n\t */\n\ttooltipDataItem?: DataItem<IXYSeriesDataItem>\n\n\t/**\n\t * If set to `true`, when data is grouped, the `originals` setting of the\n\t * group data items will be populated by the original (source) data items\n\t * that fall into the group.\n\t *\n\t * Please note that if `groupDataCallback` is set, this setting is ignored\n\t * as originals will always be included, regardless of the value.\n\t *\n\t * @since 5.1.11\n\t * @default false\n\t */\n\tgroupDataWithOriginals?: boolean;\n\n\t/**\n\t * A custom function to call when grouping data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Custom_aggregation_functions} for more info\n\t * @since 5.1.11\n\t */\n\tgroupDataCallback?: (dataItem: DataItem<IXYSeriesDataItem>, interval: ITimeInterval) => void;\n\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n\n\tlowValueXAverage?: number;\n\tlowValueXCount?: number;\n\tlowValueXSum?: number;\n\tlowValueXAbsoluteSum?: number;\n\tlowValueXLow?: number;\n\tlowValueXHigh?: number;\n\tlowValueXlow?: number;\n\tlowValueXClose?: number;\n\n\tlowValueYAverage?: number;\n\tlowValueYCount?: number;\n\tlowValueYSum?: number;\n\tlowValueYAbsoluteSum?: number;\n\tlowValueYLow?: number;\n\tlowValueYHigh?: number;\n\tlowValueYlow?: number;\n\tlowValueYClose?: number;\n\n\tlowValueXAverageSelection?: number;\n\tlowValueXCountSelection?: number;\n\tlowValueXSumSelection?: number;\n\tlowValueXAbsoluteSumSelection?: number;\n\tlowValueXLowSelection?: number;\n\tlowValueXHighSelection?: number;\n\tlowValueXlowSelection?: number;\n\tlowValueXCloseSelection?: number;\n\n\tlowValueYAverageSelection?: number;\n\tlowValueYCountSelection?: number;\n\tlowValueYSumSelection?: number;\n\tlowValueYAbsoluteSumSelection?: number;\n\tlowValueYLowSelection?: number;\n\tlowValueYHighSelection?: number;\n\tlowValueYlowSelection?: number;\n\tlowValueYCloseSelection?: number;\n\n\thighValueXAverage?: number;\n\thighValueXCount?: number;\n\thighValueXSum?: number;\n\thighValueXAbsoluteSum?: number;\n\thighValueXLow?: number;\n\thighValueXHigh?: number;\n\thighValueXhigh?: number;\n\thighValueXClose?: number;\n\n\thighValueYAverage?: number;\n\thighValueYCount?: number;\n\thighValueYSum?: number;\n\thighValueYAbsoluteSum?: number;\n\thighValueYLow?: number;\n\thighValueYHigh?: number;\n\thighValueYhigh?: number;\n\thighValueYClose?: number;\n\n\thighValueXAverageSelection?: number;\n\thighValueXCountSelection?: number;\n\thighValueXSumSelection?: number;\n\thighValueXAbsoluteSumSelection?: number;\n\thighValueXLowSelection?: number;\n\thighValueXHighSelection?: number;\n\thighValueXhighSelection?: number;\n\thighValueXCloseSelection?: number;\n\n\thighValueYAverageSelection?: number;\n\thighValueYCountSelection?: number;\n\thighValueYSumSelection?: number;\n\thighValueYAbsoluteSumSelection?: number;\n\thighValueYLowSelection?: number;\n\thighValueYHighSelection?: number;\n\thighValueYhighSelection?: number;\n\thighValueYCloseSelection?: number;\n\n\toutOfSelection?: boolean;\n\n\tdoNotUpdateLegend?: boolean;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\tdeclare public _events: IXYSeriesEvents;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tpublic _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\tpublic _bullets: { [index: string]: Sprite } = {};\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\",\n\t\t\"lowValueX\",\n\t\t\"highValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\",\n\t\t\"lowValueY\",\n\t\t\"highValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tpublic __valueXShowFields!: Array<string>;\n\tpublic __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {});\n\n\tpublic _dataSetId?: string;\n\n\tprotected _tooltipFieldX?: string;\n\tprotected _tooltipFieldY?: string;\n\n\tpublic _posXDp?: IDisposer;\n\tpublic _posYDp?: IDisposer;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n\t\tthis._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n\n\t\tthis._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n\t\tthis._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXGrouped\", \"low\");\n\t\tthis._setRawDefault(\"lowValueYGrouped\", \"low\");\n\n\t\tthis._setRawDefault(\"highValueXGrouped\", \"high\");\n\t\tthis._setRawDefault(\"highValueYGrouped\", \"high\");\n\n\n\n\t\tsuper._afterNew();\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis.onPrivate(\"startIndex\", ()=>{\n\t\t\tthis.root.events.once(\"frameended\", ()=>{\n\t\t\t\tthis.updateLegendValue();\t\t\t\n\t\t\t})\t\t\t\n\t\t})\n\n\t\tthis.onPrivate(\"endIndex\", ()=>{\t\t\t\n\t\t\tthis.root.events.once(\"frameended\", ()=>{\n\t\t\t\tthis.updateLegendValue();\t\t\t\n\t\t\t})\n\t\t})\t\t\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\t\t\tif (axisFill) {\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem);\n\t\t}\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\taxis.disposeDataItem(axisDataItem);\n\n\t\t$array.remove(axis._seriesAxisRanges, axisDataItem);\n\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueXShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tthis._bullets = {};\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tif (!xAxis.inited || !yAxis.inited) {\n\t\t\treturn false\n\t\t}\n\t\tconst minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\tif (minBulletDistance > 0) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\n\t\t\tlet count = endIndex - startIndex;\n\n\t\t\tif (xAxis == baseAxis) {\n\t\t\t\tif (xAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (yAxis == baseAxis) {\n\t\t\t\tif (yAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\tpublic _fixPosition() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\n\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\tthis.bulletsContainer.set(\"x\", this.x());\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis._bullets = {};\n\n\t\tif (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\") || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\")) {\n\t\t\tthis._updateFields();\n\t\t\tthis._makeFieldNames();\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tif (this.isDirty(\"xAxis\") || this.isDirty(\"yAxis\")) {\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tconst tooltipPositionX = this.get(\"tooltipPositionX\");\n\t\tlet tooltipFieldX: string;\n\n\t\tswitch (tooltipPositionX) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldX = this._xOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldX = this._xLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldX = this._xHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldX = this._xField;\n\t\t}\n\t\tthis._tooltipFieldX = tooltipFieldX;\n\n\t\tconst tooltipPositionY = this.get(\"tooltipPositionY\");\n\t\tlet tooltipFieldY: string;\n\t\tswitch (tooltipPositionY) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldY = this._yOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldY = this._yLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldY = this._yHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldY = this._yField;\n\t\t}\n\t\tthis._tooltipFieldY = tooltipFieldY;\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\n\t\tthis._fixPosition();\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\txAxis._seriesValuesDirty = true;\n\t\t\tyAxis._seriesValuesDirty = true;\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tif (!this.get(\"tooltipDataItem\")) {\n\t\t\t\tthis.updateLegendValue(undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"adjustedStartIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._sizeDirty) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this.isPrivateDirty(\"adjustedStartIndex\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\t\t\t\tconst outOfSelection = this.getPrivate(\"outOfSelection\");\n\n\t\t\t\tif (baseAxis === xAxis || !baseAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (baseAxis === yAxis || !baseAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis || !baseAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\") {\n\t\t\t\t\t\tconst selectionMinY = this.getPrivate(\"selectionMinY\");\n\t\t\t\t\t\tif (selectionMinY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", selectionMinY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxY = this.getPrivate(\"selectionMaxY\");\n\t\t\t\t\t\tif (selectionMaxY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", selectionMaxY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (baseAxis === yAxis || !baseAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\") {\n\t\t\t\t\t\tconst selectionMinX = this.getPrivate(\"selectionMinX\");\n\t\t\t\t\t\tif (selectionMinX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", selectionMinX);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxX = this.getPrivate(\"selectionMaxX\")\n\t\t\t\t\t\tif (selectionMaxX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", selectionMaxX);\n\t\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tlet mainContainerMask = this._mainContainerMask;\n\t\t\tif (mainContainerMask == null) {\n\t\t\t\tmainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\t\t\t\tmainContainerMask.set(\"draw\", (display, target) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(display, target);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask!._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tmainContainerMask.markDirty();\n\t\t\tmainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t\telse {\n\t\t\tthis.mainContainer._display.mask = null;\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\t// save for performance\n\t\tthis._x = this.x();\n\t\tthis._y = this.y();\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t\tif (!series.get(\"stacked\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tpublic _unstack() {\n\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\t\t\t\tlet value = dataItem.get(field);\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tlet stackValue = stackToItem.get(field);\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(stackValue)) {\n\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tlet positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n\t\t\tlet positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1))\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tlet x = 0;\n\t\t\tlet y = 0;\n\n\t\t\tlet w = right - left;\n\t\t\tlet h = bottom - top;\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tsprite.setPrivate(\"visible\", !bullet.getPrivate(\"hidden\"));\n\n\t\t\t\tlet field = bullet.get(\"field\");\n\n\t\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\tif (field != undefined) {\n\t\t\t\t\tlet realField: string | undefined;\n\n\t\t\t\t\tif (baseAxis == xAxis) {\n\t\t\t\t\t\tif (field == \"value\") {\n\t\t\t\t\t\t\trealField = this._yField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"open\") {\n\t\t\t\t\t\t\trealField = this._yOpenField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"high\") {\n\t\t\t\t\t\t\trealField = this._yHighField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"low\") {\n\t\t\t\t\t\t\trealField = this._yLowField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (realField) {\n\t\t\t\t\t\t\tpositionY = yAxis.getDataItemPositionY(dataItem, realField as any, 0, this.get(\"vcy\", 1))\n\n\t\t\t\t\t\t\tpoint = yAxis.get(\"renderer\").positionToPoint(positionY);\n\n\t\t\t\t\t\t\ty = point.y;\n\t\t\t\t\t\t\tx = left + w * locationX;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (field == \"value\") {\n\t\t\t\t\t\t\trealField = this._xField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"open\") {\n\t\t\t\t\t\t\trealField = this._xOpenField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"high\") {\n\t\t\t\t\t\t\trealField = this._xHighField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"low\") {\n\t\t\t\t\t\t\trealField = this._xLowField;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (realField) {\n\t\t\t\t\t\t\tpositionX = xAxis.getDataItemPositionX(dataItem, realField as any, 0, this.get(\"vcx\", 1));\n\n\t\t\t\t\t\t\tpoint = xAxis.get(\"renderer\").positionToPoint(positionX);\n\n\t\t\t\t\t\t\tx = point.x;\n\t\t\t\t\t\t\ty = bottom - h * locationY;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tx = left + w * locationX;\n\t\t\t\t\ty = bottom - h * locationY;\n\t\t\t\t}\n\n\t\t\t\tconst stacked = bullet.get(\"stacked\");\n\t\t\t\tif (stacked) {\n\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\tif (baseAxis == xAxis) {\n\t\t\t\t\t\tlet previousBullet = this._bullets[positionX + \"_\" + positionY];\n\t\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\t\tlet previousBounds = previousBullet.bounds();\n\t\t\t\t\t\t\tlet bounds = sprite.localBounds();\n\t\t\t\t\t\t\tlet yo = y;\n\t\t\t\t\t\t\ty = previousBounds.top;\n\n\t\t\t\t\t\t\tif (stacked == \"down\") {\n\t\t\t\t\t\t\t\ty = previousBounds.bottom - bounds.top;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (stacked == \"auto\") {\n\t\t\t\t\t\t\t\tif (chart) {\n\t\t\t\t\t\t\t\t\tif (yo < chart.plotContainer.height() / 2) {\n\t\t\t\t\t\t\t\t\t\ty = previousBounds.bottom - bounds.top;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\ty += bounds.bottom;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ty += bounds.bottom;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._bullets[positionX + \"_\" + positionY] = sprite;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet previousBullet = this._bullets[positionX + \"_\" + positionY];\n\t\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\t\tlet previousBounds = previousBullet.bounds();\n\t\t\t\t\t\t\tlet bounds = sprite.localBounds();\n\t\t\t\t\t\t\tlet xo = x;\n\t\t\t\t\t\t\tx = previousBounds.right;\n\n\t\t\t\t\t\t\tif (stacked == \"down\") {\n\t\t\t\t\t\t\t\tx = previousBounds.left - bounds.right;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (stacked == \"auto\") {\n\t\t\t\t\t\t\t\tif (chart) {\n\t\t\t\t\t\t\t\t\tif (xo < chart.plotContainer.width() / 2) {\n\t\t\t\t\t\t\t\t\t\tx = previousBounds.left - bounds.right;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tx -= bounds.left;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tx -= bounds.left;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._bullets[positionX + \"_\" + positionY] = sprite;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.setPrivate(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.setPrivate(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tsprite.setAll({ x, y });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t\tthis._dataSetId = id;\n\n\t\t\tconst type = \"datasetchanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, id: id });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic resetGrouping() {\n\t\t$object.each(this._dataSets, (_key, dataSet) => {\n\t\t\tif (dataSet != this._mainDataItems) {\n\t\t\t\t$array.each(dataSet, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t\tthis._dataSets = {};\n\t\tthis._dataItems = this.mainDataItems;\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tlet bullets = dataItem.bullets;\n\t\t\tif (bullets) {\n\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\n\t\tthis._selectionProcessed = false; // for totals to be calculated\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tif (!value._stackDirty) {\n\t\t\t\t\tvalue._markDirtyStack();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tif (!this.getPrivate(\"doNotUpdateLegend\")) {\n\t\t\tthis.updateLegendMarker(dataItem);\n\t\t\tthis.updateLegendValue(dataItem);\n\t\t}\n\n\t\tconst tooltip = this.get(\"tooltip\");\n\n\t\tif (tooltip) {\n\t\t\tif (!this.isHidden()) {\n\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX!, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY!, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n\n\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\tlet show = true;\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\n\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic hideTooltip(): Promise<void> | undefined {\n\t\tconst tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.set(\"tooltipTarget\", this);\n\t\t}\n\t\treturn super.hideTooltip();\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem?: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\t// if coordinate is super big, canvas fails to draw line, capping to some big number (won't make any visual difference)\n\t\tlet max = 999999999;\n\t\tif (y < -max) {\n\t\t\ty = -max;\n\t\t}\n\t\tif (y > max) {\n\t\t\ty = max;\n\t\t}\n\n\t\tif (x < -max) {\n\t\t\tx = -max;\n\t\t}\n\t\tif (x > max) {\n\t\t\tx = max;\n\t\t}\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tprotected _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\tthis.get(\"xAxis\")._markDirtyKey(\"start\");\n\t\tthis.get(\"yAxis\")._markDirtyKey(\"start\");\n\t\tthis.resetExtremes();\n\t}\n\n\n\t/**\n\t * Resets cached axis scale values.\n\t */\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n\n\t/**\n\t * A list of series's main (ungrouped) data items.\n\t *\n\t * @return  Data items\n\t */\n\tpublic get mainDataItems(): Array<DataItem<this[\"_dataItemSettings\"]>> {\n\t\treturn this._mainDataItems;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _adjustStartIndex(index: number): number {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tif (baseAxis == xAxis && xAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\tconst baseDuration = xAxis.baseDuration();\n\t\t\tconst minSelection = xAxis.getPrivate(\"selectionMin\", xAxis.getPrivate(\"min\", 0));\n\t\t\tconst dl = baseDuration * this.get(\"locationX\", 0.5);\n\n\t\t\tlet value = -Infinity;\n\n\t\t\twhile (value < minSelection) {\n\t\t\t\tconst dataItem = this.dataItems[index];\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tconst open = dataItem.open;\n\t\t\t\t\tif (open) {\n\t\t\t\t\t\tvalue = open[\"valueX\"];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue = dataItem.get(\"valueX\", 0);\n\t\t\t\t\t}\n\t\t\t\t\tvalue += dl;\n\n\t\t\t\t\tif (value < minSelection) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t}\n}\n", "import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { IAxisDataItem } from \"../axes/Axis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n\t/**\n\t * Whether positions of bullets should be calculated based on portion of\n\t * column currently visual (`true`) or the whole length/height of the\n\t * column (`false`).\n\t *\n\t * @default true\n\t */\n\tadjustBulletPosition?: boolean;\n\n\t/**\n\t * If set to `true` will use color of the last visible column for legend\n\t * marker. Otherwise, series `fill`/`stroke` will be used.\n\t *\n\t * @since 5.1.13\n\t */\n\tuseLastColorForLegendMarker?: boolean\n\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst len = this.dataItems.length;\n\t\tconst startIndex = Math.max(0, this.startIndex() - 2);\n\t\tconst endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tthis._createGraphics(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.startIndex() - 2);\n\t\t\t\tlet endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\tif (i > 0 && startIndex > 0) {\n\t\t\t\t\t\t\tfor (let j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\t\t\tlet dataItem = this.dataItems[j];\n\t\t\t\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous);\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\t\tthis.updateLegendMarker(this.get(\"tooltipDataItem\"));\n\t\tsuper._updateChildren();\n\t}\n\n\n\tprotected _createGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\t\tif (!graphics) {\n\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tconst ds = markerRectangle.states.lookup(\"default\")!;\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tconst value = graphics!.get(setting, this.get(setting));\n\t\t\t\t\t\tmarkerRectangle.set(setting, value);\n\t\t\t\t\t\tds.set(setting, value);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet graphicsArray: Array<Graphics> | undefined = dataItem.get(\"rangeGraphics\");\n\t\t\tif (graphicsArray) {\n\t\t\t\t$array.each(graphicsArray, (graphics) => {\n\t\t\t\t\tgraphics.dispose();\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tgraphicsArray = [];\n\t\t\tdataItem.setRaw(\"rangeGraphics\", graphicsArray);\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tif (graphicsArray) {\n\t\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\t}\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tconst graphics = dataItem.get(\"graphics\");\n\t\t\tif (graphics) {\n\t\t\t\tgraphics.dispose();\n\t\t\t\tdataItem.set(\"graphics\", undefined);\n\t\t\t}\n\t\t})\n\n\t\treturn super.createAxisRange(axisDataItem);\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\")!;\n\n\t\t//if (!graphics) {\n\t\t//\tthis._createGraphics(dataItem);\n\t\t//\tgraphics = dataItem.get(\"graphics\")!;\n\t\t//}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (xAxis === baseAxis) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b <= yStart) || (t >= yEnd && b > yEnd) || $type.isNaN(l) || $type.isNaN(t)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tconst tooltipPoint = dataItem.get(\"point\");\n\n\t\tif (tooltipPoint) {\n\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n\t\t\ttooltipPoint.x = point.x + this._x;\n\t\t\ttooltipPoint.y = point.y + this._y;\n\t\t}\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif (this.get(\"adjustBulletPosition\")) {\n\t\t\tif (fitW) {\n\t\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t\t}\n\n\t\t\tif (fitH) {\n\t\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tpublic _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tlet legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (this.get(\"useLastColorForLegendMarker\")) {\n\t\t\tif (!dataItem) {\n\t\t\t\tconst lastDataItem = this.dataItems[this.endIndex() - 1];\n\t\t\t\tif (lastDataItem) {\n\t\t\t\t\tdataItem = lastDataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\tconst ds = markerRectangle.states.lookup(\"default\")!;\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tconst value = graphics.get(setting, this.get(setting));\n\t\t\t\t\t\tmarkerRectangle.set(setting, value);\n\t\t\t\t\t\tds.set(setting, value);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\treturn super._getTooltipTarget(dataItem);\n\t\t}\n\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n", "import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { Animation } from \"../../../core/util/Entity\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Root } from \"../../../core/Root\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component, IComponentSettings, IComponentPrivate, IComponentEvents, IComponentDataItem } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n\n\nexport interface IAxisSettings<R extends AxisRenderer> extends IComponentSettings {\n\t/**\n\t * A renderer object which is responsible of rendering visible axis elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n\t */\n\trenderer: R;\n\n\t/**\n\t * The initial relative zoom start position of the axis.\n\t *\n\t * E.g. stting it to `0.1` will pre-zoom axis to 10% from the start.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tstart?: number;\n\n\t/**\n\t * The initial relative zoom end position of the axis.\n\t *\n\t * E.g. stting it to `0.9` will pre-zoom axis to 10% from the end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tend?: number;\n\n\t/**\n\t * Maximum number of times the scope of the axis could auto-zoom-in.\n\t *\n\t * This is to prevent axis jumping too drastically when scrolling/zooming.\n\t *\n\t * @default 1000\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Maximum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed out beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tmaxZoomCount?: number;\n\n\t/**\n\t * Minimum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed in beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tminZoomCount?: number;\n\n\t/**\n\t * Base value of the axis.\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * horizontally, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * vertically, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * horizontally, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * vertically, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomY?: boolean;\n\n\t/**\n\t * Set this to `false` to prevent axis from being zoomed.\n\t */\n\tzoomable?:boolean;\n\n\t/**\n\t * A relative distance the axis is allowed to be zoomed/panned beyond its\n\t * actual scope.\n\t *\n\t * @default 0.1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Over_zooming} for more info\n\t */\n\tmaxDeviation?: number;\n\n\t/**\n\t * [[Tooltip]] element to use for axis.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * `tooltipLocation` indicates\n\t * which relative place to snap to: `0` beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\ttooltipLocation?: number;\n\n\t/**\n\t * Should tooltip snap to the `tooltipLocation` (`true`) or follow cursor.\n\t *\n\t * @default true\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * If set to `true` (default) the axis width will stay constant across all\n\t * zooms, even if actual length of all visible labels changes.\n\t *\n\t * @default true\n\t */\n\tfixAxisSize?: boolean;\n\n\t/**\n\t * A function that will be used to create bullets on each cell.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n\t */\n\tbullet?: (root: Root, axis: Axis<AxisRenderer>, dataItem: DataItem<IAxisDataItem>) => AxisBullet;\n}\n\nexport interface IAxisEvents extends IComponentEvents {\n}\n\nexport interface IAxisPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tname?: \"value\" | \"date\" | \"category\";\n\n\t/**\n\t * @ignore\n\t */\n\tupdateScrollbar?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Saves position to which tooltip points.\n\t */\n\ttooltipPosition?: number;\n\n\t/**\n\t * Width in pixels between grid lines (read-only).\n\t * \n\t * It might not be exact, as [[DateAxis]] can have grids at irregular\n\t * intervals.\n\t * \n\t * Could be used to detect when size changes and to adjust labels for them\n\t * not to overlap.\n\t */\n\tcellWidth?: number;\n\n}\n\nexport interface IAxisDataItem extends IComponentDataItem {\n\n\t/**\n\t * Axis label element.\n\t */\n\tlabel?: AxisLabel;\n\n\t/**\n\t * Tick element.\n\t */\n\ttick?: AxisTick;\n\n\t/**\n\t * Grid line element.\n\t */\n\tgrid?: Grid;\n\n\t/**\n\t * Axis fill element.\n\t */\n\taxisFill?: Graphics;\n\n\t/**\n\t * Bullet element.\n\t */\n\tbullet?: AxisBullet;\n\n\t/**\n\t * Indicates if this data item represents an axis range.\n\t */\n\tisRange?: boolean;\n\n\t/**\n\t * If set to `true`, the grid and axis fill of this data item will be drawn\n\t * above series.\n\t *\n\t * NOTE: this needs to be set **before** crating an axis range. Updating this\n\t * dynamically won't have any effect.\n\t *\n\t * NOTE: if you need all grid to be drawn above series, you can brig it to\n\t * front with `chart.gridContainer.toFront();`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Grid_fill_above_series} for more info\n\t * @default false\n\t */\n\tabove?: boolean\n\n}\n\n/**\n * A base class for all axes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\n */\nexport abstract class Axis<R extends AxisRenderer> extends Component {\n\tpublic static className: string = \"Axis\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Axis.className]);\n\n\tdeclare public _settings: IAxisSettings<R>;\n\tdeclare public _privateSettings: IAxisPrivate;\n\tdeclare public _dataItemSettings: IAxisDataItem;\n\tdeclare public _events: IAxisEvents;\n\n\tdeclare public _seriesType: XYSeries;\n\n\tprotected _series: Array<this[\"_seriesType\"]> = [];\n\n\tpublic _isPanning: boolean = false;\n\n\t/**\n\t * Array of minor data items.\n\t */\n\tpublic  minorDataItems: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A [[Container]] that holds all the axis label elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelsContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that holds all the axis grid and fill elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds axis grid elements which goes above the series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds all the axis bullet elements.\n\t *\n\t * @default new Container\n\t */\n\tpublic readonly bulletsContainer: Container = this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }));\n\n\t/**\n\t * A referenece to the the chart the axis belongs to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _rangesDirty: Boolean = false;\n\n\tpublic _panStart: number = 0;\n\tpublic _panEnd: number = 1;\n\n\tprotected _sAnimation?: Animation<this[\"_settings\"][\"start\"]>;\n\tprotected _eAnimation?: Animation<this[\"_settings\"][\"end\"]>;\n\n\tpublic _skipSync: boolean = false;\n\n\t/**\n\t * A list of axis ranges.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @default new List()\n\t */\n\tpublic readonly axisRanges: List<DataItem<this[\"_dataItemSettings\"]>> = new List();\n\n\tpublic _seriesAxisRanges: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A control label that is invisible but is used to keep width the width of\n\t * the axis constant.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\n\t */\n\tpublic ghostLabel!: AxisLabel;\n\n\tprotected _cursorPosition: number = -1;\n\n\tprotected _snapToSeries?: Array<XYSeries>;\n\n\tpublic _seriesValuesDirty = false;\n\n\tpublic _seriesAdded = false;\n\n\t/**\n\t * A container above the axis that can be used to add additional stuff into\n\t * it. For example a legend, label, or an icon.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default new Container\n\t */\n\tpublic axisHeader: Container = this.children.push(Container.new(this._root, {\n\t\tthemeTags: [\"axis\", \"header\"],\n\t\tposition: \"absolute\",\n\t\tbackground: Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"header\", \"background\"],\n\t\t\tfill: this._root.interfaceColors.get(\"background\")\n\t\t})\n\t}));\n\n\tpublic _bullets: { [index: string]: AxisBullet } = {};\n\n\tprotected _dispose() {\n\t\t// these could be in other parents, so disposing just in case\n\t\tthis.gridContainer.dispose();\n\t\tthis.topGridContainer.dispose();\n\t\tthis.bulletsContainer.dispose();\n\t\tthis.labelsContainer.dispose();\n\t\tthis.axisHeader.dispose();\n\t\tsuper._dispose();\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"updateScrollbar\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis.disposeDataItem(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value, [\"range\"]);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tif (renderer) {\n\t\t\trenderer.axis = this;\n\t\t\trenderer.processAxis();\n\t\t}\n\t\tthis.children.push(renderer);\n\t\tthis.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\n\t\tthis.ghostLabel.adapters.disable(\"text\");\n\t\tthis.ghostLabel.setAll({ opacity: 0, tooltipText: undefined, tooltipHTML: undefined, interactive: false });\n\t\tthis.ghostLabel.events.disable();\n\t}\n\n\tprotected _updateFinals(_start: number, _end: number) {\n\n\t}\n\n\t/**\n\t * Zooms the axis to relative locations.\n\t *\n\t * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\n\t *\n\t * @param   start     Relative start\n\t * @param   end       Relative end\n\t * @param   duration  Duration of the zoom animation in milliseconds\n\t * @return            Zoom animation\n\t */\n\tpublic zoom(start: number, end: number, duration?: number, priority?: \"start\" | \"end\"): Animation<this[\"_settings\"][\"start\"]> | Animation<this[\"_settings\"][\"end\"]> | undefined {\n\t\tif(this.get(\"zoomable\", true)){\n\t\t\tthis._updateFinals(start, end);\n\n\t\t\tif (this.get(\"start\") !== start || this.get(\"end\") != end) {\n\t\t\t\tlet sAnimation = this._sAnimation;\n\t\t\t\tlet eAnimation = this._eAnimation;\n\n\t\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\t\tif (start < - maxDeviation) {\n\t\t\t\t\tstart = -maxDeviation;\n\t\t\t\t}\n\n\t\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\t}\n\n\t\t\t\tif (start > end) {\n\t\t\t\t\t[start, end] = [end, start];\n\t\t\t\t}\n\n\t\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t\t}\n\n\t\t\t\tif (!priority) {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\n\t\t\t\tlet maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n\t\t\t\tlet maxZoomFactorReal = maxZoomFactor;\n\n\t\t\t\tif (end === 1 && start !== 0) {\n\t\t\t\t\tif (start < this.get(\"start\", 0)) {\n\t\t\t\t\t\tpriority = \"start\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpriority = \"end\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (start === 0 && end !== 1) {\n\t\t\t\t\tif (end > this.get(\"end\", 1)) {\n\t\t\t\t\t\tpriority = \"end\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpriority = \"start\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet minZoomCount = this.get(\"minZoomCount\", 0);\n\t\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\", Infinity);\n\n\t\t\t\tif ($type.isNumber(minZoomCount)) {\n\t\t\t\t\tmaxZoomFactor = maxZoomFactorReal / minZoomCount;\n\t\t\t\t}\n\n\t\t\t\tlet minZoomFactor: number = 1;\n\n\t\t\t\tif ($type.isNumber(maxZoomCount)) {\n\t\t\t\t\tminZoomFactor = maxZoomFactorReal / maxZoomCount;\n\t\t\t\t}\n\n\t\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\n\t\t\t\tif (priority === \"start\") {\n\t\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t\t// add to the end\n\t\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\t\tend = start + 1 / minZoomFactor;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t\t//unless end is > 0\n\t\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t\t//end = 1;\n\t\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// most likely we are dragging right, so we modify left\n\t\t\t\telse {\n\t\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t\t// add to the end\n\t\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// remove from start\n\t\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t\t//start = 0;\n\t\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\n\t\t\t\tif (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\n\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\tchart._handleAxisSelection(this, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\n\t\t\t\tif (duration > 0) {\n\t\t\t\t\tlet easing = this.get(\"interpolationEasing\");\n\t\t\t\t\tlet sAnimation, eAnimation;\n\t\t\t\t\tif (this.get(\"start\") != start) {\n\t\t\t\t\t\tsAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\n\t\t\t\t\t}\n\t\t\t\t\tif (this.get(\"end\") != end) {\n\t\t\t\t\t\teAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._sAnimation = sAnimation;\n\t\t\t\t\tthis._eAnimation = eAnimation;\n\n\t\t\t\t\tif (sAnimation) {\n\t\t\t\t\t\treturn sAnimation;\n\t\t\t\t\t}\n\t\t\t\t\telse if (eAnimation) {\n\t\t\t\t\t\treturn eAnimation;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.set(\"start\", start);\n\t\t\t\t\tthis.set(\"end\", end);\n\t\t\t\t\t// otherwise bullets and line out of sync, as series is not redrawn\n\t\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\t\tthis._markDirtyKey(\"start\");\n\t\t\t\t\t\tthis._root._markDirty();\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._sAnimation) {\n\t\t\t\t\tthis._sAnimation.stop();\n\t\t\t\t}\n\t\t\t\tif (this._eAnimation) {\n\t\t\t\t\tthis._eAnimation.stop();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A list of series using this axis.\n\t *\n\t * @return Series\n\t */\n\tpublic get series(): Array<this[\"_seriesType\"]> {\n\t\treturn this._series;\n\t}\n\n\n\tpublic _processAxisRange(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTags: Array<string>) {\n\t\tdataItem.setRaw(\"isRange\", true);\n\t\tthis._createAssets(dataItem, themeTags);\n\t\tthis._rangesDirty = true;\n\t\tthis._prepareDataItem(dataItem);\n\n\t\tconst above = dataItem.get(\"above\");\n\t\tconst container = this.topGridContainer;\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (above && grid) {\n\t\t\tcontainer.children.moveValue(grid);\n\t\t}\n\n\t\tconst fill = dataItem.get(\"axisFill\");\n\t\tif (above && fill) {\n\t\t\tcontainer.children.moveValue(fill);\n\t\t}\n\t}\n\n\tpublic _prepareDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>, _index?: number) { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getX(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getY(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t}\n\n\tpublic _calculateTotals() {\n\t}\n\n\tprotected _updateAxisRanges() {\n\t\tthis._bullets = {};\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\n\t\t$array.each(this._seriesAxisRanges, (axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract baseValue(): any;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.get(\"fixAxisSize\")) {\n\t\t\tthis.ghostLabel.set(\"visible\", true);\n\t\t}\n\t\telse {\n\t\t\tthis.ghostLabel.set(\"visible\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart._updateCursor();\n\t\t\t}\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < -maxDeviation) {\n\t\t\t\tlet delta = start + maxDeviation;\n\t\t\t\tstart = -maxDeviation;\n\t\t\t\tthis.setRaw(\"start\", start);\n\t\t\t\tif (this.isDirty(\"end\")) {\n\t\t\t\t\tthis.setRaw(\"end\", end - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tlet delta = end - 1 - maxDeviation;\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\tthis.setRaw(\"end\", end);\n\n\t\t\t\tif (this.isDirty(\"start\")) {\n\t\t\t\t\tthis.setRaw(\"start\", start - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\trenderer._start = this.get(\"start\")!;\n\t\trenderer._end = this.get(\"end\")!;\n\t\trenderer._inversed = renderer.get(\"inversed\", false);\n\t\trenderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\t\trenderer._updateLC();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst tooltip = this.get(\"tooltip\");\n\t\t\tif (tooltip) {\n\t\t\t\tconst rendererTags = renderer.get(\"themeTags\");\n\t\t\t\ttooltip.addTag(\"axis\");\n\t\t\t\ttooltip.addTag(this.className.toLowerCase());\n\t\t\t\ttooltip._applyThemes();\n\n\t\t\t\tif (rendererTags) {\n\t\t\t\t\ttooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\t\t\t\t\ttooltip.label._applyThemes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateTooltipBounds() {\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tif (tooltip) {\n\t\t\tthis.get(\"renderer\").updateTooltipBounds(tooltip);\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tsuper._updateBounds();\n\t\tthis._updateTooltipBounds();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processChart(chart: XYChart) {\n\t\tthis.chart = chart;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\trenderer.chart = chart;\n\t\tchart.gridContainer.children.push(this.gridContainer);\n\t\tchart.topGridContainer.children.push(this.topGridContainer);\n\n\t\tchart.axisHeadersContainer.children.push(this.axisHeader);\n\n\t\tthis.on(\"start\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\t\tthis.on(\"end\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\n\t\tchart.plotContainer.onPrivate(\"width\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\t\tchart.plotContainer.onPrivate(\"height\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\n\t\tchart.processAxis(this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hideDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleFHDataItem(dataItem, true);\n\t\treturn super.hideDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic showDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleFHDataItem(dataItem, false);\n\t\treturn super.showDataItem(dataItem);\n\t}\n\n\tpublic _toggleFHDataItem(dataItem: DataItem<IAxisDataItem>, forceHidden: boolean) {\n\t\tconst fh = \"forceHidden\";\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.set(fh, forceHidden);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.set(fh, forceHidden);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.set(fh, forceHidden);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.set(fh, forceHidden);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.set(fh, forceHidden);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _toggleDataItem(dataItem: DataItem<IAxisDataItem>, visible: boolean) {\n\t\tconst label = dataItem.get(\"label\");\n\t\tconst v = \"visible\";\n\t\tif (label) {\n\t\t\tlabel.setPrivate(v, visible);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.setPrivate(v, visible);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.setPrivate(v, visible);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.setPrivate(v, visible);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setPrivate(v, visible);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract basePosition(): number;\n\n\tpublic _createAssets(dataItem: DataItem<this[\"_dataItemSettings\"]>, tags: Array<string>, minor?: boolean) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tlet m = \"minor\";\n\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (!label) {\n\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t}\n\t\telse {\n\t\t\tlet themeTags = label.get(\"themeTags\");\n\t\t\tlet remove = false;\n\t\t\tif (minor) {\n\t\t\t\tif (themeTags?.indexOf(m) == -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (themeTags?.indexOf(m) != -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (remove) {\n\t\t\t\tlabel.parent?.children.removeValue(label);\n\t\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t\t\tlabel.dispose();\n\t\t\t\trenderer.labels.removeValue(label);\n\t\t\t}\n\t\t}\n\n\t\tconst grid = dataItem.get(\"grid\");\n\n\t\tif (!grid) {\n\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t}\n\t\telse {\n\t\t\tlet themeTags = grid.get(\"themeTags\");\n\t\t\tlet remove = false;\n\t\t\tif (minor) {\n\t\t\t\tif (themeTags?.indexOf(m) == -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (themeTags?.indexOf(m) != -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (remove) {\n\t\t\t\tgrid.parent?.children.removeValue(grid);\n\t\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t\t\tgrid.dispose();\n\t\t\t\trenderer.grid.removeValue(grid);\n\t\t\t}\n\t\t}\n\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (!tick) {\n\t\t\trenderer.makeTick(dataItem, tags);\n\t\t}\n\t\telse {\n\t\t\tlet remove = false;\n\t\t\tlet themeTags = tick.get(\"themeTags\");\n\t\t\tif (minor) {\n\t\t\t\tif (themeTags?.indexOf(m) == -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (themeTags?.indexOf(m) != -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (remove) {\n\t\t\t\ttick.parent?.children.removeValue(tick);\n\t\t\t\trenderer.makeTick(dataItem, tags);\n\t\t\t\ttick.dispose();\n\t\t\t\trenderer.ticks.removeValue(tick);\n\t\t\t}\n\t\t}\n\n\t\tif (!minor && !dataItem.get(\"axisFill\")) {\n\t\t\trenderer.makeAxisFill(dataItem, tags);\n\t\t}\n\n\t\tthis._processBullet(dataItem);\n\t}\n\n\tprotected _processBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet bullet = dataItem.get(\"bullet\");\n\t\tlet axisBullet = this.get(\"bullet\");\n\n\t\tif (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n\t\t\tbullet = axisBullet(this._root, this, dataItem);\n\t\t}\n\n\t\tif (bullet) {\n\t\t\tbullet.axis = this;\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tdataItem.setRaw(\"bullet\", bullet);\n\t\t\t\tif (!sprite.parent) {\n\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart._updateChartLayout();\n\t\t\tchart.axisHeadersContainer.markDirtySize();\n\t\t}\n\n\t\tthis.get(\"renderer\")._updatePositions();\n\n\t\tthis._seriesAdded = false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\trenderer.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\trenderer.ticks.removeValue(tick);\n\t\t\ttick.dispose();\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\trenderer.grid.removeValue(grid);\n\t\t\tgrid.dispose();\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\trenderer.axisFills.removeValue(axisFill);\n\t\t\taxisFill.dispose();\n\t\t}\n\t\tconst bullet = dataItem.get(\"bullet\");\n\n\t\tif (bullet) {\n\t\t\tbullet.dispose();\n\t\t}\n\t}\n\n\tprotected _updateGhost() {\n\t\tthis.setPrivate(\"cellWidth\", this.getCellWidthPosition() * this.get(\"renderer\").axisLength());\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (!ghostLabel.isHidden()) {\n\t\t\tconst bounds = ghostLabel.localBounds();\n\t\t\tconst gWidth = Math.ceil(bounds.right - bounds.left);\n\t\t\tlet text = ghostLabel.get(\"text\");\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label && !label.isHidden()) {\n\t\t\t\t\tconst bounds = label.localBounds();\n\t\t\t\t\tconst w = Math.ceil(bounds.right - bounds.left);\n\n\t\t\t\t\tif (w > gWidth) {\n\t\t\t\t\t\ttext = label.text._getText();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tghostLabel.set(\"text\", text);\n\t\t}\n\t\tlet start = this.get(\"start\", 0);\n\t\tlet end = this.get(\"end\", 1);\n\t\tthis.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\n\t}\n\n\tpublic _handleCursorPosition(position: number, snapToSeries?: Array<XYSeries>) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tposition = renderer.toAxisPosition(position);\n\n\t\tthis._cursorPosition = position;\n\t\tthis._snapToSeries = snapToSeries;\n\n\t\tthis.updateTooltip();\n\t}\n\n\t/**\n\t * Can be called when axis zoom changes and you need to update tooltip\n\t * position.\n\t */\n\tpublic updateTooltip() {\n\t\tconst snapToSeries = this._snapToSeries;\n\t\tlet position = this._cursorPosition;\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif ($type.isNumber(position)) {\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tconst dataItem = this.getSeriesItem(series, position!, this.get(\"tooltipLocation\"));\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif (snapToSeries && snapToSeries.indexOf(series) != -1) {\n\t\t\t\t\t\tseries.updateLegendMarker(dataItem);\n\t\t\t\t\t\tseries.updateLegendValue(dataItem);\n\t\t\t\t\t\tseries._settings.tooltipDataItem = dataItem;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.showDataItemTooltip(dataItem);\n\t\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", dataItem);\n\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (this.get(\"snapTooltip\")) {\n\t\t\t\tposition = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n\t\t\t}\n\t\t\t\n\t\t\tthis.setPrivateRaw(\"tooltipPosition\", position);\n\n\t\t\tif (tooltip) {\n\t\t\t\trenderer.updateTooltipBounds(tooltip);\n\n\t\t\t\tif (!$type.isNaN(position)) {\t\t\t\t\t\n\t\t\t\t\tthis._updateTooltipText(tooltip, position);\n\t\t\t\t\trenderer.positionTooltip(tooltip, position);\n\n\t\t\t\t\tif (position < this.get(\"start\", 0) || position > this.get(\"end\", 1)) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position        Position\n\t * @param   adjustPosition  Adjust position\n\t * @return                  Tooltip text\n\t */\n\tpublic abstract getTooltipText(position: number, adjustPosition?: boolean): string | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, _location: number): number {\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorShow() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(_dataItem: DataItem<IXYSeriesDataItem>, _fields: Array<string>) {\n\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._rangesDirty = false;\n\t}\n\n\t/**\n\t * Converts pixel coordinate to a relative position on axis.\n\t *\n\t * @param   coordinate  Coordinate\n\t * @return              Relative position\n\t */\n\tpublic coordinateToPosition(coordinate: number): number {\n\t\tconst renderer = this.get(\"renderer\");\n\t\treturn renderer.toAxisPosition(coordinate / renderer.axisLength());\n\t}\n\n\t/**\n\t * Converts relative position of the plot area to relative position of the\n\t * axis with zoom taken into account.\n\t *\n\t * @param position Position\n\t * @return Relative position\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toAxisPosition(position);\n\t}\n\n\t/**\n\t * Converts relative position of the axis to a global position taking current\n\t * zoom into account (opposite to what `toAxisPosition` does).\n\t *\n\t * @since 5.4.2\n\t * @param position Position\n\t * @return Global position\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toGlobalPosition(position);\n\t}\n\n\t/**\n\t * Adjusts position with inversed taken into account.\n\t *\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number): number {\n\t\treturn this.get(\"renderer\").fixPosition(position);\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic abstract getSeriesItem(series: XYSeries, position: number, location?: number): DataItem<IXYSeriesDataItem> | undefined\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(_dataItem: DataItem<IXYSeriesDataItem>, _nextItem: DataItem<IXYSeriesDataItem>, _autoGapCount: number, _fieldName: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): DataItem<this[\"_dataItemSettings\"]> {\n\t\treturn this.axisRanges.push(axisDataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _groupSeriesData(_series: XYSeries) { }\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn 0.05;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract nextPosition(_count?:number):number\n}\n", "import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\tthis._itemMap = {};\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tthis.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis.className == \"ValueAxis\") {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet startIndex = 0;\n\t\t\t\t\t\tlet endIndex = series.dataItems.length;\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tstartIndex = series.dataItems.indexOf(startDataItem);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tendIndex = series.dataItems.indexOf(endDataItem) + 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\n\t\t\t\t\t\tlet hasValue = false;\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\n\t\t\t\t\t\t\t$array.each(series.__valueXShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(series.__valueYShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\tif (hasValue) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tseries.setPrivate(\"outOfSelection\", !hasValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\n\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1);\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\tlet count = frequency;\n\t\t\tif (minorGridEnabled) {\n\t\t\t\tcount = 1;\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, count);\n\n\t\t\tf++;\n\t\t}\n\n\t\tif (renderer.get(\"minorGridEnabled\")) {\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tif (i % frequency != 0) {\n\t\t\t\t\tthis._createAssets(dataItem, [\"minor\"], true);\n\t\t\t\t\tthis._toggleDataItem(dataItem, true);\n\t\t\t\t\tthis._prepareDataItem(dataItem, 0, 1);\n\n\t\t\t\t\tif (!minorLabelsEnabled) {\n\t\t\t\t\t\tdataItem.get(\"label\")?.setPrivate(\"visible\", false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tposition += (0.5 - location) / this.dataItems.length;\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif (label) {\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n\n\t/**\n\t * Returns position span between start and end of a single cell in axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn this._frequency / this.dataItems.length / (this.get(\"end\", 1) - this.get(\"start\", 0));\n\t}\n\t\n\t/**\n\t * @ignore\n\t */\t\n\tpublic nextPosition(count?:number){\n\t\tif(count == null){\n\t\t\tcount = 1;\n\t\t}\n\n\t\tif(this.get(\"renderer\").getPrivate(\"letter\") == \"Y\"){\n\t\t\tcount *= -1;\n\t\t}\n\n\t\tconst position = this.getPrivate(\"tooltipPosition\", 0);\n\n\t\tconst index = $math.fitToRange(this.axisPositionToIndex(position) + count, 0, this.dataItems.length - 1);\t\t\n\t\treturn this.toGlobalPosition(this.indexToPosition(index));\n\t}\n}\n", "import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { CategoryAxis, ICategoryAxisSettings, ICategoryAxisPrivate, ICategoryAxisDataItem, ICategoryAxisEvents } from \"./CategoryAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport * as $time from \"../../../core/util/Time\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryDateAxisSettings<R extends AxisRenderer> extends ICategoryAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\ttooltipDateFormat?: string;\n\n}\n\nexport interface ICategoryDateAxisDataItem extends ICategoryAxisDataItem {\n}\n\nexport interface ICategoryDateAxisPrivate extends ICategoryAxisPrivate {\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface ICategoryDateAxisEvents extends ICategoryAxisEvents {\n}\n\n\n/**\n * Category-based date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-date-axis/} for more info\n * @important\n */\nexport class CategoryDateAxis<R extends AxisRenderer> extends CategoryAxis<R> {\n\tpublic static className: string = \"CategoryDateAxis\";\n\tpublic static classNames: Array<string> = CategoryAxis.classNames.concat([CategoryDateAxis.className]);\n\n\tdeclare public _settings: ICategoryDateAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryDateAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryDateAxisDataItem;\n\tdeclare public _events: ICategoryDateAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryDateAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\t// temp\n\t\tthis.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t}\n\n\t\tlet startTime = Number(this.dataItems[startIndex].get(\"category\"));\n\t\tlet endTime = Number(this.dataItems[endIndex - 1].get(\"category\"));\n\t\tlet realDuration = (endTime - startTime);\n\t\tif (endIndex - startIndex < maxCount) {\n\t\t\trealDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\n\t\t}\n\n\t\t// if all items are on axis\n\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\n\n\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\tgridInterval = { ...baseInterval };\n\t\t}\n\n\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\tlet previousValue = -Infinity;\n\t\tlet previousIndex = -Infinity;\n\t\tlet previousUnitValue = -Infinity;\n\t\tlet format: string;\n\n\t\tlet selectedItems: Array<{ format: string, dataItem: DataItem<ICategoryDateAxisDataItem> }> = [];\n\t\tlet changed = false;\n\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tlet dataItem = this.dataItems[i];\n\t\t\tlet index = dataItem.get(\"index\")!;\n\t\t\tlet skip = false;\n\n\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\tlet date = new Date(value);\n\t\t\tlet unitValue = $time.getUnitValue(date, gridInterval.timeUnit);\n\n\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\tlet added = false;\n\n\t\t\tif (gridInterval.timeUnit != \"year\" && gridInterval.timeUnit != \"week\") {\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\n\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc)) {\n\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\n\t\t\t\t\t\tif (index - frequency * 0.5 < previousIndex) {\n\t\t\t\t\t\t\tselectedItems.pop();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tadded = true;\n\t\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet shouldAdd = false;\n\t\t\tif (gridInterval.timeUnit === \"day\" || gridInterval.timeUnit === \"week\") {\n\t\t\t\tif (index - previousIndex >= frequency) {\n\t\t\t\t\tshouldAdd = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (unitValue % gridInterval.count === 0) {\n\t\t\t\t\tif (unitValue != previousUnitValue) {\n\t\t\t\t\t\tshouldAdd = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!added && shouldAdd) {\n\t\t\t\tif (index - frequency * 0.7 < previousIndex) {\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t}\n\t\t\t\tchanged = false;\n\n\t\t\t}\n\n\t\t\tpreviousValue = value;\n\n\t\t}\n\n\t\tif (selectedItems.length > 0) {\n\t\t\tlet f = selectedItems[0].dataItem.get(\"index\", 0);\n\n\t\t\t$array.each(selectedItems, (item) => {\n\t\t\t\tconst dataItem = item.dataItem;\n\t\t\t\tconst format = item.format;\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\t})\n\n\t\t}\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tlet dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\n\t\tif (dataItem) {\n\t\t\tlet format = this.get(\"dateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\treturn this._root.dateFormatter.format(new Date(dataItem.get(\"category\", 0)), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n}\n", "import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IValueAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * Override minimum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the minimum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmin?: number;\n\n\t/**\n\t * Override maximum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the maximum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmax?: number;\n\n\t/**\n\t * Force axis scale to be precisely at values as set in `min` and/or `max`.\n\t *\n\t * In case `min` and/or `max` is not set, the axis will fix its scale to\n\t * precise lowest and highest values available through all of the series\n\t * attached to it.\n\t *\n\t * This effectively locks the axis from auto-zooming itself when chart\n\t * is zoomed in.\n\t *\n\t * If you need to zoom to actual low/high values within currently visible\n\t * scope, use `strictMinMaxSelection` instead.\n\t *\n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tstrictMinMax?: boolean;\n\n\t/**\n\t * Force axis to auto-zoom to exact lowest and highest values from attached\n\t * series' data items within ucurrently visible range.\n\t * \n\t * This is a good feature when your series is plotted from derivative values,\n\t * like `valueYChangeSelection` as it helps to avoid frequent jumping of\n\t * series to adjusted min and max of the axis.\n\t * \n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @since 5.1.11\n\t */\n\tstrictMinMaxSelection?: boolean;\n\n\t/**\n\t * If set to `true` axis will use logarithmic scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * Treat zero values as some other value.\n\t *\n\t * Useful in situations where zero would result in error, i.e. logarithmic\n\t * scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\ttreatZeroAs?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated minimum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000` and\n\t * minimum value is `0`, the new minimum value will be `-100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMin?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated maximum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000`, the\n\t * axis will now show maximum value of `1100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMax?: number;\n\n\t/**\n\t * Base value, which indicates the threshold between \"positive\" and \"negative\"\n\t * values.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Base_value} for more info\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * Maximum number of decimals to allow in axis labels.\n\t *\n\t * This setting not only affects formatting of the labels, but also where and\n\t * how many grid/labels are placed on the axis.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tmaxPrecision?: number;\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<IValueAxisDataItem>) => void;\n\n\t/**\n\t * Number format to use for axis labels.\n\t *\n\t * If not set, will use format set in global number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tnumberFormat?: string;\n\n\t/**\n\t * A numeric format used for numbers displayed in axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\ttooltipNumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * If set, will use greater precision for the axis tooltip than the one for\n\t * axis' actual labels.\n\t *\n\t * E.g. if axis displays labels with one decimal (`1.0`, `1.1`, `1.2`) setting\n\t * this setting to `1` would allow two decimals in axis tooltip, e.g. `1.15`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\textraTooltipPrecision?: number;\n\n\t/**\n\t * If your series relies on dynamically calculated values, like value\n\t * changes, percents, or total sums, set this to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Calculated_values} for more info\n\t */\n\tcalculateTotals?: boolean;\n\n\t/**\n\t * This setting can be set to an instance of another [[ValueAxis]].\n\t *\n\t * If set the grid of this axis will be synced with grid of the target axis.\n\t *\n\t * NOTE: this is not 100% guaranteed to work. In some rare cases perfect\n\t * sync might not be possible.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Syncing_grid} for more info\n\t */\n\tsyncWithAxis?: ValueAxis<AxisRenderer>;\n\n\t/**\n\t * If set to `false`, the axis won't be auto-zoomed to a selection (this\n\t * works only if the other axis is a `DateAxis` or a `CategoryAxis`).\n\t * \n\t * IMPORTANT: This setting will be ignored if both X and Y axes are\n\t * a `ValueAxis`.\n\t *\n\t * @since 5.2.20\n\t * @default true\n\t */\n\tautoZoom?: boolean;\n\n}\n\nexport interface IValueAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Value of the data item.\n\t */\n\tvalue?: number;\n\n\t/**\n\t * End value for axis items that span multiple values, like axis ranges.\n\t */\n\tendValue?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tlabelEndValue?: number;\n\n\t/**\n\t * If set to `true` the values fo this data item will be factored in when\n\t * calculating scale of the [[ValueAxis]]. Useful for axis ranges.\n\t * \n\t * @since 5.1.4\n\t */\n\taffectsMinMax?: boolean;\n\n}\n\nexport interface IMinMaxStep {\n\tmin: number;\n\tmax: number;\n\tstep: number;\n}\n\nexport interface IValueAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Calculated current minimum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmin?: number;\n\n\t/**\n\t * Calculated current maximum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmax?: number;\n\n\t/**\n\t * A minimum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `min` is reflecting current intermediate value, whereas `minFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tminFinal?: number;\n\n\t/**\n\t * A maximum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `max` is reflecting current intermediate value, whereas `maxFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tmaxFinal?: number;\n\n\t/**\n\t * Calculated minimum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMin?: number;\n\n\t/**\n\t * Calculated maximum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMax?: number;\n\n\t/**\n\t * A target minimum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMin` is reflecting current intermediate value,\n\t * whereas `selectionMinFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMinFinal?: number;\n\n\t/**\n\t * A target maximum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMax` is reflecting current intermediate value,\n\t * whereas `selectionMaxFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMaxFinal?: number;\n\n\t/**\n\t * When selection step changes, it might change during axis zoom animation.\n\t *\n\t * `selectionStepFinal` will show what step will be when animation is\n\t * finished.\n\t * \n\t * @readonly\n\t */\n\tselectionStepFinal?: number;\n\n\t/**\n\t * Value step between grid lines.\n\t * \n\t * @readonly\n\t */\n\tstep?: number;\n\n\t/**\n\t * Decimal places used when formatting axis labels.\n\t * \n\t * @readonly\n\t */\n\tstepDecimalPlaces?: number;\n\n}\n\nexport interface IValueAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a value axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\n * @important\n */\nexport class ValueAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"ValueAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([ValueAxis.className]);\n\n\tdeclare public _settings: IValueAxisSettings<R>;\n\tdeclare public _privateSettings: IValueAxisPrivate;\n\tdeclare public _dataItemSettings: IValueAxisDataItem;\n\tdeclare public _events: IValueAxisEvents;\n\n\tprotected _dirtyExtremes: boolean = false;\n\tprotected _dirtySelectionExtremes: boolean = false;\n\tprotected _deltaMinMax: number = 1;\n\tprotected _minReal: number | undefined;\n\tprotected _maxReal: number | undefined;\n\n\tprotected _baseValue: number = 0;\n\tprotected _syncDp?: MultiDisposer;\n\tprotected _minLogAdjusted: number = 1;\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t\tthis._dirtyExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t\tthis._dirtySelectionExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.setPrivateRaw(\"name\", \"value\");\n\t\tthis.addTag(\"value\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"syncWithAxis\")) {\n\t\t\tlet previousValue = this._prevSettings.syncWithAxis;\n\t\t\tif (previousValue) {\n\t\t\t\tif (this._syncDp) {\n\t\t\t\t\tthis._syncDp.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tthis._syncDp = new MultiDisposer([\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMinFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t}),\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t}\n\n\t\tlet someDirty = false;\n\t\tif (this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\n\t\t\tsomeDirty = true;\n\t\t\tthis.ghostLabel.set(\"text\", \"\");\n\t\t}\n\n\t\t//if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\n\t\tif (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || someDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\")) {\n\t\t\tthis._getMinMax();\n\t\t\tthis._dirtyExtremes = false;\n\t\t}\n\n\t\tthis._handleSizeDirty();\n\n\t\tif (this._dirtySelectionExtremes && !this._isPanning && this.get(\"autoZoom\", true)) {\n\t\t\tthis._getSelectionMinMax();\n\t\t\tthis._dirtySelectionExtremes = false;\n\t\t}\n\n\t\tthis._groupData();\n\n\t\tif (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\n\t\t\tthis._handleRangeChange();\n\t\t\tthis._prepareAxisItems();\n\t\t\tthis._updateAxisRanges();\n\t\t}\n\n\t\tthis._baseValue = this.baseValue();\n\n\t}\n\n\tprotected _handleSizeDirty() {\n\t\tif (this._sizeDirty) {\n\t\t\tthis._dirtySelectionExtremes = true;\n\t\t}\n\t}\n\n\tprotected _groupData() {\n\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst numberFormat = this.get(\"numberFormat\");\n\t\tconst formatter = this.getNumberFormatter();\n\n\t\tlet text = \"\";\n\n\t\tif (numberFormat) {\n\t\t\ttext = formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\ttext = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\n\t\t}\n\t\treturn text;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t\tconst step = this.getPrivate(\"step\")!;\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")!;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! + step;\n\n\t\t\tlet value = selectionMin - step;\n\t\t\tlet differencePower = 1;\n\t\t\tlet minLog = min;\n\n\t\t\tif (logarithmic) {\n\t\t\t\tvalue = this._minLogAdjusted;\n\n\t\t\t\tif (value < selectionMin) {\n\t\t\t\t\twhile (value < selectionMin) {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tminLog = value;\n\n\t\t\t\tif (minLog <= 0) {\n\t\t\t\t\tminLog = 1;\n\t\t\t\t\tif (step < 1) {\n\t\t\t\t\t\tminLog = step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdifferencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\n\n\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E - 5);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/// minor grid\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\n\t\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\n\n\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t\tconst stepAdjusted = Math.round(step / stepPower);\n\n\t\t\tlet minorGridCount = 2;\n\n\t\t\tif ($math.round(stepAdjusted / 5, 10) % 1 == 0) {\n\t\t\t\tminorGridCount = 5;\n\t\t\t}\n\n\t\t\tif ($math.round(stepAdjusted / 10, 10) % 1 == 0) {\n\t\t\t\tminorGridCount = 10;\n\t\t\t}\n\n\t\t\tlet minorStep = step / minorGridCount;\n\n\t\t\t// end of minor grid\n\t\t\tlet i = 0;\n\t\t\tlet m = 0;\n\t\t\tlet previous = -Infinity;\n\n\t\t\twhile (value < selectionMax) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._formatText(value));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem);\n\n\t\t\t\tlet nextValue = value;\n\t\t\t\tif (!logarithmic) {\n\t\t\t\t\tnextValue += step;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\tnextValue = Math.pow(10, Math.log(minLog) * Math.LOG10E + i - 5);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnextValue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// minor grid\n\t\t\t\tif (minorGridEnabled) {\n\t\t\t\t\tlet minorValue = value + minorStep;\n\n\t\t\t\t\tif (logarithmic) {\n\t\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\t\tlet minorMinMaxStep = this._adjustMinMax(value, nextValue, 10);\n\t\t\t\t\t\t\tminorStep = minorMinMaxStep.step;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tminorValue = value + minorStep;\n\t\t\t\t\t}\n\n\t\t\t\t\twhile (minorValue < nextValue - step * 0.00000000001) {\n\t\t\t\t\t\tlet minorDataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\t\t\tif (this.minorDataItems.length < m + 1) {\n\t\t\t\t\t\t\tminorDataItem = new DataItem(this, undefined, {});\n\t\t\t\t\t\t\tthis.minorDataItems.push(minorDataItem);\n\t\t\t\t\t\t\tthis.processDataItem(minorDataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tminorDataItem = this.minorDataItems[m];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._createAssets(minorDataItem, [\"minor\"], true);\n\t\t\t\t\t\tthis._toggleDataItem(minorDataItem, true);\n\t\t\t\t\t\tminorDataItem.setRaw(\"value\", minorValue);\n\n\t\t\t\t\t\tconst minorLabel = minorDataItem.get(\"label\");\n\t\t\t\t\t\tif (minorLabel) {\n\t\t\t\t\t\t\tif (minorLabelsEnabled) {\n\t\t\t\t\t\t\t\tminorLabel.set(\"text\", this._formatText(minorValue));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tminorLabel.setPrivate(\"visible\", false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._prepareDataItem(minorDataItem);\n\t\t\t\t\t\tminorValue += minorStep;\n\t\t\t\t\t\tm++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvalue = nextValue;\n\n\t\t\t\tif (previous == value) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\t\t\t\tif (stepPower < 1) {\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\n\t\t\t\t\t// round value to avoid floating point issues\n\t\t\t\t\tvalue = $math.round(value, decCount);\n\t\t\t\t}\n\t\t\t\ti++;\n\n\t\t\t\tprevious = value;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t\t}\n\n\t\t\tfor (let j = m; j < this.minorDataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.minorDataItems[j], false);\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis._updateGhost();\n\t\t}\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\t\tlet value = dataItem.get(\"value\")!;\n\t\tlet endValue = dataItem.get(\"endValue\");\n\n\t\tlet position = this.valueToPosition(value);\n\n\t\tlet endPosition = position;\n\t\tlet fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\")!);\n\n\t\tif ($type.isNumber(endValue)) {\n\t\t\tendPosition = this.valueToPosition(endValue);\n\t\t\tfillEndPosition = endPosition;\n\t\t}\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tif (endValue == null) {\n\t\t\t\tfillEndPosition = position;\n\t\t\t}\n\t\t}\n\n\t\tlet labelEndPosition = endPosition;\n\n\t\tlet labelEndValue = dataItem.get(\"labelEndValue\");\n\t\tif (labelEndValue != null) {\n\t\t\tlabelEndPosition = this.valueToPosition(labelEndValue);\n\t\t}\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, labelEndPosition, count);\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\trenderer.updateGrid(grid, position, endPosition);\n\t\tif (grid) {\n\t\t\tif (value == this.get(\"baseValue\", 0)) {\n\t\t\t\tgrid.addTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t\telse if (grid.hasTag(\"base\")) {\n\t\t\t\tgrid.removeTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, labelEndPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tif (!dataItem.get(\"isRange\")) {\n\t\t\tconst fillRule = this.get(\"fillRule\");\n\t\t\tif (fillRule) {\n\t\t\t\tfillRule(dataItem)\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleRangeChange() {\n\t\tlet selectionMin: number = this.positionToValue(this.get(\"start\", 0));\n\t\tlet selectionMax: number = this.positionToValue(this.get(\"end\", 1));\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\n\t\tthis.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\n\n\t\tselectionMin = $math.round(selectionMin, stepDecimalPlaces);\n\t\tselectionMax = $math.round(selectionMax, stepDecimalPlaces);\n\n\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet step = minMaxStep.step;\n\t\tselectionMin = minMaxStep.min;\n\t\tselectionMax = minMaxStep.max;\n\n\t\tif (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\n\t\t\t// do not change to setPrivate, will cause SO\n\t\t\tthis.setPrivateRaw(\"selectionMin\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMax\", selectionMax);\n\n\t\t\tthis.setPrivateRaw(\"step\", step);\n\t\t}\n\t}\n\n\t/**\n\t * Converts a relative position to a corresponding numeric value from axis\n\t * scale.\n\t *\n\t * @param   position  Relative position\n\t * @return            Value\n\t */\n\tpublic positionToValue(position: number): number {\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn position * (max - min) + min;\n\t\t}\n\t\telse {\n\t\t\treturn Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\n\t\t}\n\t}\n\n\t/**\n\t * Convers value to a relative position on axis.\n\t *\n\t * @param   value  Value\n\t * @return         Relative position\n\t */\n\tpublic valueToPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic valueToFinalPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"minFinal\")!;\n\t\tconst max = this.getPrivate(\"maxFinal\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getX(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value);\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getY(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value)\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number) {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * Returns relative position of axis' `baseValue`.\n\t *\n\t * @return  Base value position\n\t */\n\tpublic basePosition(): number {\n\t\treturn this.valueToPosition(this.baseValue());\n\t}\n\n\t/**\n\t * Base value of the [[ValueAxis]], which determines positive and negative\n\t * values.\n\t *\n\t * @return Base value\n\t */\n\tpublic baseValue(): number {\n\t\tconst min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\n\t\tconst max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\n\t\tlet baseValue = this.get(\"baseValue\", 0);\n\n\t\tif (baseValue < min) {\n\t\t\tbaseValue = min;\n\t\t}\n\n\t\tif (baseValue > max) {\n\t\t\tbaseValue = max\n\t\t}\n\n\t\treturn baseValue;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic cellEndValue(value: number): number {\n\t\treturn value;\n\t}\n\n\tprotected fixSmallStep(step: number): number {\n\t\t// happens because of floating point error\n\t\tif (1 + step === 1) {\n\t\t\tstep *= 2;\n\t\t\treturn this.fixSmallStep(step);\n\t\t}\n\t\treturn step;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\treturn min;\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\treturn max;\n\t}\n\n\tpublic _calculateTotals() {\n\t\tif (this.get(\"calculateTotals\")) {\n\t\t\tlet series = this.series[0];\n\t\t\tif (series) {\n\t\t\t\tlet startIndex = series.startIndex();\n\n\t\t\t\tif (series.dataItems.length > 0) {\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t}\n\t\t\t\t\tlet endIndex = series.endIndex();\n\t\t\t\t\tif (endIndex < series.dataItems.length) {\n\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet field: string | undefined;\n\t\t\t\t\tlet vc: string | undefined;\n\n\t\t\t\t\tif (series.get(\"yAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueY\";\n\t\t\t\t\t\tvc = \"vcy\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"xAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueX\";\n\t\t\t\t\t\tvc = \"vcx\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet fieldWorking = field + \"Working\";\n\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tlet sum = 0;\n\t\t\t\t\t\t\tlet total = 0;\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Total\") as any, total);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Sum\") as any, sum);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"TotalPercent\") as any, value / total * 100);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getSelectionMinMax() {\n\t\tconst min = this.getPrivate(\"minFinal\");\n\t\tconst max = this.getPrivate(\"maxFinal\");\n\n\t\tconst minDefined = this.get(\"min\");\n\t\tconst maxDefined = this.get(\"max\");\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tconst selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\n\t\tlet strictMinMax = this.get(\"strictMinMax\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tlet selectionMin = max;\n\t\t\tlet selectionMax = min;\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\t\tconst outOfSelection = series.getPrivate(\"outOfSelection\");\n\n\t\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\t\tlet minX = series.getPrivate(\"minX\");\n\t\t\t\t\t\t\tlet maxX = series.getPrivate(\"maxX\");\n\n\t\t\t\t\t\t\t// solves #90085\n\t\t\t\t\t\t\tif (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\n\t\t\t\t\t\t\t\tminX = undefined;\n\t\t\t\t\t\t\t\tmaxX = undefined;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinX\", minX);\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxX\", maxX);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\n\t\t\t\t\t\t\tlet minY = series.getPrivate(\"minY\");\n\t\t\t\t\t\t\tlet maxY = series.getPrivate(\"maxY\");\n\n\t\t\t\t\t\t\t// solves #90085\n\t\t\t\t\t\t\tif (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\n\t\t\t\t\t\t\t\tminY = undefined;\n\t\t\t\t\t\t\t\tmaxY = undefined;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinY\", minY);\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxY\", maxY);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!series.isHidden() && !series.isShowing()) {\n\t\t\t\t\t\tif ($type.isNumber(seriesMin)) {\n\t\t\t\t\t\t\tselectionMin = Math.min(selectionMin, seriesMin);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(seriesMax)) {\n\t\t\t\t\t\t\tselectionMax = Math.max(selectionMax, seriesMax);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.axisRanges.each((range) => {\n\t\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (selectionMin > selectionMax) {\n\t\t\t\t[selectionMin, selectionMax] = [selectionMax, selectionMin]\n\t\t\t}\n\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._minReal)) {\n\t\t\t\t\tselectionMin = this._minReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._maxReal)) {\n\t\t\t\t\tselectionMax = this._maxReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionMin === selectionMax) {\n\t\t\t\tlet smin = selectionMin;\n\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\tselectionMax += this._deltaMinMax;\n\n\t\t\t\tif (selectionMin < min) {\n\t\t\t\t\tlet d = smin - min;\n\t\t\t\t\tif (d == 0) {\n\t\t\t\t\t\td = this._deltaMinMax;\n\t\t\t\t\t}\n\n\t\t\t\t\tselectionMin = smin - d;\n\t\t\t\t\tselectionMax = smin + d;\n\n\t\t\t\t\tstrictMinMax = true;\n\t\t\t\t}\n\n\t\t\t\tlet minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\n\t\t\t\tselectionMin = minMaxStep2.min;\n\t\t\t\tselectionMax = minMaxStep2.max;\n\t\t\t}\n\n\t\t\tlet selectionMinReal = selectionMin;\n\t\t\tlet selectionMaxReal = selectionMax;\n\n\t\t\tselectionMin -= (selectionMax - selectionMin) * extraMin;\n\t\t\tselectionMax += (selectionMax - selectionMin) * extraMax;\n\n\t\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\n\n\t\t\tselectionMin = minMaxStep.min;\n\t\t\tselectionMax = minMaxStep.max;\n\n\t\t\tselectionMin = $math.fitToRange(selectionMin, min, max);\n\t\t\tselectionMax = $math.fitToRange(selectionMax, min, max);\n\n\t\t\t// do it for the second time !important\t\t\t\n\t\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\t\tif (!strictMinMax) {\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tminMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\n\n\t\t\t\tif (minMaxStep.min < min) {\n\t\t\t\t\tminMaxStep.min = min;\n\t\t\t\t}\n\n\t\t\t\tif (minMaxStep.max > max) {\n\t\t\t\t\tminMaxStep.max = max;\n\t\t\t\t}\n\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = Math.max(selectionMin, minDefined);\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = Math.min(selectionMax, maxDefined);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif (selectionStrictMinMax) {\n\t\t\t\tselectionMin = selectionMinReal - (selectionMax - selectionMin) * extraMin;\n\t\t\t\tselectionMax = selectionMaxReal + (selectionMax - selectionMin) * extraMax;\n\t\t\t}\n\n\t\t\tif (this.get(\"logarithmic\")) {\n\n\t\t\t\tif (selectionMin <= 0) {\n\t\t\t\t\tselectionMin = selectionMinReal * (1 - Math.min(extraMin, 0.99));\n\t\t\t\t}\n\n\t\t\t\tif (selectionMin < min) {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t\tif (selectionMax > max) {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet len = Math.min(20, Math.ceil(Math.log(this.getPrivate(\"maxZoomFactor\", 100) + 1) / Math.LN10) + 2);\n\n\t\t\tlet start = $math.round(this.valueToFinalPosition(selectionMin), len);\n\t\t\tlet end = $math.round(this.valueToFinalPosition(selectionMax), len);\n\n\t\t\tthis.setPrivateRaw(\"selectionMinFinal\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\n\n\t\t\tthis.zoom(start, end);\n\t\t}\n\t}\n\n\n\tprotected _getMinMax() {\n\t\tlet minDefined = this.get(\"min\");\n\t\tlet maxDefined = this.get(\"max\");\n\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tlet minDiff = Infinity;\n\n\t\t$array.each(this.series, (series) => {\n\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minX\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxX\");\n\t\t\t\t}\n\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minY\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxY\");\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\n\t\t\t\t\tmin = Math.min(min, seriesMin);\n\t\t\t\t\tmax = Math.max(max, seriesMax);\n\n\t\t\t\t\tlet diff = seriesMax - seriesMin;\n\n\t\t\t\t\tif (diff <= 0) {\n\t\t\t\t\t\tdiff = Math.abs(seriesMax / 100);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff < minDiff) {\n\t\t\t\t\t\tminDiff = diff;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.axisRanges.each((range) => {\n\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\tif (min <= 0) {\n\t\t\t\t\tmin = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (min <= 0) {\n\t\t\t\tnew Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t}\n\t\t}\n\n\t\tif (min === 0 && max === 0) {\n\t\t\tmax = 0.9;\n\t\t\tmin = -0.9;\n\t\t}\n\n\t\tif ($type.isNumber(minDefined)) {\n\t\t\tmin = minDefined;\n\t\t}\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tmax = maxDefined;\n\t\t}\n\n\t\t// meaning no min/max found on series/ranges and no min/max was defined\n\t\tif (min === Infinity || max === -Infinity) {\n\t\t\tthis.setPrivate(\"minFinal\", undefined);\n\t\t\tthis.setPrivate(\"maxFinal\", undefined);\n\t\t\treturn;\n\t\t}\n\n\t\tconst initialMin = min;\n\t\tconst initialMax = max;\n\n\t\t// adapter\n\t\tlet minAdapted = this.adapters.fold(\"min\", min);\n\t\tlet maxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\t// DateAxis does some magic here\n\t\tmin = this._fixMin(min);\n\t\tmax = this._fixMax(max);\n\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\t\t\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\n\t\t\tif (max - min !== 0) {\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getDelta(max);\n\t\t\t}\n\n\t\t\tmin -= this._deltaMinMax;\n\t\t\tmax += this._deltaMinMax;\n\t\t}\n\n\t\t// add extras\n\t\tmin -= (max - min) * extraMin;\n\t\tmax += (max - min) * extraMax;\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\t// don't let min go below 0 if real min is >= 0\n\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\tmin = 0;\n\t\t\t}\n\t\t\t// don't let max go above 0 if real max is <= 0\n\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\tmax = 0;\n\t\t\t}\n\t\t}\n\n\t\tthis._minReal = min;\n\t\tthis._maxReal = max;\n\t\tlet strictMinMax = this.get(\"strictMinMax\");\n\t\tlet strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\n\t\tif (strictMinMaxSelection) {\n\t\t\tstrictMinMax = strictMinMaxSelection;\n\t\t}\n\n\t\tlet strict = strictMinMax;\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tstrict = true;\n\t\t}\n\n\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(min, max, gridCount, strict);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// do it for the second time with strict true (importat!)\n\t\tminMaxStep = this._adjustMinMax(min, max, gridCount, true);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// return min max if strict\n\t\tif (strictMinMax) {\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tmin = minDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = this._minReal;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tmax = maxDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = this._maxReal;\n\t\t\t}\n\n\t\t\tif (max - min <= 0.00000001) {\n\t\t\t\tmin -= this._deltaMinMax;\n\t\t\t\tmax += this._deltaMinMax;\n\t\t\t}\n\n\t\t\tmin -= (max - min) * extraMin;\n\t\t\tmax += (max - min) * extraMax;\n\t\t}\n\n\t\tminAdapted = this.adapters.fold(\"min\", min);\n\t\tmaxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\tif (minDiff == Infinity) {\n\t\t\tminDiff = (max - min)\n\t\t}\n\n\t\t// this is to avoid floating point number error\n\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(max - min)) * Math.LOG10E)) + 5;\n\n\t\tmin = $math.round(min, decCount);\n\t\tmax = $math.round(max, decCount);\n\n\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\tif (syncWithAxis) {\n\t\t\tminMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\n\t\t\tmin = minMaxStep.min;\n\t\t\tmax = minMaxStep.max;\n\t\t}\n\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.max(1, Math.ceil((max - min) / minDiff * this.get(\"maxZoomFactor\", 100))));\n\t\tthis._fixZoomFactor();\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tthis._minLogAdjusted = min;\n\t\t\tmin = this._minReal;\n\t\t\tmax = this._maxReal;\n\n\t\t\tif (min <= 0) {\n\t\t\t\tmin = initialMin * (1 - Math.min(extraMin, 0.99));\n\t\t\t}\n\t\t}\n\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tif (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\n\t\t\t\tthis.setPrivate(\"minFinal\", min);\n\t\t\t\tthis.setPrivate(\"maxFinal\", max);\n\t\t\t\tthis._saveMinMax(min, max);\n\n\t\t\t\tconst duration = this.get(\"interpolationDuration\", 0);\n\t\t\t\tconst easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tthis.animatePrivate({ key: \"min\", to: min, duration, easing });\n\t\t\t\tthis.animatePrivate({ key: \"max\", to: max, duration, easing });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _fixZoomFactor() {\n\t}\n\n\tprotected _getDelta(max: number) {\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tthis._deltaMinMax = power;\n\t}\n\n\tprotected _saveMinMax(_min: number, _max: number) {\n\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\t// will fail if 0\n\t\tif (gridCount <= 1) {\n\t\t\tgridCount = 1;\n\t\t}\n\n\t\tgridCount = Math.round(gridCount);\n\n\t\tlet initialMin: number = min;\n\t\tlet initialMax: number = max;\n\n\t\tlet difference = max - min;\n\n\t\t// in case min and max is the same, use max\n\t\tif (difference === 0) {\n\t\t\tdifference = Math.abs(max);\n\t\t}\n\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tlet extra: number = power;\n\t\tif (strictMode) {\n\t\t\textra = 0;\n\t\t}\n\n\t\t// round down min\n\t\tif (strictMode) {\n\t\t\tmin = Math.floor(min / power) * power;\n\t\t\t// round up max\n\t\t\tmax = Math.ceil(max / power) * power;\n\t\t}\n\t\telse {\n\t\t\tmin = Math.ceil(min / power) * power - extra;\n\t\t\t// round up max\n\t\t\tmax = Math.floor(max / power) * power + extra;\n\t\t}\n\n\t\t// don't let min go below 0 if real min is >= 0\n\t\tif (min < 0 && initialMin >= 0) {\n\t\t\tmin = 0;\n\t\t}\n\t\t// don't let max go above 0 if real max is <= 0\n\t\tif (max > 0 && initialMax <= 0) {\n\t\t\tmax = 0;\n\t\t}\n\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\n\t\tpower = Math.pow(10, Math.floor(exponent));\n\t\tpower = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\n\n\t\t// approximate difference between two grid lines\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t// the step should divide by  2, 5, and 10.\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\n\n\t\tif (stepDivisor > 5) {\n\t\t\tstepDivisor = 10;\n\t\t}\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\n\t\t\tstepDivisor = 5;\n\t\t}\n\n\t\t// now get real step\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\n\n\t\tlet maxPrecision = this.get(\"maxPrecision\");\n\t\tif ($type.isNumber(maxPrecision)) {\n\t\t\tlet ceiledStep = $math.ceil(step, maxPrecision);\n\t\t\tif (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\n\t\t\t\tstep = ceiledStep;\n\t\t\t}\n\t\t}\n\n\t\tlet decCount: number = 0;\n\t\t// in case numbers are smaller than 1\n\t\tif (stepPower < 1) {\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\n\t\t\t// round step\n\t\t\tstep = $math.round(step, decCount);\n\t\t}\n\n\t\t// final min and max\n\t\tlet minCount = Math.floor(min / step);\n\n\t\tmin = $math.round(step * minCount, decCount);\n\n\t\tlet maxCount: number;\n\n\t\tif (!strictMode) {\n\t\t\tmaxCount = Math.ceil(max / step);\n\t\t}\n\t\telse {\n\t\t\tmaxCount = Math.floor(max / step);\n\t\t}\n\n\t\tif (maxCount === minCount) {\n\t\t\tmaxCount++;\n\t\t}\n\n\t\tmax = $math.round(step * maxCount, decCount);\n\n\t\tif (max < initialMax) {\n\t\t\tmax = max + step;\n\t\t}\n\n\t\tif (min > initialMin) {\n\t\t\tmin = min - step;\n\t\t}\n\n\n\t\tstep = this.fixSmallStep(step);\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\tconst numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\n\t\tconst formatter = this.getNumberFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\tif (numberFormat) {\n\t\t\treturn formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\treturn formatter.format(value, undefined, decimals);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tlet index: number | undefined = undefined;\n\t\tlet oldDiff: number;\n\t\t$array.each(series.dataItems, (dataItem, i) => {\n\t\t\tconst diff = Math.abs(dataItem.get(fieldName) - value);\n\t\t\tif (index === undefined || diff < oldDiff) {\n\t\t\t\tindex = i;\n\t\t\t\toldDiff = diff;\n\t\t\t}\n\t\t});\n\n\t\tif (index != null) {\n\t\t\treturn series.dataItems[index];\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t}\n\t}\n\n\n\t/**\n\t * Syncs with a target axis.\n\t *\n\t * @param  min  Min\n\t * @param  max  Max\n\t * @param  step Step\n\t */\n\tprotected _syncAxes(min: number, max: number, step: number, syncMin: number, syncMax: number, syncStep: number) {\n\t\tlet axis = this.get(\"syncWithAxis\");\n\t\tif (axis) {\n\t\t\tlet count: number = Math.round(syncMax - syncMin) / syncStep;\n\t\t\tlet currentCount = Math.round((max - min) / step);\n\n\t\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\n\t\t\t\tlet synced = false;\n\t\t\t\tlet c = 0\n\t\t\t\tlet diff = (max - min) * 0.01;\n\t\t\t\tlet omin = min;\n\t\t\t\tlet omax = max;\n\t\t\t\tlet ostep = step;\n\n\t\t\t\twhile (synced != true) {\n\t\t\t\t\tsynced = this._checkSync(omin, omax, ostep, count);\n\t\t\t\t\tc++;\n\t\t\t\t\tif (c > 500) {\n\t\t\t\t\t\tsynced = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!synced) {\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\n\t\t\t\t\t\t\tomin = min - diff * c;\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\n\t\t\t\t\t\t\t\tomin = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tomax = max + diff * c;\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\n\t\t\t\t\t\t\t\tomax = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\n\t\t\t\t\t\tomin = minMaxStep.min;\n\t\t\t\t\t\tomax = minMaxStep.max;\n\t\t\t\t\t\tostep = minMaxStep.step;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmin = omin;\n\t\t\t\t\t\tmax = omax;\n\t\t\t\t\t\tstep = ostep;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns `true` if axis needs to be resunced with some other axis.\n\t */\n\tprotected _checkSync(min: number, max: number, step: number, count: number): boolean {\n\t\tlet currentCount = (max - min) / step;\n\t\tfor (let i = 1; i < count; i++) {\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\tlet max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\n\t\tlet min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\n\n\t\tif ($type.isNumber(max) && $type.isNumber(min)) {\n\t\t\treturn this.getPrivate(\"step\", 1) / (max - min);\n\t\t}\n\t\treturn 0.05;\n\t}\n\n\t/**\n\t * @ignore\n\t */\t\n\tpublic nextPosition(count?: number) {\n\t\tif (count == null) {\n\t\t\tcount = 1;\n\t\t}\n\n\t\tif (this.get(\"renderer\").getPrivate(\"letter\") == \"Y\") {\n\t\t\tcount *= -1;\n\t\t}\n\n\t\tlet value = this.positionToValue(this.getPrivate(\"tooltipPosition\", 0));\n\t\tvalue += this.getPrivate(\"step\", 1) * count;\n\t\tvalue = $math.fitToRange(value, this.getPrivate(\"selectionMin\", 0), this.getPrivate(\"selectionMax\", 1));\n\n\t\treturn this.toGlobalPosition(this.valueToPosition(value));\n\t}\n}\n", "import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IMinMaxStep, IValueAxisEvents } from \"./ValueAxis\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $order from \"../../../core/util/Order\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $time from \"../../../core/util/Time\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport type { TimeUnit } from \"../../../core/util/Time\";\n\nexport interface IDateAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * IMPORTANT: `startLocation` is not supported by [[GaplessDateAxis]].\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * IMPORTANT: `endLocation` is not supported by [[GaplessDateAxis]].\n\t * \n\t * @default 1\n\t */\n\tendLocation?: number;\n\n\t/**\n\t * Should axis group data items togeter dynamically?\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupData?: boolean;\n\n\t/**\n\t * Maximum number of data items in the view before data grouping kicks in.\n\t *\n\t * @default 500\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupCount?: number;\n\n\t/**\n\t * Force data item grouping to specific interval. This interval must be within groupIntervals array for this to work.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to group data items into.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for minor grid labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Minor_grid_formats} for more info\n\t * @since 5.6.0\n\t */\n\tminorDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t */\n\ttooltipDateFormat?: string | Intl.DateTimeFormatOptions;\n\n\t/**\n\t * Time unit-specific formats to use for axis tooltip.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A value which indicates relative position within axis cell to get timestamp\n\t * for the tooltip from.\n\t *\n\t * Values are from `-1` to `1`.\n\t *\n\t * If not set, it will use `tooltipLocation` value, if `tooltipLocation`` is\n\t * not set, it will use -0.5.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipIntervalOffset?: number;\n}\n\nexport interface IDateAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDateAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * Current group interval.\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Current grid interval.\n\t */\n\tgridInterval: ITimeInterval;\n}\n\nexport interface IDateAxisEvents extends IValueAxisEvents {\n\n\t/**\n\t * Kicks in when data grouping is on, and current group interval changes, e.g. via zooming the chart.\n\t *\n\t * @since 5.2.43\n\t */\n\tgroupintervalchanged: {}\n\n}\n\n/**\n * Creates a date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\n * @important\n */\nexport class DateAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DateAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DateAxis.className]);\n\n\tdeclare public _settings: IDateAxisSettings<R>;\n\tdeclare public _privateSettings: IDateAxisPrivate;\n\tdeclare public _dataItemSettings: IDateAxisDataItem;\n\tdeclare public _events: IDateAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _seriesDataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\tprotected _baseDuration: number = 1;\n\n\tprotected _intervalMax: { [index: string]: number } = {};\n\tprotected _intervalMin: { [index: string]: number } = {};\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\tthis.on(\"baseInterval\", () => {\n\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t})\n\t}\n\n\tprotected _setBaseInterval(interval: ITimeInterval) {\n\t\tthis.setPrivateRaw(\"baseInterval\", interval);\n\t\tthis._baseDuration = $time.getIntervalDuration(interval);\n\t}\n\n\tprotected _fixZoomFactor() {\n\t\tconst maxZoomFactor = this.get(\"maxZoomFactor\");\n\t\tif (maxZoomFactor != null && maxZoomFactor != Infinity) {\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", maxZoomFactor);\n\t\t}\n\t\telse {\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\n\t\t}\n\t}\n\n\tprotected _groupData() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif (($type.isNumber(min) && $type.isNumber(max))) {\n\n\t\t\tthis._fixZoomFactor();\n\n\t\t\tconst groupInterval = this.getPrivate(\"groupInterval\")!;\n\t\t\tif (groupInterval) {\n\t\t\t\tthis._setBaseInterval(groupInterval);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t\t}\n\n\n\t\t\tif (this.isDirty(\"groupInterval\")) {\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\")!;\n\t\t\t\tif (groupInterval) {\n\t\t\t\t\tthis.setRaw(\"groupIntervals\", [groupInterval]);\n\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"groupData\")) {\n\t\t\t\tif (!this._dataGrouped) {\n\t\t\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tthis._groupSeriesData(series);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\t\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tseries.setDataSet(mainDataSetId);\n\t\t\t\t\t\t\tseries.resetGrouping();\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._setBaseInterval(baseInterval);\n\t\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", undefined);\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t\tthis._dataGrouped = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _groupSeriesData(series: XYSeries) {\n\t\tif (this.get(\"groupData\") && !series.get(\"groupDataDisabled\")) {\n\n\t\t\tthis._dataGrouped = true; // helps to avoid double grouping\n\n\t\t\tthis._seriesDataGrouped = true;\n\n\t\t\t// make array of intervals which will be used;\n\t\t\tlet intervals: ITimeInterval[] = [];\n\t\t\tlet baseDuration = this.baseMainDuration();\n\n\t\t\tlet groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\tif (groupIntervals) { }\n\t\t\t$array.each(groupIntervals, (interval) => {\n\t\t\t\tlet intervalDuration = $time.getIntervalDuration(interval);\n\t\t\t\tif (intervalDuration > baseDuration) {\n\t\t\t\t\tintervals.push(interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tseries._dataSets = {};\n\n\t\t\tconst key = this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!;\n\t\t\tlet fields: Array<string>;\n\n\t\t\tconst baseAxis = series.get(\"baseAxis\");\n\n\t\t\tif (series.get(\"xAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueYFields;\n\t\t\t}\n\t\t\telse if (series.get(\"yAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueXFields;\n\t\t\t}\n\n\t\t\tlet dataItems = series._mainDataItems;\n\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\n\t\t\tseries._dataSets[mainDataSetId] = dataItems;\n\n\t\t\tconst groupCallback = series.get(\"groupDataCallback\");\n\t\t\tlet groupOriginals = series.get(\"groupDataWithOriginals\", false);\n\t\t\tif (groupCallback) {\n\t\t\t\tgroupOriginals = true;\n\t\t\t}\n\n\t\t\t$array.each(intervals, (interval) => {\n\n\t\t\t\tlet previousTime = -Infinity;\n\t\t\t\tlet dataSetId = interval.timeUnit + interval.count;\n\t\t\t\tseries._dataSets[dataSetId] = [];\n\n\t\t\t\tlet newDataItem: DataItem<IXYSeriesDataItem>;\n\n\t\t\t\tlet sum: { [index: string]: number } = {};\n\t\t\t\tlet count: { [index: string]: number } = {};\n\n\t\t\t\tlet groupFieldValues: { [index: string]: string } = {};\n\t\t\t\tlet workingFields: { [index: string]: string } = {};\n\n\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\tgroupFieldValues[field] = series.get((field + \"Grouped\") as any);\n\t\t\t\t\tworkingFields[field] = field + \"Working\";\n\t\t\t\t})\n\n\t\t\t\tlet intervalDuration = $time.getDuration(interval.timeUnit);\n\n\t\t\t\tlet firstItem = dataItems[0];\n\t\t\t\tlet firstTime: any;\n\t\t\t\tif (firstItem) {\n\t\t\t\t\tfirstTime = dataItems[0].get(key as any);\n\t\t\t\t}\n\n\t\t\t\tlet prevNewDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tlet time = dataItem.get(key as any);\n\t\t\t\t\t//let roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, firstDay, utc, firstDate, timezone).getTime();\n\t\t\t\t\tlet roundedTime = $time.roun(time, interval.timeUnit, interval.count, this._root, firstTime);\n\t\t\t\t\tlet dataContext: any;\n\n\t\t\t\t\tif (previousTime < roundedTime - intervalDuration / 24) {\n\t\t\t\t\t\tdataContext = $object.copy(dataItem.dataContext);\n\n\t\t\t\t\t\tnewDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\n\t\t\t\t\t\tnewDataItem.setRaw(key as any, roundedTime);\n\n\t\t\t\t\t\tseries._dataSets[dataSetId].push(newDataItem);\n\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\t\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, value);\n\t\t\t\t\t\t\t\tcount[field] = 1;\n\t\t\t\t\t\t\t\tsum[field] = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.set(\"originals\", [dataItem]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprevNewDataItem = newDataItem;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet groupKey = groupFieldValues[field];\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\n\t\t\t\t\t\t\tif (value != null) {\n\n\t\t\t\t\t\t\t\tlet currentValue = newDataItem.get(field as any);\n\n\t\t\t\t\t\t\t\tswitch (groupKey) {\n\t\t\t\t\t\t\t\t\tcase \"close\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"sum\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, currentValue + value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"open\":\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"low\":\n\t\t\t\t\t\t\t\t\t\tif (value < currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"high\":\n\t\t\t\t\t\t\t\t\t\tif (value > currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"average\":\n\t\t\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t\t\t\tlet average = sum[field] / count[field];\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, average);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"extreme\":\n\t\t\t\t\t\t\t\t\t\tif (Math.abs(value) > Math.abs(currentValue)) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, newDataItem.get(field as any));\n\t\t\t\t\t\t\t\tlet dataContext: any = $object.copy(dataItem.dataContext);\n\t\t\t\t\t\t\t\tdataContext[key as any] = roundedTime;\n\t\t\t\t\t\t\t\tnewDataItem.dataContext = dataContext;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.get(\"originals\")!.push(dataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpreviousTime = roundedTime;\n\t\t\t\t})\n\n\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (series._dataSetId) {\n\t\t\t\tseries.setDataSet(series._dataSetId);\n\t\t\t}\n\t\t\tthis.markDirtySize();\n\t\t\t// solves problem if new series was added\n\t\t\tif (this._seriesAdded) {\n\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\tthis.markDirtySize();\n\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._groupingCalculated = false;\n\t\tthis._dataGrouped = false;\n\t}\n\n\t/**\n\t * Returns a time interval axis would group data to for a specified duration.\n\t *\n\t * @since 5.2.1\n\t */\n\tpublic getGroupInterval(duration: number): ITimeInterval {\n\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\tlet groupInterval = $time.chooseInterval(0, duration, this.get(\"groupCount\", Infinity), this.get(\"groupIntervals\")!);\n\t\tif ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\n\t\t\tgroupInterval = { ...baseInterval };\n\t\t}\n\t\treturn groupInterval;\n\t}\n\n\t/**\n\t * Return `max` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Max\n\t */\n\tpublic getIntervalMax(interval: ITimeInterval): number {\n\t\treturn this._intervalMax[interval.timeUnit + interval.count];\n\t}\n\n\t/**\n\t * Return `min` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Min\n\t */\n\tpublic getIntervalMin(interval: ITimeInterval): number {\n\t\treturn this._intervalMin[interval.timeUnit + interval.count];\n\t}\n\n\tprotected _handleRangeChange() {\n\t\tsuper._handleRangeChange();\n\n\t\tlet selectionMin = Math.round(this.getPrivate(\"selectionMin\")! as number);\n\t\tlet selectionMax = Math.round(this.getPrivate(\"selectionMax\")! as number);\n\n\t\tif ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\n\n\t\t\tif (this.get(\"endLocation\") == 0) {\n\t\t\t\tselectionMax += 1;\n\t\t\t}\n\n\t\t\tif (this.get(\"groupData\") && !this._groupingCalculated) {\n\t\t\t\tthis._groupingCalculated = true;\n\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\");\n\t\t\t\tlet current = this.getPrivate(\"groupInterval\");\n\n\t\t\t\tlet modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\n\n\t\t\t\tif (current) {\n\t\t\t\t\tlet duration = $time.getIntervalDuration(current);\n\t\t\t\t\tmodifiedDifference = Math.ceil(modifiedDifference / duration) * duration;\n\t\t\t\t}\n\n\t\t\t\tif (!groupInterval) {\n\t\t\t\t\tgroupInterval = this.getGroupInterval(modifiedDifference);\n\t\t\t\t}\n\n\t\t\t\tif (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count) || this._seriesDataGrouped)) {\n\t\t\t\t\tthis._seriesDataGrouped = false;\n\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", groupInterval);\n\t\t\t\t\tthis._setBaseInterval(groupInterval)\n\n\n\t\t\t\t\tlet newId = groupInterval.timeUnit + groupInterval.count;\n\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\t\t\tseries.setDataSet(newId);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tthis.markDirtyExtremes();\n\n\t\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\t\t\tconst type = \"groupintervalchanged\";\n\t\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\n\t\t\t\t\tconst start = $array.getFirstSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMin);\n\t\t\t\t\t});\n\n\t\t\t\t\tlet startIndex = start.index;\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex -= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tselectionMax += this.baseDuration() * (1 - this.get(\"endLocation\", 1));\n\n\t\t\t\t\tconst end = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMax);\n\t\t\t\t\t});\n\n\t\t\t\t\tlet endIndex = end.index;\n\t\t\t\t\tlet endIndex2 = endIndex;\n\n\t\t\t\t\tif (endIndex2 > 1) {\n\t\t\t\t\t\tendIndex2--;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst firstDataItem = series.dataItems[startIndex];\n\t\t\t\t\tconst lastDataItem = series.dataItems[endIndex2];\n\n\t\t\t\t\tlet lastDate: number | undefined;\n\t\t\t\t\tlet firstDate: number | undefined;\n\t\t\t\t\tif (firstDataItem) {\n\t\t\t\t\t\tfirstDate = firstDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lastDataItem) {\n\t\t\t\t\t\tlastDate = lastDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet outOfSelection = false;\n\t\t\t\t\tif (lastDate != null && firstDate != null) {\n\t\t\t\t\t\tif (lastDate < selectionMin || firstDate > selectionMax) {\n\t\t\t\t\t\t\toutOfSelection = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tseries.setPrivate(\"outOfSelection\", outOfSelection);\n\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\tseries.setPrivate(\"adjustedStartIndex\", series._adjustStartIndex(startIndex));\n\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\t\t\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\t\t\tseries._markDirtyPrivateKey(\"adjustedStartIndex\");\n\t\t\t\t\t})\n\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, _strictMode?: boolean): IMinMaxStep {\n\t\treturn { min: min, max: max, step: (max - min) / gridCount };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic intervalDuration(): number {\n\t\treturn this._intervalDuration;\n\t}\n\n\tprotected _saveMinMax(min: number, max: number) {\n\t\tlet groupInterval = this.getPrivate(\"groupInterval\");\n\n\t\tif (!groupInterval) {\n\t\t\tgroupInterval = this.get(\"baseInterval\");\n\t\t}\n\n\t\tlet id = groupInterval.timeUnit + groupInterval.count;\n\t\tthis._intervalMin[id] = min;\n\t\tthis._intervalMax[id] = max;\n\t}\n\n\tprotected _getM(timeUnit: TimeUnit) {\n\t\tif (timeUnit == \"month\" || timeUnit == \"year\" || timeUnit == \"day\") {\n\t\t\treturn 1.05;\n\t\t}\n\t\treturn 1.01;\n\t}\n\n\tprotected _getMinorInterval(interval: ITimeInterval): ITimeInterval | undefined {\n\t\tlet minorGridInterval: ITimeInterval | undefined;\n\t\tlet count = interval.count;\n\t\tlet timeUnit = interval.timeUnit;\n\t\tif (count > 1) {\n\t\t\tif (count == 10) {\n\t\t\t\tcount = 5;\n\t\t\t}\n\t\t\telse if (count == 15) {\n\t\t\t\tcount = 5;\n\t\t\t}\n\t\t\telse if (count == 12) {\n\t\t\t\tcount = 2;\n\t\t\t}\n\t\t\telse if (count == 6) {\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t\telse if (count == 30) {\n\t\t\t\tcount = 10;\n\t\t\t}\n\t\t\telse if (count < 10) {\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t\tminorGridInterval = { timeUnit: timeUnit, count: count };\n\t\t}\n\t\tif (timeUnit == \"week\") {\n\t\t\tif (this.getPrivate(\"baseInterval\")?.timeUnit != \"week\") {\n\t\t\t\tminorGridInterval = { timeUnit: \"day\", count: 1 };\n\t\t\t}\n\t\t}\n\t\treturn minorGridInterval;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tconst root = this._root;\n\t\t\tconst selectionMin = Math.round(this.getPrivate(\"selectionMin\")! as number);\n\t\t\tconst selectionMax = Math.round(this.getPrivate(\"selectionMax\")! as number);\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\t\tlet value = selectionMin;\n\t\t\tlet i = 0;\n\n\t\t\tconst intervals = this.get(\"gridIntervals\")!;\n\t\t\tlet gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\n\n\t\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\t\tgridInterval = { ...baseInterval };\n\t\t\t}\n\n\t\t\tconst intervalDuration = $time.getIntervalDuration(gridInterval);\n\t\t\tthis._intervalDuration = intervalDuration;\n\n\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\t\tconst utc = root.utc;\n\t\t\tconst timezone = root.timezone;\n\n\t\t\t//value = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, firstDay, utc, new Date(min), timezone).getTime();\n\t\t\tvalue = $time.roun(selectionMin - intervalDuration, gridInterval.timeUnit, gridInterval.count, root, min);\n\t\t\tlet previousValue = value - intervalDuration;\n\t\t\tlet format: string | Intl.DateTimeFormatOptions;\n\t\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\t\tthis.setPrivateRaw(\"gridInterval\", gridInterval);\n\n\t\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\n\t\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\n\n\t\t\tlet minorGridInterval: ITimeInterval | undefined;\n\t\t\tlet minorDuration = 0;\n\n\t\t\tif (minorGridEnabled) {\n\t\t\t\tminorGridInterval = this._getMinorInterval(gridInterval);\n\t\t\t\tminorDuration = $time.getIntervalDuration(minorGridInterval);\n\t\t\t}\n\n\t\t\tlet m = 0;\n\t\t\twhile (value < selectionMax + intervalDuration) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\t\t\t\tdataItem.setRaw(\"labelEndValue\", undefined);\n\n\t\t\t\tlet endValue = value + $time.getDuration(gridInterval.timeUnit, gridInterval.count * this._getM(gridInterval.timeUnit));\n\t\t\t\t//endValue = $time.round(new Date(endValue), gridInterval.timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\tendValue = $time.roun(endValue, gridInterval.timeUnit, 1, root);\n\n\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\n\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, utc, timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\n\t\t\t\tlet count = gridInterval.count;\n\t\t\t\t// so that labels of week would always be at the beginning of the grid\n\t\t\t\tif (gridInterval.timeUnit == \"week\") {\n\t\t\t\t\tdataItem.setRaw(\"labelEndValue\", value);\n\t\t\t\t}\n\n\t\t\t\tif (minorGridEnabled) {\n\t\t\t\t\tcount = 1;\n\t\t\t\t\tlet timeUnit = gridInterval.timeUnit;\n\t\t\t\t\tif (timeUnit == \"week\") {\n\t\t\t\t\t\ttimeUnit = \"day\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet labelEndValue = value + $time.getDuration(timeUnit, this._getM(timeUnit));\n\t\t\t\t\t//labelEndValue = $time.round(new Date(labelEndValue), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\t\tlabelEndValue = $time.roun(labelEndValue, timeUnit, 1, root);\n\t\t\t\t\tdataItem.setRaw(\"labelEndValue\", labelEndValue);\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem, count);\n\n\t\t\t\tpreviousValue = value;\n\t\t\t\tvalue = endValue;\n\n\t\t\t\t// min grid\n\t\t\t\tif (minorGridInterval) {\n\t\t\t\t\tconst minorTimeUnit = minorGridInterval.timeUnit;\n\t\t\t\t\tconst minorCount = minorGridInterval.count;\n\t\t\t\t\tconst mmm = this._getM(minorTimeUnit);\n\n\t\t\t\t\t//let minorValue = $time.round(new Date(previousValue + minorDuration * this._getM(minorGridInterval.timeUnit)), minorGridInterval.timeUnit, minorGridInterval.count, firstDay, utc, new Date(previousValue), timezone).getTime();\n\t\t\t\t\tlet minorValue = $time.roun(previousValue + minorDuration * mmm, minorTimeUnit, minorCount, root, previousValue);\n\n\t\t\t\t\tlet previousMinorValue: number | undefined;\n\t\t\t\t\tlet minorFormats = this.get(\"minorDateFormats\", this.get(\"dateFormats\"))!;\n\n\t\t\t\t\twhile (minorValue < value - 0.01 * minorDuration) {\n\t\t\t\t\t\tlet minorDataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\t\t\tif (this.minorDataItems.length < m + 1) {\n\t\t\t\t\t\t\tminorDataItem = new DataItem(this, undefined, {});\n\t\t\t\t\t\t\tthis.minorDataItems.push(minorDataItem);\n\t\t\t\t\t\t\tthis.processDataItem(minorDataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tminorDataItem = this.minorDataItems[m];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._createAssets(minorDataItem, [\"minor\"], true);\n\n\t\t\t\t\t\tthis._toggleDataItem(minorDataItem, true);\n\n\t\t\t\t\t\tminorDataItem.setRaw(\"value\", minorValue);\n\n\t\t\t\t\t\tlet minorEndValue = minorValue + $time.getDuration(minorTimeUnit, minorCount * mmm);\n\t\t\t\t\t\t//minorEndValue = $time.round(new Date(minorEndValue), minorGridInterval.timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\t\t\tminorEndValue = $time.roun(minorEndValue, minorTimeUnit, 1, root);\n\n\t\t\t\t\t\tminorDataItem.setRaw(\"endValue\", minorEndValue);\n\n\t\t\t\t\t\tlet date = new Date(minorValue);\n\n\t\t\t\t\t\tformat = minorFormats[minorTimeUnit];\n\n\t\t\t\t\t\tconst minorLabel = minorDataItem.get(\"label\");\n\n\t\t\t\t\t\tif (minorLabel) {\n\t\t\t\t\t\t\tif (minorLabelsEnabled) {\n\t\t\t\t\t\t\t\tminorLabel.set(\"text\", root.dateFormatter.format(date, format!));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tminorLabel.setPrivate(\"visible\", false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._prepareDataItem(minorDataItem, 1);\n\n\t\t\t\t\t\tif (minorValue == previousMinorValue) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpreviousMinorValue = minorValue;\n\t\t\t\t\t\tminorValue = minorEndValue;\n\t\t\t\t\t\tm++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (value == previousValue) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t\t}\n\n\t\t\tfor (let j = m; j < this.minorDataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.minorDataItems[j], false);\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\tprotected _updateFinals(start: number, end: number) {\n\t\tthis.setPrivateRaw(\"selectionMinFinal\", this.positionToValue(start));\n\t\tthis.setPrivateRaw(\"selectionMaxFinal\", this.positionToValue(end));\n\t}\n\n\tprotected _getDelta() {\n\t\tthis._deltaMinMax = this.baseDuration() / 2;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t//let startTime = $time.round(new Date(min), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\n\t\tlet startTime = $time.roun(min, timeUnit, baseInterval.count, this._root);\n\n\t\tlet endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit))\n\t\t//endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\tendTime = $time.roun(endTime, timeUnit, 1, this._root);\n\t\treturn startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t//let startTime = $time.round(new Date(max), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\n\t\tlet startTime = $time.roun(max, timeUnit, baseInterval.count, this._root);\n\t\tlet endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit))\n\t\t//endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\tendTime = $time.roun(endTime, timeUnit, 1, this._root);\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\n\t}\n\n\tprotected _updateDates(_date: number, _series: XYSeries) {\n\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t * \n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn this._baseDuration;\n\t\t//return $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\t/**\n\t * Returns a duration of user-defined `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseMainDuration(): number {\n\t\treturn $time.getIntervalDuration(this.get(\"baseInterval\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(dataItem: DataItem<IXYSeriesDataItem>, fields: Array<string>) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif (!dataItem.open) {\n\t\t\tdataItem.open = {};\n\t\t}\n\t\tif (!dataItem.close) {\n\t\t\tdataItem.close = {};\n\t\t}\n\n\t\t$array.each(fields, (field) => {\n\t\t\tlet value = dataItem.get(field as any);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet startTime = dataItem.open![field];\n\t\t\t\tlet endTime = dataItem.close![field];\n\t\t\t\t// this is done to save cpu, as rounding is quite expensive, especially with timezone set. \n\t\t\t\t// if value is between prev start and end, it means it didn't change, all is fine.\n\t\t\t\tif (value >= startTime && value <= endTime) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t\t\t\tconst count = baseInterval.count;\n\t\t\t\t\t//startTime = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\t\tstartTime = $time.roun(value, timeUnit, count, this._root);\n\t\t\t\t\tendTime = startTime + $time.getDuration(timeUnit, count * this._getM(timeUnit));\n\t\t\t\t\t//endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\t\tendTime = $time.roun(endTime, timeUnit, 1, this._root);\n\n\t\t\t\t\tdataItem.open![field] = startTime;\n\t\t\t\t\tdataItem.close![field] = endTime;\n\t\t\t\t}\n\n\t\t\t\tthis._updateDates(startTime, dataItem.component as XYSeries);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _handleSizeDirty() {\n\t\t// void \n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tlet value = this.positionToValue(position);\n\t\tvalue = value - (location - 0.5) * this.baseDuration();\n\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tif (!$type.isNaN(value)) {\n\t\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t\tconst utc = this._root.utc;\n\t\t\tconst timezone = this._root.timezone;\n\t\t\tconst count = baseInterval.count;\n\n\t\t\t//value = $time.round(new Date(value), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\n\t\t\tvalue = $time.roun(value, timeUnit, count, this._root, this.getPrivate(\"min\", 0));\n\n\t\t\tlet duration = $time.getDateIntervalDuration(baseInterval, new Date(value), firstDay, utc, timezone);\n\t\t\tif (timezone) {\n\t\t\t\t//value = $time.round(new Date(value + this.baseDuration() * 0.05), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\n\t\t\t\tvalue = $time.roun(value + this.baseDuration() * 0.05, timeUnit, count, this._root, this.getPrivate(\"min\", 0));\n\t\t\t\tduration = $time.getDateIntervalDuration(baseInterval, new Date(value + duration * location), firstDay, utc, timezone);\n\t\t\t}\n\n\t\t\treturn this.valueToPosition(value + duration * location);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * NOTE: Unless `adjustPosition` (2nd parameter) is set to `false`, the method\n\t * will adjust position by `tooltipIntervalOffset`.\n\t *\n\t * @param  position        Position\n\t * @param  adjustPosition  Adjust position\n\t * @return                 Tooltip text\n\t */\n\tpublic getTooltipText(position: number, adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tif (this.getPrivate(\"min\") != null) {\n\t\t\tlet format = this.get(\"tooltipDateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\tlet value = this.positionToValue(position);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\t\t\tlet duration = $time.getDateIntervalDuration(baseInterval, date, this._root.locale.firstDayOfWeek, this._root.utc, this._root.timezone);\n\n\t\t\t\tif (adjustPosition !== false) {\n\t\t\t\t\tdate = new Date(value + this.get(\"tooltipIntervalOffset\", -this.get(\"tooltipLocation\", 0.5)) * duration)\n\t\t\t\t}\n\n\t\t\t\treturn this._root.dateFormatter.format(date, this.get(\"tooltipDateFormat\", format));\n\t\t\t}\n\n\t\t}\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number, location?: number, snap?: boolean): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tif (location == null) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tvalue = value - (location - 0.5) * this.baseDuration();\n\n\t\tconst result = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\tlet diValue = 0;\n\t\t\tif (dataItem.open) {\n\t\t\t\tdiValue = dataItem.open[fieldName];\n\t\t\t}\n\n\t\t\treturn $order.compare(diValue, value);\n\t\t});\n\n\t\tif (snap || series.get(\"snapTooltip\")) {\n\t\t\tlet first = series.dataItems[result.index - 1];\n\t\t\tlet second = series.dataItems[result.index];\n\n\t\t\tif (first && second) {\n\t\t\t\tif (first.open && second.close) {\n\t\t\t\t\tlet open = first.open[fieldName];\n\t\t\t\t\tlet close = second.close[fieldName];\n\n\t\t\t\t\tif (Math.abs(value - open) > Math.abs(value - close)) {\n\t\t\t\t\t\treturn second;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (first) {\n\t\t\t\treturn first;\n\t\t\t}\n\n\t\t\tif (second) {\n\t\t\t\treturn second;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst dataItem = series.dataItems[result.index - 1];\n\n\t\t\tif (dataItem) {\n\t\t\t\tif (dataItem.open && dataItem.close) {\n\t\t\t\t\tlet open = dataItem.open[fieldName];\n\t\t\t\t\tlet close = dataItem.close[fieldName];\n\n\t\t\t\t\tif (value >= open && value <= close) {\n\t\t\t\t\t\treturn dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(dataItem: DataItem<IXYSeriesDataItem>, nextItem: DataItem<IXYSeriesDataItem>, autoGapCount: number, fieldName: string): boolean {\n\t\tconst value1 = dataItem.get(fieldName as any);\n\t\tconst value2 = nextItem.get(fieldName as any);\n\n\t\tif (value2 - value1 > this.baseDuration() * autoGapCount) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` dates.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start Date\n\t * @param  end       End Date\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\n\t\tthis.zoomToValues(start.getTime(), end.getTime(), duration);\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\tconst futureGroupInterval = this.getGroupInterval(end - start);\n\t\t\t\tconst baseInterval = this.get(\"baseInterval\");\n\n\t\t\t\tlet baseMin = this.getIntervalMin(baseInterval);\n\t\t\t\tlet baseMax = this.getIntervalMax(baseInterval) - 1;\n\t\t\t\tbaseMax = $time.roun(baseMax, futureGroupInterval.timeUnit, futureGroupInterval.count, this.root);\n\t\t\t\tbaseMax += this._getM(futureGroupInterval.timeUnit) * $time.getIntervalDuration(futureGroupInterval);\n\t\t\t\tbaseMax = $time.roun(baseMax, futureGroupInterval.timeUnit, futureGroupInterval.count, this.root);\n\n\t\t\t\tlet futureMin = $time.roun(baseMin, futureGroupInterval.timeUnit, futureGroupInterval.count, this.root);\n\t\t\t\tlet futureMax = $time.roun(baseMax, futureGroupInterval.timeUnit, futureGroupInterval.count, this.root);\n\n\t\t\t\tlet s = (start - futureMin) / (futureMax - futureMin);\n\t\t\t\tlet e = (end - futureMin) / (futureMax - futureMin);\n\n\t\t\t\tthis.zoom(s, e, duration);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns a `Date` object corresponding to specific position within plot\n\t * area.\n\t *\n\t * @param   position  Pposition\n\t * @return            Date\n\t */\n\tpublic positionToDate(position: number): Date {\n\t\treturn new Date(this.positionToValue(position));\n\t}\n\n\t/**\n\t * Returns a relative position within plot area that corresponds to specific\n\t * date.\n\t *\n\t * @param   date  Date\n\t * @return        Position\n\t */\n\tpublic dateToPosition(date: Date): number {\n\t\treturn this.valueToPosition(date.getTime());\n\t}\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\tlet max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\n\t\tlet min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\n\n\t\tif ($type.isNumber(max) && $type.isNumber(min)) {\n\t\t\treturn this._intervalDuration / (max - min);\n\t\t}\n\t\treturn 0.05;\n\t}\n\n\tpublic nextPosition(count?:number){\n\t\tif(count == null){\n\t\t\tcount = 1;\n\t\t}\n\n\t\tlet dtime = this.get(\"tooltipLocation\", 0.5) * this.baseDuration();\t\t\n\t\tif(this.get(\"renderer\").getPrivate(\"letter\") == \"Y\"){\n\t\t\tcount *= -1;\n\t\t}\n\n\t\tlet tooltipValue = this.positionToValue(this.getPrivate(\"tooltipPosition\", 0));\n\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet time = this._nextTime(tooltipValue, count, baseInterval);\n\n\t\tlet selectionMin = this.getPrivate(\"selectionMin\", 0);\n\t\tlet selectionMax = this.getPrivate(\"selectionMax\", 0);\n\n\t\tlet min = $time.roun(selectionMin, baseInterval.timeUnit, baseInterval.count, this._root);\n\t\tlet max = $time.roun(selectionMax, baseInterval.timeUnit, baseInterval.count, this._root);\n\n\t\ttime += dtime;\t\t\n\t\ttime = $math.fitToRange(time, min + dtime, max - dtime);\n\n\t\treturn this.toGlobalPosition(this.valueToPosition(time));\n\t}\t\n\n\tprotected _nextTime(time:number, count:number, baseInterval:ITimeInterval){\n\t\treturn $time.roun(time + count * this.baseDuration(), baseInterval.timeUnit, baseInterval.count, this._root);\n\t}\n}\n", "import type { AxisRenderer } from \"./AxisRenderer\";\r\n\r\nimport { DateAxis, IDateAxisSettings, IDateAxisPrivate, IDateAxisDataItem, IDateAxisEvents } from \"./DateAxis\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\nimport type { XYSeries } from \"../../xy/series/XYSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\"\r\nimport * as $order from \"../../../core/util/Order\";\r\nimport * as $time from \"../../../core/util/Time\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $math from \"../../../core/util/Math\";\r\nimport type { ITimeInterval } from \"../../../core/util/Time\";\r\n\r\nexport interface IGaplessDateAxisSettings<R extends AxisRenderer> extends IDateAxisSettings<R> {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisDataItem extends IDateAxisDataItem {\r\n\r\n\t/**\r\n\t * An index of a data item.\r\n\t */\r\n\tindex?: number\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisPrivate extends IDateAxisPrivate {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisEvents extends IDateAxisEvents {\r\n}\r\n\r\n/**\r\n * A version of a [[DateAxis]] which removes intervals that don't have any data\r\n * items in them.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/gapless-date-axis/} for more info\r\n * @important\r\n */\r\nexport class GaplessDateAxis<R extends AxisRenderer> extends DateAxis<R> {\r\n\tpublic static className: string = \"GaplessDateAxis\";\r\n\tpublic static classNames: Array<string> = DateAxis.classNames.concat([GaplessDateAxis.className]);\r\n\r\n\tdeclare public _settings: IGaplessDateAxisSettings<R>;\r\n\tdeclare public _privateSettings: IGaplessDateAxisPrivate;\r\n\tdeclare public _dataItemSettings: IGaplessDateAxisDataItem;\r\n\tdeclare public _events: IGaplessDateAxisEvents;\r\n\r\n\tprotected _frequency: number = 1;\r\n\tprotected _m: number = 0;\r\n\r\n\tpublic _afterNew() {\r\n\t\tthis.valueFields.push(\"date\");\r\n\t\tsuper._afterNew();\r\n\t}\r\n\r\n\tpublic _dates: Array<number> = [];\r\n\tpublic _customDates?: Array<number>;\r\n\r\n\r\n\tpublic _getDates(): Array<number> {\r\n\t\tif (this._customDates) {\r\n\t\t\treturn this._customDates;\r\n\t\t}\r\n\t\treturn this._dates;\r\n\t}\r\n\r\n\tprotected _updateDates(date: number, series: XYSeries) {\r\n\t\tif (!series.get(\"ignoreMinMax\")) {\r\n\t\t\tconst dates = this._getDates();\r\n\t\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, date));\r\n\t\t\tif (!result.found) {\r\n\t\t\t\t$array.insertIndex(dates, result.index, date);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateAllDates() {\r\n\t\tif (!this._customDates) {\r\n\t\t\tconst dates = this._dates;\r\n\t\t\tdates.length = 0;\r\n\r\n\t\t\t$array.each(this.series, (series) => {\r\n\t\t\t\tlet field = \"valueX\";\r\n\t\t\t\tif (series.get(\"yAxis\") == this) {\r\n\t\t\t\t\tfield = \"valueY\"\r\n\t\t\t\t}\r\n\t\t\t\t$array.each(series.dataItems, (dataItem) => {\r\n\t\t\t\t\tlet value = dataItem.get(field as any);\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\tif (dataItem.open) {\r\n\t\t\t\t\t\t\tthis._updateDates(dataItem.open![field], series);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\r\n\t\t\tconst extraMax = this.get(\"extraMax\", 0);\r\n\t\t\tconst extraMin = this.get(\"extraMin\", 0);\r\n\r\n\t\t\tlet len = dates.length;\r\n\r\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\t\t\tconst baseCount = baseInterval.count;\r\n\t\t\tconst timeUnit = baseInterval.timeUnit;\r\n\r\n\t\t\tif (extraMax > 0) {\r\n\t\t\t\tconst extra = len * extraMax;\r\n\t\t\t\tlet time = dates[len - 1];\r\n\t\t\t\tif ($type.isNumber(time)) {\r\n\t\t\t\t\tfor (let i = len - 1; i < len + extra; i++) {\r\n\t\t\t\t\t\ttime += $time.getDuration(timeUnit, baseCount * this._getM(timeUnit));\r\n\t\t\t\t\t\t//time = $time.round(new Date(time), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\t\t\ttime = $time.roun(time, timeUnit, baseCount, this._root);\r\n\t\t\t\t\t\tdates.push(time);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (extraMin > 0) {\r\n\t\t\t\tconst extra = len * extraMin;\r\n\t\t\t\tlet time = dates[0];\r\n\t\t\t\tif ($type.isNumber(time)) {\r\n\t\t\t\t\tfor (let i = 0; i < extra; i++) {\r\n\t\t\t\t\t\ttime -= $time.getDuration(timeUnit, baseCount);\r\n\t\t\t\t\t\t//time = $time.round(new Date(time), timeUnit, baseCount, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\t\t\ttime = $time.roun(time, timeUnit, baseCount, this._root);\r\n\t\t\t\t\t\tdates.unshift(time);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convers value to a relative position on axis.\r\n\t *\r\n\t * @param   value  Value\r\n\t * @return         Relative position\r\n\t */\r\n\tpublic valueToPosition(value: number): number {\r\n\t\tconst dates = this._getDates();\r\n\t\tconst startLocation = this.get(\"startLocation\", 0);\r\n\t\tconst endLocation = this.get(\"endLocation\", 1);\r\n\t\tconst len = dates.length - startLocation - (1 - endLocation);\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn (index - startLocation) / len;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\tlet itemValue = dates[index];\r\n\r\n\t\t\tlet d = 0;\r\n\t\t\tif (itemValue > value && value > this.getPrivate(\"min\", 0)) {\r\n\t\t\t\td = itemValue - value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\td = value - itemValue;\r\n\t\t\t}\r\n\r\n\t\t\treturn (index - startLocation) / len + d / this.baseDuration() / len;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts numeric value from axis scale to index.\r\n\t * \r\n\t * @param  value  Value\r\n\t * @return        Index\r\n\t */\r\n\tpublic valueToIndex(value: number): number {\r\n\t\tconst dates = this._getDates();\r\n\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\t\t\treturn index;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a relative position to a corresponding numeric value from axis\r\n\t * scale.\r\n\t *\r\n\t * @param   position  Relative position\r\n\t * @return            Value\r\n\t */\r\n\tpublic positionToValue(position: number): number {\r\n\t\tconst startLocation = this.get(\"startLocation\", 0);\r\n\t\tconst endLocation = this.get(\"endLocation\", 1);\r\n\t\tconst dates = this._getDates();\r\n\t\tlet len = Math.round(dates.length - startLocation - (1 - endLocation));\r\n\t\tlet index = position * len;\r\n\t\tlet findex = Math.floor(index);\r\n\t\tif (findex < 0) {\r\n\t\t\tfindex = 0;\r\n\t\t}\r\n\r\n\t\tif (findex > len - 1) {\r\n\t\t\tfindex = len - 1\r\n\t\t}\r\n\r\n\t\treturn dates[findex] + (index - findex + startLocation) * this.baseDuration();\r\n\t}\r\n\r\n\tprotected _fixZoomFactor() {\r\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", this._getDates().length - this.get(\"startLocation\", 0) - (1 - this.get(\"endLocation\", 1)));\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the axis to specific `start` and `end` dates.\r\n\t *\r\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n\t *\r\n\t * @param  start     Start Date\r\n\t * @param  end       End Date\r\n\t * @param  duration  Duration in milliseconds\r\n\t */\r\n\r\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\r\n\t\tconst dates = this._getDates();\r\n\t\tconst len = dates.length;\r\n\t\tlet result = $array.getSortedIndex(dates, (x) => $order.compare(x, start.getTime()));\r\n\t\t\r\n\t\tlet startValue = dates[Math.min(result.index, len - 1)];\r\n\r\n\t\tresult = $array.getSortedIndex(dates, (x) => $order.compare(x, end.getTime()));\r\n\t\tlet endValue = dates[result.index];\r\n\r\n\t\tif(result.index >= len){\r\n\t\t\tendValue = dates[len - 1] + this.baseDuration();\r\n\t\t}\r\n\r\n\t\tthis.zoomToValues(startValue, endValue, duration);\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the axis to specific `start` and `end` values.\r\n\t *\r\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n\t *\r\n\t * @param  start     Start value\r\n\t * @param  end       End value\r\n\t * @param  duration  Duration in milliseconds\r\n\t */\r\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\r\n\t\tconst min = this.getPrivate(\"min\", 0);\r\n\t\tconst max = this.getPrivate(\"max\", 0);\r\n\t\tstart = $math.fitToRange(start, min, max);\r\n\t\tend = $math.fitToRange(end, min, max);\r\n\t\tthis.zoom(this.valueToPosition(start), this.valueToPosition(end), duration);\r\n\t}\r\n\r\n\r\n\tprotected _prepareAxisItems() {\r\n\t\tlet startTime = this.getPrivate(\"selectionMin\", 0);\r\n\t\tlet endTime = this.getPrivate(\"selectionMax\", 0);\r\n\r\n\t\tif ($type.isNumber(startTime) && $type.isNumber(endTime)) {\r\n\r\n\t\t\tif (this._seriesValuesDirty) {\r\n\t\t\t\tthis._seriesValuesDirty = false;\r\n\t\t\t\tthis._updateAllDates();\r\n\t\t\t}\r\n\r\n\t\t\tconst root = this._root;\r\n\t\t\tconst utc = root.utc;\r\n\t\t\tconst timezone = root.timezone;\r\n\t\t\tconst dates = this._getDates();\r\n\t\t\tconst renderer = this.get(\"renderer\");\r\n\t\t\tconst len = dates.length;\r\n\t\t\tconst baseDuration = this.baseDuration();\r\n\r\n\t\t\tlet startIndex = this.valueToIndex(startTime);\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tstartIndex--;\r\n\t\t\t}\r\n\r\n\t\t\tlet endIndex = this.valueToIndex(endTime);\r\n\t\t\tif (endIndex < len - 1) {\r\n\t\t\t\tendIndex++;\r\n\t\t\t}\r\n\t\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\r\n\t\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\r\n\t\t\tfrequency = Math.max(1, frequency);\r\n\r\n\t\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\r\n\r\n\t\t\tthis._frequency = frequency;\r\n\r\n\t\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\t\tthis._toggleDataItem(dataItem, false);\r\n\t\t\t})\r\n\r\n\t\t\t$array.each(this.minorDataItems, (dataItem) => {\r\n\t\t\t\tthis._toggleDataItem(dataItem, false);\r\n\t\t\t})\r\n\r\n\t\t\tlet realDuration = (endTime - startTime) - ((endTime - startTime) / baseDuration - (endIndex - startIndex)) * baseDuration;\r\n\r\n\t\t\t// if all items are on axis\r\n\t\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\r\n\r\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\t\t\tlet intervalDuration = $time.getIntervalDuration(gridInterval);\r\n\r\n\t\t\tif (intervalDuration < baseDuration) {\r\n\t\t\t\tgridInterval = { ...baseInterval };\r\n\t\t\t\tintervalDuration = $time.getIntervalDuration(gridInterval);\r\n\t\t\t}\r\n\r\n\t\t\tthis._intervalDuration = intervalDuration;\r\n\r\n\t\t\tconst timeUnit = gridInterval.timeUnit;\r\n\t\t\tconst formats = this.get(\"dateFormats\")!;\r\n\r\n\t\t\tlet firstTime = Date.now();\r\n\r\n\t\t\tif (dates[0]) {\r\n\t\t\t\tfirstTime = dates[0];\r\n\t\t\t}\r\n\r\n\t\t\t//let value = $time.round(new Date(this.getPrivate(\"selectionMin\", 0)), timeUnit, gridInterval.count, firstDay, utc, firstDate, timezone).getTime();\r\n\t\t\tlet value = $time.roun(this.getPrivate(\"selectionMin\", 0), timeUnit, gridInterval.count, root, firstTime);\r\n\r\n\t\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\r\n\t\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\r\n\r\n\t\t\tlet minorGridInterval: ITimeInterval | undefined;\r\n\t\t\tlet minorDuration = 0;\r\n\t\t\tlet previousDataItem: DataItem<IGaplessDateAxisDataItem> | undefined;\r\n\r\n\t\t\tif (minorGridEnabled) {\r\n\t\t\t\tminorGridInterval = this._getMinorInterval(gridInterval);\r\n\t\t\t\tminorDuration = $time.getIntervalDuration(minorGridInterval);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tlet selectedItems: Array<number> = this._getIndexes(value, this.getPrivate(\"selectionMax\", value) + intervalDuration, gridInterval, this.getPrivate(\"min\", value));\r\n\t\t\tif (selectedItems.length > 0) {\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tthis._m = 0;\r\n\t\t\t\tlet previousValue = value - intervalDuration * 10;\r\n\t\t\t\tconst nextGridUnit = $time.getNextUnit(timeUnit);\r\n\r\n\t\t\t\t// MINOR GRID\r\n\t\t\t\tif (minorGridInterval) {\r\n\t\t\t\t\tlet first = dates[selectedItems[0]];\r\n\t\t\t\t\tthis._addMinorGrid(first - intervalDuration, first, minorDuration, minorGridInterval);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet minDistance = renderer.axisLength() / renderer.gridCount() * 0.5;\r\n\r\n\t\t\t\t$array.each(selectedItems, (index) => {\r\n\t\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\r\n\t\t\t\t\tif (this.dataItems.length < i + 1) {\r\n\t\t\t\t\t\tdataItem = new DataItem<this[\"_dataItemSettings\"]>(this, undefined, {});\r\n\t\t\t\t\t\tthis._dataItems.push(dataItem);\r\n\t\t\t\t\t\tthis.processDataItem(dataItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdataItem = this.dataItems[i];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet value = dates[index];\r\n\t\t\t\t\tlet date = new Date(value);\r\n\r\n\t\t\t\t\tlet endValue = value;\r\n\t\t\t\t\tif (i < selectedItems.length - 1) {\r\n\t\t\t\t\t\tendValue = dates[selectedItems[i + 1]];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tendValue += intervalDuration;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataItem.setRaw(\"value\", value);\r\n\t\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\r\n\t\t\t\t\tdataItem.setRaw(\"index\", i);\r\n\t\t\t\t\tdataItem.setRaw(\"labelEndValue\", undefined);\r\n\r\n\t\t\t\t\tlet format = formats[timeUnit];\r\n\t\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\r\n\t\t\t\t\t\tif (timeUnit != \"year\") {\r\n\t\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, utc, timezone)) {\r\n\t\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![timeUnit];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._createAssets(dataItem, []);\r\n\r\n\t\t\t\t\tconst label = dataItem.get(\"label\");\r\n\t\t\t\t\tif (label) {\r\n\t\t\t\t\t\tlabel.set(\"text\", root.dateFormatter.format(date, format!));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._toggleDataItem(dataItem, true);\r\n\r\n\t\t\t\t\tlet count = gridInterval.count;\r\n\r\n\t\t\t\t\t// so that labels of week would always be at the beginning of the grid\r\n\t\t\t\t\tif (timeUnit == \"week\") {\r\n\t\t\t\t\t\tdataItem.setRaw(\"labelEndValue\", value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (minorGridEnabled) {\r\n\t\t\t\t\t\tlet timeUnit2 = gridInterval.timeUnit;\r\n\t\t\t\t\t\tif (timeUnit2 == \"week\") {\r\n\t\t\t\t\t\t\ttimeUnit2 = \"day\";\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (count > 1 || gridInterval.timeUnit == \"week\") {\r\n\t\t\t\t\t\t\t//let labelEndValue = $time.round(new Date(value), timeUnit2, 1, firstDay, utc, undefined, timezone).getTime() + $time.getDuration(timeUnit2, this._getM(timeUnit2));\r\n\t\t\t\t\t\t\tlet labelEndValue = $time.roun(value, timeUnit2, 1, root) + $time.getDuration(timeUnit2, this._getM(timeUnit2));\r\n\t\t\t\t\t\t\tlet index = this.valueToIndex(labelEndValue)\r\n\t\t\t\t\t\t\tlabelEndValue = dates[index];\r\n\t\t\t\t\t\t\tif (labelEndValue == value) {\r\n\t\t\t\t\t\t\t\tlet next = dates[index + 1];\r\n\t\t\t\t\t\t\t\tif (next) {\r\n\t\t\t\t\t\t\t\t\tlabelEndValue = next;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tlabelEndValue += minorDuration;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tdataItem.setRaw(\"labelEndValue\", labelEndValue);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcount = 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._prepareDataItem(dataItem, count);\r\n\r\n\t\t\t\t\tif (label && previousDataItem) {\r\n\t\t\t\t\t\tif (renderer.getPrivate(\"letter\") == \"X\") {\r\n\t\t\t\t\t\t\tlet previousLabel = previousDataItem.get(\"label\");\r\n\t\t\t\t\t\t\tif (previousLabel) {\r\n\t\t\t\t\t\t\t\tlet x = label.x();\r\n\t\t\t\t\t\t\t\tlet previousX = previousLabel.x();\r\n\r\n\t\t\t\t\t\t\t\tif (x - previousX < minDistance) {\r\n\t\t\t\t\t\t\t\t\tlet worse = this._pickWorse(previousDataItem, dataItem, gridInterval)\r\n\t\t\t\t\t\t\t\t\tif (worse) {\r\n\t\t\t\t\t\t\t\t\t\tworse.get(\"label\")?.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// todo y?\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// MINOR GRID\r\n\t\t\t\t\tif (minorGridInterval) {\r\n\t\t\t\t\t\tthis._addMinorGrid(value, endValue, minorDuration, minorGridInterval);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ti++;\r\n\r\n\t\t\t\t\tif (label && label.getPrivate(\"visible\")) {\r\n\t\t\t\t\t\tpreviousDataItem = dataItem;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpreviousValue = value;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t$array.each(this.series, (series) => {\r\n\t\t\t\tif (series.inited) {\r\n\t\t\t\t\tseries._markDirtyAxes();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis._updateGhost();\r\n\t}\r\n\r\n\tprotected _pickWorse(dataItemA: DataItem<IGaplessDateAxisDataItem>, dataItemB: DataItem<IGaplessDateAxisDataItem>, interval: ITimeInterval): DataItem<IGaplessDateAxisDataItem> {\r\n\t\tconst timeUnit = interval.timeUnit;\r\n\r\n\t\tconst valueA = dataItemA.get(\"value\", 0);\r\n\t\tconst valueB = dataItemB.get(\"value\", 0);\r\n\r\n\t\tif (timeUnit == \"hour\") {\r\n\t\t\tif (new Date(valueA).getDate() != new Date(valueB).getDate()) {\r\n\t\t\t\treturn dataItemA;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn dataItemB;\r\n\t}\r\n\r\n\tprotected _addMinorGrid(startValue: number, endValue: number, minorDuration: number, gridInterval: ITimeInterval) {\r\n\t\tconst minorFormats = this.get(\"minorDateFormats\", this.get(\"dateFormats\"))!;\r\n\t\tconst mTimeUnit = gridInterval.timeUnit;\r\n\t\tlet value = startValue + $time.getDuration(mTimeUnit, this._getM(mTimeUnit));\r\n\t\t//value = $time.round(new Date(value), mTimeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n\t\tvalue = $time.roun(value, mTimeUnit, 1, this._root);\r\n\r\n\t\tlet maxValue = endValue - minorDuration * 0.5;\r\n\r\n\t\tlet minorSelectedItems: Array<number> = this._getIndexes(value, maxValue, gridInterval, value);\r\n\t\tconst dates = this._getDates();\r\n\r\n\t\t$array.each(minorSelectedItems, (index) => {\r\n\t\t\tlet minorDataItem: DataItem<this[\"_dataItemSettings\"]>;\r\n\t\t\tif (this.minorDataItems.length < this._m + 1) {\r\n\t\t\t\tminorDataItem = new DataItem<this[\"_dataItemSettings\"]>(this, undefined, {});\r\n\t\t\t\tthis.minorDataItems.push(minorDataItem);\r\n\t\t\t\tthis.processDataItem(minorDataItem);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tminorDataItem = this.minorDataItems[this._m];\r\n\t\t\t}\r\n\r\n\t\t\tvalue = dates[index];\r\n\t\t\tminorDataItem.setRaw(\"value\", value);\r\n\t\t\tminorDataItem.setRaw(\"endValue\", value + minorDuration);\r\n\t\t\tminorDataItem.setRaw(\"index\", index);\r\n\r\n\t\t\tthis._createAssets(minorDataItem, [\"minor\"], true);\r\n\r\n\t\t\tconst label = minorDataItem.get(\"label\");\r\n\t\t\tif (label) {\r\n\t\t\t\tif (this.get(\"renderer\").get(\"minorLabelsEnabled\")) {\r\n\t\t\t\t\tlet date = new Date(value);\r\n\t\t\t\t\tlet format = minorFormats[mTimeUnit];\r\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlabel.setPrivate(\"visible\", false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._toggleDataItem(minorDataItem, true);\r\n\t\t\tthis._prepareDataItem(minorDataItem, 1);\r\n\t\t\tthis._m++;\r\n\t\t})\r\n\t}\r\n\r\n\r\n\tprotected _getIndexes(value: number, maxValue: number, interval: ITimeInterval, firstValue: number): Array<number> {\r\n\t\tconst items: Array<number> = [];\r\n\t\tconst timeUnit = interval.timeUnit;\r\n\t\tconst count = interval.count;\r\n\t\tconst mmm = this._getM(timeUnit);\r\n\r\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\r\n\t\tconst root = this._root;\r\n\t\tconst dates = this._getDates();\r\n\r\n\t\tlet c = count - 1;\r\n\t\tlet previousValue = -Infinity;\r\n\r\n\t\tlet duration = $time.getDuration(timeUnit, mmm);\r\n\t\tlet fullDuration = $time.getDuration(timeUnit, count * mmm);\r\n\t\tlet originalValue = value;\r\n\r\n\t\tif (timeUnit == \"day\") {\r\n\t\t\tvalue = firstValue;\r\n\t\t}\r\n\r\n\t\twhile (value <= maxValue) {\r\n\t\t\t//value = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\tvalue = $time.roun(value, timeUnit, count, root);\r\n\r\n\t\t\tlet index = this.valueToIndex(value);\r\n\t\t\tlet realValue = dates[index];\r\n\r\n\t\t\tif (timeUnit == \"day\" && baseInterval.timeUnit == \"day\") {\r\n\t\t\t\tif (this._hasDate(value)) {\r\n\t\t\t\t\tc++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (c == count) {\r\n\t\t\t\t\tif (value >= originalValue - fullDuration * 2) {\r\n\t\t\t\t\t\t$array.move(items, index);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tc = 0;\r\n\t\t\t\t}\r\n\t\t\t\tvalue += duration;\r\n\t\t\t\t//value = $time.round(new Date(value), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\tvalue = $time.roun(value, timeUnit, 1, root);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (realValue < value) {\r\n\t\t\t\t\tfor (let i = index, len = dates.length; i < len; i++) {\r\n\t\t\t\t\t\trealValue = dates[i];\r\n\t\t\t\t\t\tif (realValue >= value) {\r\n\t\t\t\t\t\t\tindex = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$array.move(items, index);\r\n\r\n\t\t\t\tvalue += fullDuration;\r\n\t\t\t\t//value = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\tvalue = $time.roun(value, timeUnit, count, root);\r\n\t\t\t}\r\n\r\n\t\t\tif (value == previousValue) {\r\n\t\t\t\tvalue += fullDuration + duration;\r\n\t\t\t\t//value = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\r\n\t\t\t\tvalue = $time.roun(value, timeUnit, count, root);\r\n\t\t\t}\r\n\t\t\tif (value == previousValue) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tpreviousValue = value;\r\n\t\t}\r\n\r\n\t\treturn items;\r\n\t}\r\n\r\n\tprotected _hasDate(time: number) {\r\n\t\tconst result = $array.getSortedIndex(this._getDates(), (date) => {\r\n\t\t\treturn $order.compareNumber(date, time);\r\n\t\t});\r\n\r\n\t\treturn result.found;\r\n\t}\r\n\tprotected _nextTime(time:number, count:number, _baseInterval:ITimeInterval){\r\n\t\tlet index = $math.fitToRange(this.valueToIndex(time) + count, 0, this._dates.length - 1);\r\n\t\treturn this._dates[index];\r\n\t}\r\n}", "import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { TimeUnit } from \"../../../core/util/Time\"\n\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IValueAxisEvents, IMinMaxStep } from \"./ValueAxis\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $math from \"../../../core/util/Math\";\n\nexport interface IDurationAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * A base unit (granularity) of data.\n\t *\n\t * Used to indicate what are the base units of your data.\n\t *\n\t * Available options: `\"millisecond\"`, `\"second\"` (default), `\"minute\"`, `\"hour\"`, `\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/#Base_unit} for more info\n\t * @default \"second\"\n\t */\n\tbaseUnit?: TimeUnit\n\n}\n\nexport interface IDurationAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDurationAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * A format to used by axis to format its labels.\n\t *\n\t * @readonly\n\t */\n\tdurationFormat: string;\n\n}\n\nexport interface IDurationAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a duration axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/duration-axis/} for more info\n * @important\n */\nexport class DurationAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DurationAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DurationAxis.className]);\n\n\tdeclare public _settings: IDurationAxisSettings<R>;\n\tdeclare public _privateSettings: IDurationAxisPrivate;\n\tdeclare public _dataItemSettings: IDurationAxisDataItem;\n\tdeclare public _events: IDurationAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\tlet minMaxStep: IMinMaxStep;\n\n\t\tconst durationFormatter = this.getDurationFormatter();\n\t\tconst baseUnit = this.get(\"baseUnit\");\n\t\t// we don't allow to go to smaller units, setting so to avoid invalidation\n\t\tthis.setRaw(\"maxPrecision\", 0);\n\n\t\tif (baseUnit == \"millisecond\" || baseUnit == \"second\" || baseUnit == \"minute\" || baseUnit == \"hour\") {\n\t\t\t// will fail if 0\n\t\t\tif (gridCount <= 1) {\n\t\t\t\tgridCount = 1;\n\t\t\t}\n\n\t\t\tgridCount = Math.round(gridCount);\n\n\t\t\t//let initialMin: number = min;\n\t\t\t//let initialMax: number = max;\n\n\t\t\tlet difference = max - min;\n\n\t\t\t// in case min and max is the same, use max\n\t\t\tif (difference === 0) {\n\t\t\t\tdifference = Math.abs(max);\n\t\t\t}\n\n\t\t\tlet step = difference / gridCount;\n\n\t\t\tlet divisors = [60, 30, 20, 15, 10, 2, 1];\n\t\t\tlet realDivisor = 1;\n\n\t\t\tif (baseUnit == \"hour\") {\n\t\t\t\tdivisors = [24, 12, 6, 4, 2, 1];\n\t\t\t}\n\n\t\t\tfor (let divisor of divisors) {\n\t\t\t\tif (difference / divisor > gridCount) {\n\t\t\t\t\trealDivisor = divisor;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet count = Math.ceil(((max - min) / realDivisor) / gridCount);\n\n\t\t\tlet exponent: number = Math.log(Math.abs(count)) * Math.LOG10E;\n\t\t\tlet power = Math.pow(10, Math.floor(exponent)) / 10;\n\t\t\tlet reducedCount = count / power;\n\n\t\t\t// find closest to divisor\n\t\t\tlet closest = $math.closest(divisors, reducedCount);\n\t\t\tcount = closest * power;\n\n\t\t\tstep = realDivisor * count;\n\n\t\t\tmin = Math.floor(min / step) * step;\n\t\t\tmax = Math.ceil(max / step) * step;\n\n\t\t\t/*\n\t\t\tcausese SO with seconds\n\t\t\tif (strictMode) {\n\t\t\t\tmin -= step;\n\t\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\t\tmin = 0;\n\t\t\t\t}\n\t\t\t\tmax += step;\n\n\t\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\t\tmax = 0;\n\t\t\t\t}\n\t\t\t}*/\n\t\t\tminMaxStep = { min: min, max: max, step: step };\n\t\t}\n\t\telse {\n\t\t\tminMaxStep = super._adjustMinMax(min, max, gridCount, strictMode);\n\t\t}\n\n\t\t// choose duration formatter based on step\n\t\tthis.setPrivateRaw(\"durationFormat\", durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, baseUnit));\n\n\t\treturn minMaxStep;\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst formatter = this.getDurationFormatter();\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\tconst formatter = this.getDurationFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n}\n", "import { Entity, IEntitySettings, IEntityPrivate } from \"../../../core/util/Entity\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Axis } from \"./Axis\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport * as $object from \"../../../core/util/Object\";\n\nexport interface IAxisBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Relative location of the bullet within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n\n\t/**\n\t * Indicates if the bullet should be stacked on top of another bullet if it's\n\t * on the same position.\n\t * \n\t * Will work on horizontal or vertical axes only.\n\t *\n\t * @since 5.2.28\n\t * @default false\n\t */\n\tstacked?: boolean;\n\n}\n\nexport interface IAxisBulletPrivate extends IEntityPrivate {\n}\n\n/**\n * Draws a bullet on an axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n */\nexport class AxisBullet extends Entity {\n\n\t/**\n\t * Target axis object.\n\t */\n\tpublic axis: Axis<AxisRenderer> | undefined;\n\n\tdeclare public _settings: IAxisBulletSettings;\n\tdeclare public _privateSettings: IAxisBulletPrivate;\n\n\tpublic static className: string = \"AxisBullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([AxisBullet.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tconst sprite = this.get(\"sprite\");\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"location\")) {\n\t\t\tconst dataItem = sprite.dataItem;\n\t\t\tif (this.axis && sprite && dataItem) {\n\t\t\t\tthis.axis._prepareDataItem(dataItem as any)\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic dispose() {\n\t\tconst axis = this.axis;\n\t\tif (axis) {\n\t\t\t$object.each(axis._bullets, (key, bullet) => {\n\t\t\t\tif (bullet.uid == this.uid) {\n\t\t\t\t\tdelete axis._bullets[key];\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n}\n", "import { Label, ILabelSettings, ILabelPrivate } from \"../../../core/render/Label\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabel extends Label {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n\t_tickPoints: Array<IPoint>;\n}\n\n\nexport interface IAxisLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelPrivate extends ILabelPrivate {\n}\n\n/**\n * Draws an axis label.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n * @important\n */\nexport class AxisLabel extends Label implements IAxisLabel {\n\n\tdeclare public _settings: IAxisLabelSettings;\n\tdeclare public _privateSettings: IAxisLabelPrivate;\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([AxisLabel.className]);\n}\n", "import { RadialLabel, IRadialLabelSettings, IRadialLabelPrivate } from \"../../../core/render/RadialLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabelRadialSettings extends IRadialLabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelRadialPrivate extends IRadialLabelPrivate {\n}\n\n/**\n * Draws a label on a circular axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n */\nexport class AxisLabelRadial extends RadialLabel {\n\n\tdeclare public _settings: IAxisLabelRadialSettings;\n\tdeclare public _privateSettings: IAxisLabelRadialPrivate;\n\n\tpublic static className: string = \"AxisLabelRadial\";\n\tpublic static classNames: Array<string> = RadialLabel.classNames.concat([AxisLabelRadial.className]);\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n}\n", "import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { Tick, ITickSettings, ITickPrivate } from \"../../../core/render/Tick\";\n\n\nexport interface IAxisTickSettings extends ITickSettings {\n\n\t/**\n\t * Relative location of the tick within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the tick within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the tick will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that tick will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that tick will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t * @default 1\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisTickPrivate extends ITickPrivate {\n}\n\n/**\n * Draws an axis tick.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\n * @important\n */\nexport class AxisTick extends Tick {\n\n\tdeclare public _settings: IAxisTickSettings;\n\tdeclare public _privateSettings: IAxisTickPrivate;\n\n\tprotected _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisTick\";\n\tpublic static classNames: Array<string> = Tick.classNames.concat([AxisTick.className]);\n}\n", "import type { Sprite, ISpritePointerEvent } from \"../../../core/render/Sprite\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Re-enable display of skipped grid lines due to lack of space and as per\n\t * the `minGridDistance` setting. Not recommended for CategoryAxis with a lot of data items. \n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Minor_grid} for more info\n\t * @since 5.6.0\n\t */\n\tminorGridEnabled?: boolean;\n\n\t/**\n\t * Enable labels on minor grid. If you enable labels, grid will be enabled automatically.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Enabling_minor_grid_labels} for more info\n\t * @since 5.6.0\n\t */\n\tminorLabelsEnabled?: boolean;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n\t/**\n\t * If set to `\"zoom\"` will enable axis zoom by panning it in the axis label\n\t * area.\n\t *\n\t * Works on [[AxisRendererX]] and [[AxisRendererY]] only.\n\t *\n\t * For a better result, set `maxDeviation` to `1` or so on the Axis.\n\t *\n\t * Will not work if `inside` is set to `true`.\n\t *\n\t * @since 5.0.7\n\t * @default \"none\"\n\t */\n\tpan?: \"none\" | \"zoom\"\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\t/**\n\t * @ignore\n\t */\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\tprotected _thumbDownPoint?: IPoint;\n\n\tprotected _downStart?: number;\n\tprotected _downEnd?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisTick {\n\t\tconst tick = this.ticks.make();\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\ttick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.push(tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst grid = this.grid.make();\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tgrid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst axisFill = this.axisFills.make();\n\t\taxisFill._setDataItem(dataItem);\n\t\taxisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(axisFill);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t);\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\n\tpublic readonly thumb?: Graphics;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\n\t\tconst thumb = this.thumb;\n\t\tif (thumb) {\n\t\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\n\t\t\t\tthis._handleThumbDown(event);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\n\t\t\t\tthis._handleThumbUp(event);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\n\t\t\t\tthis._handleThumbMove(event);\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\t\tif (this.isDirty(\"minGridDistance\")) {\n\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\tthis.axis.markDirtySize();\n\t\t\t})\n\t\t}\n\t}\n\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pan\")) {\n\t\t\tconst thumb = this.thumb;\n\t\t\tif (thumb) {\n\t\t\t\tconst labelsContainer = this.axis.labelsContainer;\n\t\t\t\tconst pan = this.get(\"pan\");\n\t\t\t\tif (pan == \"zoom\") {\n\t\t\t\t\tlabelsContainer.children.push(thumb);\n\t\t\t\t}\n\t\t\t\telse if (pan == \"none\") {\n\t\t\t\t\tlabelsContainer.children.removeValue(thumb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleThumbDown(event: ISpritePointerEvent) {\n\t\tthis._thumbDownPoint = this.toLocal(event.point);\n\t\tconst axis = this.axis;\n\t\tthis._downStart = axis.get(\"start\");\n\t\tthis._downEnd = axis.get(\"end\");\n\t}\n\n\tprotected _handleThumbUp(_event: ISpritePointerEvent) {\n\t\tthis._thumbDownPoint = undefined;\n\t}\n\n\tprotected _handleThumbMove(event: ISpritePointerEvent) {\n\t\tconst downPoint = this._thumbDownPoint;\n\t\tif (downPoint) {\n\t\t\tconst point = this.toLocal(event.point);\n\n\t\t\tconst downStart = this._downStart!;\n\t\t\tconst downEnd = this._downEnd!;\n\t\t\tconst extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2;\n\t\t\tthis.axis.zoom(downStart - extra, downEnd + extra, 0);\n\t\t}\n\t}\n\n\tprotected _getPan(_point1: IPoint, _point2: IPoint): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start);\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\tif (!chart.inPlot(point)) {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n", "import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\n\nexport interface IAxisRendererXSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererXPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render horizontal axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererX extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererX\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererX.className]);\n\n\tdeclare public _settings: IAxisRendererXSettings;\n\tdeclare public _privateSettings: IAxisRendererXPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { width: p100, isMeasured: false, themeTags: [\"axis\", \"x\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"X\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"height\", p100);\n\t\tgridTemplate.set(\"width\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, graphics.height());\n\t\t});\n\n\t\tthis.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\t\taxis.ghostLabel.set(\"x\", -1000);\n\n\t\tconst opposite = \"opposite\"\n\t\tconst inside = \"inside\";\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.topAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this);\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.bottomAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tthis.thumb.setPrivate(\"height\", axis.labelsContainer.height());\n\t}\n\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point2.x - point1.x) / this.width();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start) * this._lc\n\n\t\tposition += this._ls;\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst w = parent.innerWidth();\n\t\t\tthis._lc = this.axisLength() / w;\n\t\t\tthis._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\tconst x = axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent!.get(\"paddingLeft\", 0);\n\t\taxis.gridContainer.set(\"x\", x);\n\t\taxis.topGridContainer.set(\"x\", x);\n\t\taxis.bulletsContainer.set(\"y\", this.y());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet width = axis.get(\"marginLeft\", 0);\n\n\t\t\tlet x = axis.x() - width;\n\n\t\t\tconst parent = axis.parent;\n\t\t\tif (parent) {\n\t\t\t\tx -= parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\twidth = axis.axisHeader.width();\n\t\t\t\taxis.set(\"marginLeft\", width + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"width\", width);\n\t\t\t}\n\t\t\taxisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"width\") == null) {\n\t\t\taxis.set(\"width\", p100);\n\t\t};\n\t\tconst verticalLayout = this._root.verticalLayout;\n\t\taxis.set(\"layout\", verticalLayout);\n\t\taxis.labelsContainer.set(\"width\", p100);\n\t\taxis.axisHeader.setAll({ layout: verticalLayout });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.width();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"y\", p100);\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttick.set(\"y\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, length);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tif (opposite) {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t\tlabel.set(\"y\", p100);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"y\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"x\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = -1;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\td = 1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"y\", previousSprite.y() + previousSprite.height() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"y\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\t\t\t\tsprite.set(\"x\", this.positionToCoordinate(position));\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet x0 = this.positionToCoordinate(position);\n\t\t\tlet x1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, x0, x1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, x0: number, x1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t//display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst h = this.axis!.gridContainer.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x1 < x0) {\n\t\t\t\t[x1, x0] = [x0, x1];\n\t\t\t}\n\t\t\tif (x0 > w || x1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n\t\t\tconst limit = 10000;\n\n\t\t\tx0 = Math.max(-limit, x0);\n\t\t\tx1 = Math.min(limit, x1);\n\t\t\t*/\n\n\t\t\tdisplay.moveTo(x0, 0);\n\t\t\tdisplay.lineTo(x1, 0);\n\t\t\tdisplay.lineTo(x1, h);\n\t\t\tdisplay.lineTo(x0, h);\n\t\t\tdisplay.lineTo(x0, 0);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 })\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet x = global.x;\n\t\tlet y = 0;\n\t\tlet w = this.axisLength();\n\t\tlet h = num;\n\n\t\tlet pointerOrientation: \"up\" | \"down\" = \"up\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n}\n", "import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nexport interface IAxisRendererYSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererYPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render vertical axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererY extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererY\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererY.className]);\n\n\tdeclare public _settings: IAxisRendererYSettings;\n\tdeclare public _privateSettings: IAxisRendererYPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tprotected _downY?: number;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\n\t\tif (this._settings.opposite) {\n\t\t\tthis._settings.themeTags.push(\"opposite\");\n\t\t}\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"Y\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"width\", p100);\n\t\tgridTemplate.set(\"height\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\n\t\tthis.set(\"draw\", (display, renderer) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, renderer.height());\n\t\t});\n\t}\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point1.y - point2.y) / this.height();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\t\taxis.ghostLabel.set(\"y\", -1000);\n\n\t\tconst thumb = this.thumb;\n\t\tconst opposite = \"opposite\";\n\t\tconst inside = \"inside\";\n\t\tconst chart = this.chart;\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.rightAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis, 0);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.leftAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tconst w = axis.labelsContainer.width();\n\n\t\tif (chart) {\n\t\t\tif (this.get(opposite)) {\n\t\t\t\tthumb.set(\"centerX\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthumb.set(\"centerX\", w);\n\t\t\t}\n\t\t}\n\n\t\tthumb.setPrivate(\"width\", w);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"height\") == null) {\n\t\t\taxis.set(\"height\", p100);\n\t\t}\n\t\tconst horizontalLayout = this._root.horizontalLayout;\n\t\taxis.set(\"layout\", horizontalLayout);\n\t\taxis.labelsContainer.set(\"height\", p100);\n\t\taxis.axisHeader.set(\"layout\", horizontalLayout);\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\tconst y = axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height());\n\t\taxis.gridContainer.set(\"y\", y);\n\t\taxis.topGridContainer.set(\"y\", y);\n\t\taxis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet height = axis.get(\"marginTop\", 0);\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\theight = axis.axisHeader.height();\n\t\t\t\taxis.set(\"marginTop\", height + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"height\", height);\n\t\t\t}\n\t\t\taxisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.innerHeight();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (opposite) {\n\t\t\t\tlabel.set(\"x\", 0);\n\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"x\", 0);\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"x\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"x\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(length, 0);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = 1;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\td = -1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"x\", previousSprite.x() + previousSprite.width() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"x\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\n\n\t\t\t\tsprite.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet y0 = this.positionToCoordinate(position);\n\t\t\tlet y1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, y0, y1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, y0: number, y1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst w = this.axis!.gridContainer.width();\n\t\t\tconst h = this.height();\n\n\t\t\tif (y1 < y0) {\n\t\t\t\t[y1, y0] = [y0, y1];\n\t\t\t}\n\n\t\t\tif (y0 > h || y1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//y0 = Math.max(0, y0);\n\t\t\t//y1 = Math.min(h, y1);\n\n\t\t\tdisplay.moveTo(0, y0);\n\t\t\tdisplay.lineTo(w, y0);\n\t\t\tdisplay.lineTo(w, y1);\n\t\t\tdisplay.lineTo(0, y1);\n\t\t\tdisplay.lineTo(0, y0);\n\t\t})\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (!this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet y = global.y;\n\t\tlet x = 0;\n\t\tlet h = this.axisLength();\n\t\tlet w = num;\n\n\t\tlet pointerOrientation: \"left\" | \"right\" = \"right\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst h = parent.innerHeight();\n\t\t\tthis._lc = this.axisLength() / h;\n\t\t\tthis._ls = axis.y() / h;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start) * this._lc\n\n\t\tposition += this._ls;\n\n\t\treturn position;\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (!this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n}\n", "import { RoundedRectangle, IRoundedRectangleSettings, IRoundedRectanglePrivate } from \"../../../core/render/RoundedRectangle\";\n\n\nexport interface ICandlestickSettings extends IRoundedRectangleSettings {\n\n\t/**\n\t * X0 position of the low value in pixels.\n\t */\n\tlowX0?: number;\n\n\t/**\n\t * Y0 position of the low value in pixels.\n\t */\n\tlowY0?: number;\n\n\t/**\n\t * X2 position of the low value in pixels.\n\t */\n\tlowX1?: number;\n\n\t/**\n\t * Y1 position of the low value in pixels.\n\t */\n\tlowY1?: number;\n\n\t/**\n\t * X0 position of the high value in pixels.\n\t */\n\thighX0?: number;\n\n\t/**\n\t * Y0 position of the high value in pixels.\n\t */\n\thighY0?: number;\n\n\t/**\n\t * Xz position of the high value in pixels.\n\t */\n\thighX1?: number;\n\n\t/**\n\t * Y1 position of the high value in pixels.\n\t */\n\thighY1?: number;\n\n\t/**\n\t * Orientation of the cnadlestick.\n\t */\n\torientation?: \"horizontal\" | \"vertical\"\n\n}\n\nexport interface ICandlestickPrivate extends IRoundedRectanglePrivate {\n}\n\n/**\n * A candle element used in a [[CandlestickSeries]].\n */\nexport class Candlestick extends RoundedRectangle {\n\n\tdeclare public _settings: ICandlestickSettings;\n\tdeclare public _privateSettings: ICandlestickPrivate;\n\n\tpublic static className: string = \"Candlestick\";\n\tpublic static classNames: Array<string> = RoundedRectangle.classNames.concat([Candlestick.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"lowX0\") || this.isDirty(\"lowY0\") || this.isDirty(\"lowX1\") || this.isDirty(\"lowY1\") || this.isDirty(\"highX0\") || this.isDirty(\"highX1\") || this.isDirty(\"highY0\") || this.isDirty(\"highY1\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _draw() {\n\t\tsuper._draw();\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX0\", 0), this.get(\"lowY0\", 0));\n\t\tdisplay.lineTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\n\t\tdisplay.moveTo(this.get(\"highX0\", 0), this.get(\"highY0\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\t}\n}\n", "import type { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\n\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings { }\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\t/**\r\n\t * A list of actual columns in a range.\r\n\t */\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t);\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [this.columns.template, axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n}\r\n", "import type { DataItem } from \"../../../core/render/Component\";\n\nimport { ColumnSeries, IColumnSeriesPrivate, IColumnSeriesSettings, IColumnSeriesDataItem, IColumnSeriesAxisRange } from \"./ColumnSeries\";\nimport { Candlestick } from \"./Candlestick\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $array from \"../../../core/util/Array\";\n\nexport interface ICandlestickSeriesDataItem extends IColumnSeriesDataItem {\n}\n\nexport interface ICandlestickSeriesSettings extends IColumnSeriesSettings {\n}\n\nexport interface ICandlestickSeriesPrivate extends IColumnSeriesPrivate {\n}\n\nexport interface ICandlestickSeriesAxisRange extends IColumnSeriesAxisRange {\n\n\t/**\n\t * A list of [[Candlestick]] element in series.\n\t *\n\t * @readonly\n\t */\n\tcolumns: ListTemplate<Candlestick>\n\n}\n\n/**\n * Candlestick series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class CandlestickSeries extends ColumnSeries {\n\n\tdeclare public _settings: ICandlestickSeriesSettings;\n\tdeclare public _privateSettings: ICandlestickSeriesPrivate;\n\tdeclare public _dataItemSettings: ICandlestickSeriesDataItem;\n\tdeclare public _axisRangeType: ICandlestickSeriesAxisRange;\n\n\tpublic static className: string = \"CandlestickSeries\";\n\tpublic static classNames: Array<string> = ColumnSeries.classNames.concat([CandlestickSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Candlestick>): Candlestick {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of candles in the series.\n\t *\n\t * `columns.template` can be used to configure candles.\n\t *\n\t * @default new ListTemplate<Candlestick>\n\t */\n\tpublic readonly columns: ListTemplate<Candlestick> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => Candlestick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateGraphics(dataItem, previousDataItem);\n\n\t\tconst xAxis = this.getRaw(\"xAxis\");\n\t\tconst yAxis = this.getRaw(\"yAxis\");\n\t\tconst baseAxis = this.getRaw(\"baseAxis\");\n\n\t\tlet vcy = this.get(\"vcy\", 1);\n\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\tlet lx0: number;\n\t\tlet lx1: number;\n\t\tlet ly0: number;\n\t\tlet ly1: number;\n\n\t\tlet hx0: number;\n\t\tlet hx1: number;\n\t\tlet hy0: number;\n\t\tlet hy1: number;\n\n\t\tlet locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\tlet locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\tlet openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\tlet openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\tlet orientation: \"horizontal\" | \"vertical\";\n\n\t\tif (yAxis === baseAxis) {\n\t\t\tlet open = xAxis.getDataItemPositionX(dataItem, this._xOpenField, 1, vcx);\n\t\t\tlet close = xAxis.getDataItemPositionX(dataItem, this._xField, 1, vcx);\n\n\t\t\tlx1 = xAxis.getDataItemPositionX(dataItem, this._xLowField, 1, vcx);\n\t\t\thx1 = xAxis.getDataItemPositionX(dataItem, this._xHighField, 1, vcx);\n\n\t\t\thx0 = Math.max(open, close);\n\t\t\tlx0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\tly0 = yAxis.getDataItemPositionY(dataItem, this._yField, startLocation + (endLocation - startLocation) / 2, vcy);\n\t\t\tly1 = ly0;\n\t\t\thy0 = ly0;\n\t\t\thy1 = ly0;\n\n\t\t\torientation = \"horizontal\";\n\t\t}\n\t\telse {\n\t\t\tlet open = yAxis.getDataItemPositionY(dataItem, this._yOpenField, 1, vcy);\n\t\t\tlet close = yAxis.getDataItemPositionY(dataItem, this._yField, 1, vcy);\n\n\t\t\tly1 = yAxis.getDataItemPositionY(dataItem, this._yLowField, 1, vcy);\n\t\t\thy1 = yAxis.getDataItemPositionY(dataItem, this._yHighField, 1, vcy);\n\n\t\t\thy0 = Math.max(open, close);\n\t\t\tly0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\tlx0 = xAxis.getDataItemPositionX(dataItem, this._xField, startLocation + (endLocation - startLocation) / 2, vcx);\n\t\t\tlx1 = lx0;\n\t\t\thx0 = lx0;\n\t\t\thx1 = lx0;\n\n\t\t\torientation = \"vertical\";\n\t\t}\n\n\t\tthis._updateCandleGraphics(dataItem, lx0, lx1, ly0, ly1, hx0, hx1, hy0, hy1, orientation)\n\t}\n\n\tprotected _updateCandleGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, lx0: number, lx1: number, ly0: number, ly1: number, hx0: number, hx1: number, hy0: number, hy1: number, orientation: \"horizontal\" | \"vertical\") {\n\t\tlet column = dataItem.get(\"graphics\") as Candlestick;\n\n\t\tif (column) {\n\t\t\tlet pl0 = this.getPoint(lx0, ly0);\n\t\t\tlet pl1 = this.getPoint(lx1, ly1);\n\n\t\t\tlet ph0 = this.getPoint(hx0, hy0);\n\t\t\tlet ph1 = this.getPoint(hx1, hy1);\n\n\t\t\tlet x = column.x();\n\t\t\tlet y = column.y();\n\n\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\tcolumn.set(\"orientation\", orientation);\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (column: any) => {\n\t\t\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\t\t\tcolumn.set(\"orientation\", orientation);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Candlestick._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n", "import { Candlestick, ICandlestickSettings, ICandlestickPrivate } from \"./Candlestick\";\n\n\nexport interface IOHLCSettings extends ICandlestickSettings {\n}\n\nexport interface IOHLCPrivate extends ICandlestickPrivate {\n}\n\nexport class OHLC extends Candlestick {\n\n\tdeclare public _settings: IOHLCSettings;\n\tdeclare public _privateSettings: IOHLCPrivate;\n\n\tpublic static className: string = \"OHLC\";\n\tpublic static classNames: Array<string> = Candlestick.classNames.concat([OHLC.className]);\n\n\tpublic _draw() {\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\n\t\tlet w = this.width();\n\t\tlet h = this.height();\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\n\t\t\tlet lY = h;\n\t\t\tlet hY = 0;\n\t\t\tdisplay.moveTo(0, lY);\n\t\t\tdisplay.lineTo(w / 2, lY);\n\n\t\t\tdisplay.moveTo(w / 2, hY);\n\t\t\tdisplay.lineTo(w, hY);\n\t\t}\n\t\telse {\n\t\t\tlet lX = 0;\n\t\t\tlet hX = w;\n\n\t\t\tdisplay.moveTo(lX, 0);\n\t\t\tdisplay.lineTo(lX, h / 2);\n\n\t\t\tdisplay.moveTo(hX, h / 2);\n\t\t\tdisplay.lineTo(hX, h);\n\t\t}\n\t}\n}\n", "import type { DataItem } from \"../../../core/render/Component\";\n\nimport { CandlestickSeries, ICandlestickSeriesPrivate, ICandlestickSeriesSettings, ICandlestickSeriesDataItem, ICandlestickSeriesAxisRange } from \"./CandlestickSeries\";\nimport { OHLC } from \"./OHLC\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IOHLCSeriesDataItem extends ICandlestickSeriesDataItem {\n}\n\nexport interface IOHLCSeriesSettings extends ICandlestickSeriesSettings {\n}\n\nexport interface IOHLCSeriesPrivate extends ICandlestickSeriesPrivate {\n}\n\nexport interface IOHLCSeriesAxisRange extends ICandlestickSeriesAxisRange {\n\n\t/**\n\t * List of [[OHLC]] columns in a range.\n\t */\n\tcolumns: ListTemplate<OHLC>\n\n}\n\n/**\n * OHLC series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class OHLCSeries extends CandlestickSeries {\n\n\tdeclare public _settings: IOHLCSeriesSettings;\n\tdeclare public _privateSettings: IOHLCSeriesPrivate;\n\tdeclare public _dataItemSettings: IOHLCSeriesDataItem;\n\tdeclare public _axisRangeType: IOHLCSeriesAxisRange;\n\n\tpublic static className: string = \"OHLCSeries\";\n\tpublic static classNames: Array<string> = CandlestickSeries.classNames.concat([OHLCSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<OHLC>): OHLC {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of OHLC bars in the series.\n\t *\n\t * `columns.template` can be used to configure OHLC bars.\n\t *\n\t * @default new ListTemplate<OHLC>\n\t */\n\tpublic readonly columns: ListTemplate<OHLC> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => OHLC._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => OHLC._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n", "import type { Axis } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport { CurveFactory, line, area } from \"d3-shape\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { color } from \"../../../core/util/Color\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IPointOptions {\n}\n\nexport interface ILineSeriesDataItem extends IXYSeriesDataItem {\n}\n\nexport interface ILineSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * If set to `true` the line will connect over \"gaps\" - categories or time\n\t * intervals with no data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Gaps} for more info\n\t * @default true\n\t */\n\tconnect?: boolean;\n\n\t/**\n\t * If there are more than `autoGapCount` base time intervals (e.g. days) with\n\t * no data, the line will break and will display gap.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Auto_gaps_with_dates} for more info\n\t * @default 1.1\n\t */\n\tautoGapCount?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcurveFactory?: CurveFactory;\n\n\t/**\n\t * Allows simplifying the line with many points.\n\t *\n\t * If set, the series will skip points that are closer than X pixels to each\n\t * other.\n\t *\n\t * With many data points, this allows having smoother, less cluttered lines.\n\t *\n\t * @default 0\n\t * @since 5.2.7\n\t */\n\tminDistance?: number;\n\n\n}\n\nexport interface ILineSeriesPrivate extends IXYSeriesPrivate {\n}\n\n/**\n * Interface representing a [[LineSeries]] axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface ILineSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list template to use when applying line settings to the line segments covered\n\t * by an axis range.\n\t */\n\tstrokes?: ListTemplate<Graphics>;\n\n\t/**\n\t * A list template to use when applying fill settings to the fill segments covered\n\t * by an axis range.\n\t */\n\tfills?: ListTemplate<Graphics>;\n}\n\n/**\n * Used to plot line and/or area series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\n * @important\n */\nexport class LineSeries extends XYSeries {\n\n\tdeclare public _settings: ILineSeriesSettings;\n\tdeclare public _privateSettings: ILineSeriesPrivate;\n\tdeclare public _dataItemSettings: ILineSeriesDataItem;\n\tdeclare public _axisRangeType: ILineSeriesAxisRange;\n\n\tpublic static className: string = \"LineSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([LineSeries.className]);\n\n\tprotected _endIndex!: number;\n\n\tprotected _strokeGenerator = line();\n\tprotected _fillGenerator = area();\n\n\tprotected _legendStroke?: Graphics;\n\tprotected _legendFill?: Graphics;\n\n\tprotected _afterNew() {\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeStroke(strokes: ListTemplate<Graphics>): Graphics {\n\t\tconst stroke = this.mainContainer.children.push(strokes.make());\n\t\tstrokes.push(stroke);\n\t\treturn stroke;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all line segments in series.\n\t *\n\t * `strokes.template` can be used to set default settings for all line\n\t * segments, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly strokes: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n\t\t}, [this.strokes.template]),\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeFill(fills: ListTemplate<Graphics>): Graphics {\n\t\tconst fill = this.mainContainer.children.push(fills.make());\n\t\tfills.push(fill);\n\t\treturn fill;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all segment fills in series.\n\t *\n\t * `fills.template` can be used to set default settings for all segment\n\t * fills, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly fills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n\t\t}, [this.fills.template]),\n\t);\n\n\t// custom set from data\n\tprotected _fillTemplate: Template<Graphics> | undefined;\n\tprotected _strokeTemplate: Template<Graphics> | undefined;\n\n\tprotected _previousPoint: Array<number> = [0, 0, 0, 0];\n\n\tprotected _dindex = 0;\n\tprotected _sindex = 0;\n\n\tpublic _updateChildren() {\n\n\t\tthis._strokeTemplate = undefined;\n\t\tthis._fillTemplate = undefined;\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tconst stroke = this.get(\"stroke\");\n\t\t\tthis.strokes.template.set(\"stroke\", stroke);\n\t\t\tconst legendStroke = this._legendStroke;\n\t\t\tif (legendStroke) {\n\t\t\t\tlegendStroke.states.lookup(\"default\")!.set(\"stroke\", stroke);\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tthis.fills.template.set(\"fill\", fill);\n\t\t\tconst legendFill = this._legendFill;\n\t\t\tif (legendFill) {\n\t\t\t\tlegendFill.states.lookup(\"default\")!.set(\"fill\", fill);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"curveFactory\")) {\n\t\t\tconst curveFactory = this.get(\"curveFactory\")!;\n\t\t\tif (curveFactory) {\n\t\t\t\tthis._strokeGenerator.curve(curveFactory);\n\t\t\t\tthis._fillGenerator.curve(curveFactory);\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\n\n\t\t\t\tthis.fills.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.strokes.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tlet fills = axisRange.fills;\n\t\t\t\t\tif (fills) {\n\t\t\t\t\t\tfills.each((fill) => {\n\t\t\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tlet strokes = axisRange.strokes;\n\t\t\t\t\tif (strokes) {\n\t\t\t\t\t\tstrokes.each((stroke) => {\n\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet startIndex = this.startIndex();\n\n\t\t\t\tlet strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\t\t\tlet fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\t\t\tlet strokeTemplateFound = true;\n\t\t\t\tlet fillTemplateFound = true;\n\n\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\tstrokeTemplateFound = false;\n\t\t\t\t}\n\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\tfillTemplateFound = false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex - 1; i >= 0; i--) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\tlet dataContext = dataItem.dataContext as any;\n\t\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\t\tif (dataContext[strokeTemplateField]) {\n\t\t\t\t\t\t\tstrokeTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\t\tif (dataContext[fillTemplateField]) {\n\t\t\t\t\t\t\tfillTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tif (hasValues && strokeTemplateFound && fillTemplateFound) {\n\t\t\t\t\t\tstartIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tlet len = this.dataItems.length;\n\t\t\t\tlet endIndex = this.endIndex();\n\n\t\t\t\tif (endIndex < len) {\n\t\t\t\t\tendIndex++;\n\t\t\t\t\tfor (let i = endIndex; i < len; i++) {\n\t\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (hasValues) {\n\t\t\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\tstartIndex--;\n\t\t\t\t}\n\n\t\t\t\tthis._endIndex = endIndex;\n\n\t\t\t\tthis._clearGraphics();\n\t\t\t\tthis._sindex = 0;\n\t\t\t\tthis._dindex = startIndex;\n\t\t\t\tif (this.dataItems.length == 1) {\n\t\t\t\t\tthis._startSegment(0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// this is done to avoid recursion with a lot of segments \n\t\t\t\t\twhile (this._dindex < endIndex - 1) {\n\t\t\t\t\t\tthis._startSegment(this._dindex);\n\t\t\t\t\t\tthis._sindex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _clearGraphics() {\n\t\tthis.strokes.clear();\n\t\tthis.fills.clear();\n\t}\n\n\tprotected _startSegment(dataItemIndex: number) {\n\t\tlet endIndex = this._endIndex;\n\t\tlet currentEndIndex = endIndex;\n\n\t\tconst autoGapCount = this.get(\"autoGapCount\")!;\n\t\tconst connect = this.get(\"connect\");\n\n\t\tconst fill = this.makeFill(this.fills);\n\n\t\tconst fillTemplate = this._fillTemplate;\n\t\tconst originalTemplate = this.fills.template;\n\t\tif (fillTemplate && fillTemplate != originalTemplate) {\n\t\t\tfill.template = fillTemplate;\n\t\t}\n\n\t\tfill.setPrivate(\"visible\", true);\n\n\t\tconst stroke = this.makeStroke(this.strokes);\n\n\t\tconst strokeTemplate = this._strokeTemplate;\n\t\tif (strokeTemplate && strokeTemplate != this.strokes.template) {\n\t\t\tstroke.template = strokeTemplate;\n\t\t}\n\n\t\tstroke.setPrivate(\"visible\", true);\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\t\tlet baseAxis = this.get(\"baseAxis\")!;\n\n\t\tlet vcx = this.get(\"vcx\", 1);\n\t\tlet vcy = this.get(\"vcy\", 1);\n\n\t\tlet xField = this._xField;\n\t\tlet yField = this._yField;\n\n\t\tlet xOpenField = this._xOpenField;\n\t\tlet yOpenField = this._yOpenField;\n\n\t\tconst xOpenFieldValue = this.get(\"openValueXField\");\n\t\tconst yOpenFieldValue = this.get(\"openValueYField\");\n\n\t\tif (!xOpenFieldValue) {\n\t\t\txOpenField = this._xField;\n\t\t}\n\n\t\tif (!yOpenFieldValue) {\n\t\t\tyOpenField = this._yField;\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tconst basePosX = xAxis.basePosition();\n\t\tconst basePosY = yAxis.basePosition();\n\n\t\tlet baseField: string;\n\t\tif (baseAxis === yAxis) {\n\t\t\tbaseField = this._yField;\n\t\t}\n\t\telse {\n\t\t\tbaseField = this._xField;\n\t\t}\n\n\t\tconst segments: Array<Array<Array<number>>> = [];\n\t\tlet points: Array<Array<number>> = [];\n\t\tsegments.push(points);\n\n\t\tconst strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\tconst fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\tlet locationX = this.get(\"locationX\", 0.5);\n\t\tlet locationY = this.get(\"locationY\", 0.5);\n\n\t\tlet openLocationX = this.get(\"openLocationX\", locationX);\n\t\tlet openLocationY = this.get(\"openLocationY\", locationY);\n\n\t\tconst minDistance = this.get(\"minDistance\", 0);\n\n\t\tlet i: number;\n\n\t\tlet fillVisible = this.fills.template.get(\"visible\");\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tfillVisible = true;\n\t\t}\n\n\t\tlet getOpen = false;\n\t\tif (stacked || xOpenFieldValue || yOpenFieldValue) {\n\t\t\tgetOpen = true;\n\t\t}\n\n\t\tconst o = {\n\t\t\tpoints, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY, minDistance\n\t\t}\n\n\n\t\tlet rangeStrokeTemplate = this._strokeTemplate;\n\t\tlet rangeFillTemplate = this._fillTemplate;\n\n\t\tfor (i = dataItemIndex; i < currentEndIndex; i++) {\n\t\t\tthis._dindex = i;\n\t\t\tconst dataItem = this._dataItems[i];\n\n\t\t\tlet valueX = dataItem.get(xField as any);\n\t\t\tlet valueY = dataItem.get(yField as any);\n\n\t\t\tif (valueX == null || valueY == null) {\n\t\t\t\tif (!connect) {\n\t\t\t\t\tpoints = [];\n\t\t\t\t\tsegments.push(points);\n\t\t\t\t\to.points = points;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getPoints(dataItem, o);\n\t\t\t}\n\n\t\t\tif (strokeTemplateField) {\n\t\t\t\tlet strokeTemplate = (dataItem.dataContext as any)[strokeTemplateField]\n\t\t\t\tif (strokeTemplate) {\n\t\t\t\t\tif (!(strokeTemplate instanceof Template)) {\n\t\t\t\t\t\tstrokeTemplate = Template.new(strokeTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._strokeTemplate = strokeTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\trangeStrokeTemplate = strokeTemplate;\n\t\t\t\t\t\tstroke.template = strokeTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fillTemplateField) {\n\t\t\t\tlet fillTemplate = (dataItem.dataContext as any)[fillTemplateField]\n\t\t\t\tif (fillTemplate) {\n\t\t\t\t\tif (!(fillTemplate instanceof Template)) {\n\t\t\t\t\t\tfillTemplate = Template.new(fillTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._fillTemplate = fillTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\trangeFillTemplate = fillTemplate;\n\t\t\t\t\t\tfill.template = fillTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!connect) {\n\t\t\t\tlet nextItem = this.dataItems[i + 1];\n\t\t\t\tif (nextItem) {\n\t\t\t\t\tif (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\n\t\t\t\t\t\tpoints = [];\n\t\t\t\t\t\tsegments.push(points);\n\t\t\t\t\t\to.points = points;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\n\t\tif (i === endIndex) {\n\t\t\tthis._endLine(points, segments[0][0]);\n\t\t}\n\n\t\tif (stroke) {\n\t\t\tthis._drawStroke(stroke, segments);\n\t\t}\n\n\t\tif (fill) {\n\t\t\tthis._drawFill(fill, segments);\n\t\t}\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tconst container = axisRange.container;\n\t\t\tconst fills = axisRange.fills!;\n\t\t\tconst fill = this.makeFill(fills);\n\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(fill);\n\t\t\t}\n\n\t\t\tfill.setPrivate(\"visible\", true);\n\t\t\tthis._drawFill(fill, segments);\n\n\t\t\tconst strokes = axisRange.strokes!;\n\t\t\tconst stroke = this.makeStroke(strokes);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(stroke);\n\t\t\t}\n\n\t\t\tif (rangeStrokeTemplate && rangeStrokeTemplate != this.strokes.template) {\n\t\t\t\tstroke.template = rangeStrokeTemplate;\n\t\t\t}\t\t\t\n\n\t\t\tif (rangeFillTemplate && rangeFillTemplate != this.fills.template) {\n\t\t\t\tfill.template = rangeFillTemplate;\n\t\t\t}\t\t\t\t\t\t\n\n\t\t\tstroke.setPrivate(\"visible\", true);\n\t\t\tthis._drawStroke(stroke, segments);\n\n\t\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t})\n\t}\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number, minDistance: number }) {\n\t\tlet points = o.points;\n\n\t\tlet itemLocationX = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY = dataItem.get(\"locationY\", o.locationY);\n\n\t\tlet xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx);\n\t\tlet yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy);\n\n\t\tif (this._shouldInclude(xPos)) {\n\n\t\t\tconst iPoint = this.getPoint(xPos, yPos);\n\t\t\tconst point = [iPoint.x, iPoint.y];\n\n\t\t\tiPoint.x += this._x;\n\t\t\tiPoint.y += this._y;\n\n\t\t\tdataItem.set(\"point\", iPoint);\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xPos0: number = xPos;\n\t\t\t\tlet yPos0: number = yPos;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(xPos0)) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(yPos0)) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint = this.getPoint(xPos0, yPos0);\n\n\t\t\t\tpoint[2] = closeIPoint.x;\n\t\t\t\tpoint[3] = closeIPoint.y;\n\t\t\t}\n\n\t\t\tif (o.minDistance > 0) {\n\t\t\t\tconst p0 = point[0];\n\t\t\t\tconst p1 = point[1];\n\t\t\t\tconst p2 = point[2];\n\t\t\t\tconst p3 = point[3];\n\n\t\t\t\tconst prev = this._previousPoint;\n\n\t\t\t\tconst pp0 = prev[0];\n\t\t\t\tconst pp1 = prev[1];\n\t\t\t\tconst pp2 = prev[2];\n\t\t\t\tconst pp3 = prev[3];\n\n\t\t\t\tif (Math.hypot(p0 - pp0, p1 - pp1) > o.minDistance || (p2 && p3 && Math.hypot(p2 - pp2, p3 - pp3) > o.minDistance)) {\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t\tthis._previousPoint = point;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpoints.push(point);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _endLine(_points: Array<Array<number>>, _firstPoint: Array<number>) {\n\n\t}\n\n\tprotected _drawStroke(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._strokeGenerator.context(display as any);\n\t\t\t\t\tthis._strokeGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _drawFill(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._fillGenerator.context(display as any);\n\t\t\t\t\tthis._fillGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.fills = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.fills!.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\n\t\t\t}, [this.fills.template, axisRange.fills!.template]),\n\t\t);\n\n\t\taxisRange.strokes = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.strokes!.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\n\t\t\t}, [this.strokes.template, axisRange.strokes!.template])\n\t\t);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\t\t\tconst marker = legendDataItem.get(\"marker\");\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\tif (markerRectangle) {\n\t\t\t\tmarkerRectangle.setPrivate(\"visible\", false);\n\t\t\t}\n\n\t\t\tmarker.set(\"background\", Rectangle.new(marker._root, { fillOpacity: 0, fill: color(0x000000) }))\n\n\t\t\tconst legendStroke = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"], interactive: false\n\t\t\t}, [this.strokes.template]));\n\n\t\t\tthis._legendStroke = legendStroke;\n\n\t\t\tconst legendFill = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\n\t\t\t}, [this.fills.template]));\n\n\t\t\tthis._legendFill = legendFill;\n\n\t\t\tconst disabledColor = this._root.interfaceColors.get(\"disabled\");\n\n\t\t\tlegendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\tlegendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\n\t\t\tif (this.bullets.length > 0) {\n\t\t\t\tconst bulletFunction = this.bullets.getIndex(0);\n\t\t\t\tif (bulletFunction) {\n\t\t\t\t\tconst bullet = bulletFunction(marker._root, this, new DataItem(this, { legend: true }, {}));\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite instanceof Graphics) {\n\t\t\t\t\t\t\tsprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.set(\"tooltipText\", undefined);\n\t\t\t\t\t\t\tsprite.set(\"tooltipHTML\", undefined);\n\n\t\t\t\t\t\t\tmarker.children.push(sprite);\n\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\n\t\t\t\t\t\t\tmarker.events.on(\"boundschanged\", ()=>{\n\t\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n", "/**\n * @ignore\n */\nexport class MonotoneYTension {\n\n  constructor(context: any, tension: number) {\n    this._context = context;\n    this._tension = tension;\n  }\n\n  public _line = 0;\n  public _point = 0;\n  public _context: any;\n  public _x0 = 0;\n  public _x1 = 0;\n  public _y0 = 0;\n  public _y1 = 0;\n  public _t0 = 0;\n\n  public _tension: number = 0;\n\n  public areaStart() {\n    this._line = 0;\n  }\n\n  public areaEnd() {\n    this._line = NaN;\n  }\n\n  public lineStart() {\n    this._x0 = this._x1 =\n      this._y0 = this._y1 =\n      this._t0 = NaN;\n    this._point = 0;\n  }\n\n  public lineEnd() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  }\n\n  public point(x: number, y: number) {\n\n    [x, y] = [y, x]\n\n    let t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(y, x) : this._context.moveTo(y, x); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\n/**\n * @ignore\n */\nexport function curveMonotoneYTension(tension: number) {\n\n  function monotoneYTension(context: any) {\n    return new MonotoneYTension(context, tension);\n  }\n\n  monotoneYTension.tension = function(tension: number) {\n    return curveMonotoneYTension(+tension);\n  };\n\n  return monotoneYTension;\n}\n\n\n/**\n * @ignore\n */\nfunction sign(x: number) {\n  return x < 0 ? -1 : 1;\n}\n\n/**\n * @ignore\n */\nfunction slope3(that: MonotoneYTension, x2: number, y2: number) {\n  let h0 = (that._x1 - that._x0) as any;\n  let h1 = (x2 - that._x1) as any;\n  let s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0);\n  let s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0);\n  let p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n/**\n * @ignore\n */\nfunction slope2(that: MonotoneYTension, t: number) {\n  let h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n/**\n * @ignore\n */\nfunction point(that: MonotoneYTension, t0: number, t1: number) {\n  let x0 = that._x0,\n    y0 = that._y0,\n    x1 = that._x1,\n    y1 = that._y1,\n    dx = (x1 - x0) / 1.5 * (1 - that._tension);\n  that._context.bezierCurveTo(y0 + dx * t0, x0 + dx, y1 - dx * t1, x1 - dx, y1, x1);\n}", "import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneYTension } from \"../../../core/render/MonotoneYTension\";\n\nexport interface ISmoothedYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedYLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for vertical plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedYLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedYLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n", "/**\n * @ignore\n */\nexport class MonotoneXTension {\n\n  constructor(context: CanvasRenderingContext2D, tension: number) {\n    this._context = context;\n    this._tension = tension;\n  }\n\n  public _line = 0;\n  public _point = 0;\n  public _context: any;\n  public _x0 = 0;\n  public _x1 = 0;\n  public _y0 = 0;\n  public _y1 = 0;\n  public _t0 = 0;\n\n  public _tension: number = 0;\n\n  public areaStart() {\n    this._line = 0;\n  }\n\n  public areaEnd() {\n    this._line = NaN;\n  }\n\n  public lineStart() {\n    this._x0 = this._x1 =\n      this._y0 = this._y1 =\n      this._t0 = NaN;\n    this._point = 0;\n  }\n\n  public lineEnd() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  }\n\n  public point(x: number, y: number) {\n    let t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\n/**\n * @ignore\n */\nexport function curveMonotoneXTension(tension: number) {\n\n  function monotoneXTension(context: any) {\n    return new MonotoneXTension(context, tension);\n  }\n\n  return monotoneXTension;\n}\n\n/**\n * @ignore\n */\nfunction sign(x: number) {\n  return x < 0 ? -1 : 1;\n}\n\n/**\n * @ignore\n */\nfunction slope3(that: MonotoneXTension, x2: number, y2: number) {\n  let h0 = (that._x1 - that._x0) as any;\n  let h1 = (x2 - that._x1) as any;\n  let s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0);\n  let s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0);\n  let p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n/**\n * @ignore\n */\nfunction slope2(that: MonotoneXTension, t: number) {\n  let h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n/**\n * @ignore\n */\nfunction point(that: MonotoneXTension, t0: number, t1: number) {\n  let x0 = that._x0,\n    y0 = that._y0,\n    x1 = that._x1,\n    y1 = that._y1,\n    dx = (x1 - x0) / 1.5 * (1 - that._tension);\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}", "import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\n\n\nexport interface ISmoothedXLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedXLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for horizontal plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedXLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedXLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedXLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n", "import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveCardinal, CurveCardinalFactory } from \"d3-shape\";\n\nexport interface SmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface SmoothedXYLineSeriesProperties extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n\t/**\n\t * @ignore\n\t*/\n\tcurveFactory?: CurveCardinalFactory\n\n}\n\nexport interface SmoothedXYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for XY (scatter) charts\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXYLineSeries.className]);\n\n\tdeclare public _settings: SmoothedXYLineSeriesProperties;\n\tdeclare public _privateSettings: SmoothedXYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: SmoothedXYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)));\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n", "import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { Axis } from \"../axes/Axis\";\nimport { Percent, p100 } from \"../../../core/util/Percent\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport { curveStepAfter } from \"d3-shape\";\n\nexport interface IStepLineSeriesDataItem extends ILineSeriesDataItem {\n}\n\nexport interface IStepLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * Width of the step in percent relative to the cell width.\n\t *\n\t * NOTE: setting this to less than 100% makes sense only when risers are\n\t * disabled: `noRisers: true`\n\t *\n\t * @default 100%\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Step_width} for more info\n\t */\n\tstepWidth?: Percent;\n\n\t/**\n\t * Disables vertical connecting lines for the steps.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Disabling_risers} for more info\n\t */\n\tnoRisers?: boolean;\n\n}\n\nexport interface IStepLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\nexport class StepLineSeries extends LineSeries {\n\tpublic static className: string = \"StepLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([StepLineSeries.className]);\n\n\tdeclare public _settings: IStepLineSeriesSettings;\n\tdeclare public _privateSettings: IStepLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IStepLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveStepAfter);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet width = this.get(\"stepWidth\", p100).value / 2;\n\n\t\tlet itemLocationX0 = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY0 = dataItem.get(\"locationY\", o.locationY);\n\t\tlet itemLocationX1 = itemLocationX0;\n\t\tlet itemLocationY1 = itemLocationY0;\n\n\t\tif (o.baseAxis === o.xAxis) {\n\t\t\titemLocationX0 -= width;\n\t\t\titemLocationX1 += width;\n\t\t}\n\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\titemLocationY0 -= width;\n\t\t\titemLocationY1 += width;\n\t\t}\n\n\t\tlet xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX0, o.vcx);\n\t\tlet yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY0, o.vcy);\n\n\t\tlet xPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX1, o.vcx);\n\t\tlet yPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY1, o.vcy);\n\n\t\tif (this._shouldInclude(xPos0)) {\n\n\t\t\tconst iPoint0 = this.getPoint(xPos0, yPos0);\n\t\t\tconst point0 = [iPoint0.x, iPoint0.y];\n\n\t\t\tconst iPoint1 = this.getPoint(xPos1, yPos1);\n\t\t\tconst point1 = [iPoint1.x, iPoint1.y];\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xOpenPos0: number = xPos0;\n\t\t\t\tlet yOpenPos0: number = yPos0;\n\t\t\t\tlet xOpenPos1: number = xPos1;\n\t\t\t\tlet yOpenPos1: number = yPos1;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\titemLocationX0 = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\titemLocationY0 = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\titemLocationX1 = itemLocationX0;\n\t\t\t\t\t\titemLocationY1 = itemLocationY0;\n\n\t\t\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\t\t\titemLocationX0 -= width;\n\t\t\t\t\t\t\titemLocationX1 += width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\titemLocationY0 -= width;\n\t\t\t\t\t\t\titemLocationY1 += width;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX0, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX1, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY0, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY1, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint0 = this.getPoint(xOpenPos0, yOpenPos0);\n\t\t\t\tlet closeIPoint1 = this.getPoint(xOpenPos1, yOpenPos1);\n\n\t\t\t\tpoint0[2] = closeIPoint0.x;\n\t\t\t\tpoint0[3] = closeIPoint0.y;\n\n\t\t\t\tpoint1[2] = closeIPoint1.x;\n\t\t\t\tpoint1[3] = closeIPoint1.y;\n\t\t\t}\n\n\t\t\tpoints.push(point0);\n\t\t\tpoints.push(point1);\n\n\t\t\tdataItem.set(\"point\", {x:point0[0] + (point1[0] - point0[0]) / 2, y:point0[1] + (point1[1] - point0[1]) / 2 });\n\t\t}\n\n\t\tif (this.get(\"noRisers\")) {\n\t\t\to.points = [];\n\t\t\to.segments.push(points);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["copy", "min", "round", "sign", "eventType", "each", "point", "color", "closest", "chart", "point", "field", "stacked", "each", "point", "xAxis", "yAxis", "min", "max", "i", "dataItem", "graphics", "point", "sAnimation", "eAnimation", "remove", "bounds", "key", "format", "min", "max", "stepPower", "series", "min", "max", "groupInterval", "copy", "dataContext", "date", "min", "max", "value", "index", "min", "max", "closest", "each", "point", "point2", "x", "point2", "column", "strokeTemplate", "fillTemplate", "fill", "stroke", "point", "itemLocationX", "itemLocationY", "tension", "point", "slope2", "slope3", "sign"]
}
